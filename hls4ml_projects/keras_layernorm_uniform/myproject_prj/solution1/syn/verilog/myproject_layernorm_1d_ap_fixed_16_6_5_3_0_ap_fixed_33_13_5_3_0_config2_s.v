// ==============================================================
// RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL
// Version: 2020.1
// Copyright (C) 1986-2020 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module myproject_layernorm_1d_ap_fixed_16_6_5_3_0_ap_fixed_33_13_5_3_0_config2_s (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        ap_ce,
        p_read,
        p_read1,
        p_read2,
        p_read3,
        p_read4,
        ap_return_0,
        ap_return_1,
        ap_return_2,
        ap_return_3,
        ap_return_4
);

parameter    ap_ST_fsm_pp0_stage0 = 1'd1;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
input   ap_ce;
input  [15:0] p_read;
input  [15:0] p_read1;
input  [15:0] p_read2;
input  [15:0] p_read3;
input  [15:0] p_read4;
output  [32:0] ap_return_0;
output  [32:0] ap_return_1;
output  [32:0] ap_return_2;
output  [32:0] ap_return_3;
output  [32:0] ap_return_4;

reg ap_done;
reg ap_idle;
reg ap_ready;

(* fsm_encoding = "none" *) reg   [0:0] ap_CS_fsm;
wire    ap_CS_fsm_pp0_stage0;
wire    ap_enable_reg_pp0_iter0;
wire    ap_block_pp0_stage0;
reg    ap_enable_reg_pp0_iter1;
reg    ap_enable_reg_pp0_iter2;
reg    ap_enable_reg_pp0_iter3;
reg    ap_enable_reg_pp0_iter4;
reg    ap_idle_pp0;
reg    ap_block_state1_pp0_stage0_iter0;
wire    ap_block_state2_pp0_stage0_iter1;
wire    ap_block_state3_pp0_stage0_iter2;
wire    ap_block_state4_pp0_stage0_iter3;
wire    ap_block_state5_pp0_stage0_iter4;
reg    ap_block_pp0_stage0_11001;
wire   [12:0] invert_sqr_table_address0;
reg    invert_sqr_table_ce0;
wire   [26:0] invert_sqr_table_q0;
wire   [18:0] shl_ln_fu_103_p3;
reg   [18:0] shl_ln_reg_543;
wire   [18:0] shl_ln728_1_fu_111_p3;
reg   [18:0] shl_ln728_1_reg_548;
wire   [18:0] shl_ln728_2_fu_119_p3;
reg   [18:0] shl_ln728_2_reg_553;
wire   [18:0] shl_ln728_3_fu_127_p3;
reg   [18:0] shl_ln728_3_reg_558;
wire   [18:0] shl_ln728_4_fu_135_p3;
reg   [18:0] shl_ln728_4_reg_563;
reg   [17:0] mean_V_reg_568;
wire  signed [18:0] sub_ln703_fu_183_p2;
reg  signed [18:0] sub_ln703_reg_573;
reg  signed [18:0] sub_ln703_reg_573_pp0_iter2_reg;
reg  signed [18:0] sub_ln703_reg_573_pp0_iter3_reg;
reg   [18:0] trunc_ln_reg_578;
wire  signed [18:0] sub_ln703_1_fu_201_p2;
reg  signed [18:0] sub_ln703_1_reg_583;
reg  signed [18:0] sub_ln703_1_reg_583_pp0_iter2_reg;
reg  signed [18:0] sub_ln703_1_reg_583_pp0_iter3_reg;
reg   [18:0] trunc_ln708_1_reg_588;
wire  signed [18:0] sub_ln703_2_fu_219_p2;
reg  signed [18:0] sub_ln703_2_reg_593;
reg  signed [18:0] sub_ln703_2_reg_593_pp0_iter2_reg;
reg  signed [18:0] sub_ln703_2_reg_593_pp0_iter3_reg;
wire  signed [18:0] sub_ln703_3_fu_237_p2;
reg  signed [18:0] sub_ln703_3_reg_598;
reg  signed [18:0] sub_ln703_3_reg_598_pp0_iter2_reg;
reg  signed [18:0] sub_ln703_3_reg_598_pp0_iter3_reg;
wire  signed [18:0] sub_ln703_4_fu_255_p2;
reg  signed [18:0] sub_ln703_4_reg_603;
reg  signed [18:0] sub_ln703_4_reg_603_pp0_iter2_reg;
reg  signed [18:0] sub_ln703_4_reg_603_pp0_iter3_reg;
wire   [18:0] add_ln703_6_fu_279_p2;
reg   [18:0] add_ln703_6_reg_608;
reg   [17:0] var_V_reg_613;
reg    ap_block_pp0_stage0_subdone;
wire   [63:0] zext_ln145_fu_360_p1;
wire   [18:0] add_ln703_1_fu_149_p2;
wire   [18:0] add_ln703_2_fu_155_p2;
wire   [18:0] add_ln703_fu_143_p2;
wire  signed [18:0] add_ln703_3_fu_161_p2;
wire  signed [30:0] r_V_fu_494_p2;
wire  signed [18:0] sext_ln708_fu_180_p1;
wire  signed [31:0] mul_ln708_fu_501_p2;
wire  signed [31:0] mul_ln708_1_fu_508_p2;
wire  signed [31:0] mul_ln708_2_fu_515_p2;
wire  signed [31:0] mul_ln708_3_fu_522_p2;
wire  signed [31:0] mul_ln708_4_fu_529_p2;
wire   [18:0] trunc_ln708_3_fu_246_p4;
wire   [18:0] trunc_ln708_4_fu_264_p4;
wire   [18:0] add_ln703_5_fu_273_p2;
wire   [18:0] trunc_ln708_2_fu_228_p4;
wire   [18:0] add_ln703_4_fu_285_p2;
wire  signed [18:0] add_ln703_7_fu_289_p2;
wire  signed [30:0] r_V_1_fu_536_p2;
wire  signed [18:0] sext_ln708_1_fu_307_p1;
wire   [18:0] ret_V_fu_310_p2;
wire   [0:0] tmp_fu_316_p3;
wire   [18:0] index_1_fu_324_p3;
wire   [5:0] tmp_1_fu_336_p4;
wire   [0:0] icmp_ln144_fu_346_p2;
wire   [12:0] trunc_ln141_fu_332_p1;
wire   [12:0] index_2_fu_352_p3;
wire   [26:0] mul_ln1118_fu_372_p0;
wire   [45:0] zext_ln1116_fu_365_p1;
wire   [45:0] mul_ln1118_fu_372_p2;
wire   [26:0] mul_ln1118_1_fu_391_p0;
wire   [45:0] mul_ln1118_1_fu_391_p2;
wire   [26:0] mul_ln1118_2_fu_410_p0;
wire   [45:0] mul_ln1118_2_fu_410_p2;
wire   [26:0] mul_ln1118_3_fu_429_p0;
wire   [45:0] mul_ln1118_3_fu_429_p2;
wire   [26:0] mul_ln1118_4_fu_448_p0;
wire   [45:0] mul_ln1118_4_fu_448_p2;
wire   [11:0] r_V_fu_494_p0;
wire  signed [18:0] mul_ln708_fu_501_p0;
wire  signed [31:0] sext_ln1118_1_fu_188_p1;
wire  signed [18:0] mul_ln708_fu_501_p1;
wire  signed [18:0] mul_ln708_1_fu_508_p0;
wire  signed [31:0] sext_ln1118_2_fu_206_p1;
wire  signed [18:0] mul_ln708_1_fu_508_p1;
wire  signed [18:0] mul_ln708_2_fu_515_p0;
wire  signed [31:0] sext_ln1118_3_fu_224_p1;
wire  signed [18:0] mul_ln708_2_fu_515_p1;
wire  signed [18:0] mul_ln708_3_fu_522_p0;
wire  signed [31:0] sext_ln1118_4_fu_242_p1;
wire  signed [18:0] mul_ln708_3_fu_522_p1;
wire  signed [18:0] mul_ln708_4_fu_529_p0;
wire  signed [31:0] sext_ln1118_5_fu_260_p1;
wire  signed [18:0] mul_ln708_4_fu_529_p1;
wire   [11:0] r_V_1_fu_536_p0;
reg   [0:0] ap_NS_fsm;
reg    ap_idle_pp0_0to3;
reg    ap_reset_idle_pp0;
reg    ap_reset_start_pp0;
wire    ap_enable_pp0;

// power-on initialization
initial begin
#0 ap_CS_fsm = 1'd1;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter2 = 1'b0;
#0 ap_enable_reg_pp0_iter3 = 1'b0;
#0 ap_enable_reg_pp0_iter4 = 1'b0;
end

myproject_layernorm_1d_ap_fixed_16_6_5_3_0_ap_fixed_33_13_5_3_0_config2_s_invert_sqr_tabkb #(
    .DataWidth( 27 ),
    .AddressRange( 8192 ),
    .AddressWidth( 13 ))
invert_sqr_table_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(invert_sqr_table_address0),
    .ce0(invert_sqr_table_ce0),
    .q0(invert_sqr_table_q0)
);

myproject_mul_27ns_19s_46_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 27 ),
    .din1_WIDTH( 19 ),
    .dout_WIDTH( 46 ))
mul_27ns_19s_46_1_1_U1(
    .din0(mul_ln1118_fu_372_p0),
    .din1(sub_ln703_reg_573_pp0_iter3_reg),
    .dout(mul_ln1118_fu_372_p2)
);

myproject_mul_27ns_19s_46_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 27 ),
    .din1_WIDTH( 19 ),
    .dout_WIDTH( 46 ))
mul_27ns_19s_46_1_1_U2(
    .din0(mul_ln1118_1_fu_391_p0),
    .din1(sub_ln703_1_reg_583_pp0_iter3_reg),
    .dout(mul_ln1118_1_fu_391_p2)
);

myproject_mul_27ns_19s_46_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 27 ),
    .din1_WIDTH( 19 ),
    .dout_WIDTH( 46 ))
mul_27ns_19s_46_1_1_U3(
    .din0(mul_ln1118_2_fu_410_p0),
    .din1(sub_ln703_2_reg_593_pp0_iter3_reg),
    .dout(mul_ln1118_2_fu_410_p2)
);

myproject_mul_27ns_19s_46_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 27 ),
    .din1_WIDTH( 19 ),
    .dout_WIDTH( 46 ))
mul_27ns_19s_46_1_1_U4(
    .din0(mul_ln1118_3_fu_429_p0),
    .din1(sub_ln703_3_reg_598_pp0_iter3_reg),
    .dout(mul_ln1118_3_fu_429_p2)
);

myproject_mul_27ns_19s_46_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 27 ),
    .din1_WIDTH( 19 ),
    .dout_WIDTH( 46 ))
mul_27ns_19s_46_1_1_U5(
    .din0(mul_ln1118_4_fu_448_p0),
    .din1(sub_ln703_4_reg_603_pp0_iter3_reg),
    .dout(mul_ln1118_4_fu_448_p2)
);

myproject_mul_mul_12ns_19s_31_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 12 ),
    .din1_WIDTH( 19 ),
    .dout_WIDTH( 31 ))
mul_mul_12ns_19s_31_1_1_U6(
    .din0(r_V_fu_494_p0),
    .din1(add_ln703_3_fu_161_p2),
    .dout(r_V_fu_494_p2)
);

myproject_mul_mul_19s_19s_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 19 ),
    .din1_WIDTH( 19 ),
    .dout_WIDTH( 32 ))
mul_mul_19s_19s_32_1_1_U7(
    .din0(mul_ln708_fu_501_p0),
    .din1(mul_ln708_fu_501_p1),
    .dout(mul_ln708_fu_501_p2)
);

myproject_mul_mul_19s_19s_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 19 ),
    .din1_WIDTH( 19 ),
    .dout_WIDTH( 32 ))
mul_mul_19s_19s_32_1_1_U8(
    .din0(mul_ln708_1_fu_508_p0),
    .din1(mul_ln708_1_fu_508_p1),
    .dout(mul_ln708_1_fu_508_p2)
);

myproject_mul_mul_19s_19s_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 19 ),
    .din1_WIDTH( 19 ),
    .dout_WIDTH( 32 ))
mul_mul_19s_19s_32_1_1_U9(
    .din0(mul_ln708_2_fu_515_p0),
    .din1(mul_ln708_2_fu_515_p1),
    .dout(mul_ln708_2_fu_515_p2)
);

myproject_mul_mul_19s_19s_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 19 ),
    .din1_WIDTH( 19 ),
    .dout_WIDTH( 32 ))
mul_mul_19s_19s_32_1_1_U10(
    .din0(mul_ln708_3_fu_522_p0),
    .din1(mul_ln708_3_fu_522_p1),
    .dout(mul_ln708_3_fu_522_p2)
);

myproject_mul_mul_19s_19s_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 19 ),
    .din1_WIDTH( 19 ),
    .dout_WIDTH( 32 ))
mul_mul_19s_19s_32_1_1_U11(
    .din0(mul_ln708_4_fu_529_p0),
    .din1(mul_ln708_4_fu_529_p1),
    .dout(mul_ln708_4_fu_529_p2)
);

myproject_mul_mul_12ns_19s_31_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 12 ),
    .din1_WIDTH( 19 ),
    .dout_WIDTH( 31 ))
mul_mul_12ns_19s_31_1_1_U12(
    .din0(r_V_1_fu_536_p0),
    .din1(add_ln703_7_fu_289_p2),
    .dout(r_V_1_fu_536_p2)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            ap_enable_reg_pp0_iter1 <= ap_start;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter2 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter3 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter4 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter4 <= ap_enable_reg_pp0_iter3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_ce) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        add_ln703_6_reg_608 <= add_ln703_6_fu_279_p2;
        mean_V_reg_568 <= {{r_V_fu_494_p2[30:13]}};
        shl_ln728_1_reg_548[18 : 3] <= shl_ln728_1_fu_111_p3[18 : 3];
        shl_ln728_2_reg_553[18 : 3] <= shl_ln728_2_fu_119_p3[18 : 3];
        shl_ln728_3_reg_558[18 : 3] <= shl_ln728_3_fu_127_p3[18 : 3];
        shl_ln728_4_reg_563[18 : 3] <= shl_ln728_4_fu_135_p3[18 : 3];
        shl_ln_reg_543[18 : 3] <= shl_ln_fu_103_p3[18 : 3];
        sub_ln703_1_reg_583 <= sub_ln703_1_fu_201_p2;
        sub_ln703_2_reg_593 <= sub_ln703_2_fu_219_p2;
        sub_ln703_3_reg_598 <= sub_ln703_3_fu_237_p2;
        sub_ln703_4_reg_603 <= sub_ln703_4_fu_255_p2;
        sub_ln703_reg_573 <= sub_ln703_fu_183_p2;
        trunc_ln708_1_reg_588 <= {{mul_ln708_1_fu_508_p2[31:13]}};
        trunc_ln_reg_578 <= {{mul_ln708_fu_501_p2[31:13]}};
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_ce))) begin
        sub_ln703_1_reg_583_pp0_iter2_reg <= sub_ln703_1_reg_583;
        sub_ln703_1_reg_583_pp0_iter3_reg <= sub_ln703_1_reg_583_pp0_iter2_reg;
        sub_ln703_2_reg_593_pp0_iter2_reg <= sub_ln703_2_reg_593;
        sub_ln703_2_reg_593_pp0_iter3_reg <= sub_ln703_2_reg_593_pp0_iter2_reg;
        sub_ln703_3_reg_598_pp0_iter2_reg <= sub_ln703_3_reg_598;
        sub_ln703_3_reg_598_pp0_iter3_reg <= sub_ln703_3_reg_598_pp0_iter2_reg;
        sub_ln703_4_reg_603_pp0_iter2_reg <= sub_ln703_4_reg_603;
        sub_ln703_4_reg_603_pp0_iter3_reg <= sub_ln703_4_reg_603_pp0_iter2_reg;
        sub_ln703_reg_573_pp0_iter2_reg <= sub_ln703_reg_573;
        sub_ln703_reg_573_pp0_iter3_reg <= sub_ln703_reg_573_pp0_iter2_reg;
        var_V_reg_613 <= {{r_V_1_fu_536_p2[30:13]}};
    end
end

always @ (*) begin
    if ((((ap_start == 1'b0) & (1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_start == 1'b1)) | ((ap_enable_reg_pp0_iter4 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_ce)))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (ap_idle_pp0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter4 == 1'b0) & (ap_enable_reg_pp0_iter3 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter3 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0_0to3 = 1'b1;
    end else begin
        ap_idle_pp0_0to3 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_ce) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_start == 1'b1))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (ap_idle_pp0_0to3 == 1'b1))) begin
        ap_reset_idle_pp0 = 1'b1;
    end else begin
        ap_reset_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b1) & (ap_idle_pp0_0to3 == 1'b1))) begin
        ap_reset_start_pp0 = 1'b1;
    end else begin
        ap_reset_start_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter3 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_ce))) begin
        invert_sqr_table_ce0 = 1'b1;
    end else begin
        invert_sqr_table_ce0 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_pp0_stage0 : begin
            ap_NS_fsm = ap_ST_fsm_pp0_stage0;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign add_ln703_1_fu_149_p2 = (shl_ln728_3_fu_127_p3 + shl_ln728_4_fu_135_p3);

assign add_ln703_2_fu_155_p2 = (add_ln703_1_fu_149_p2 + shl_ln728_2_fu_119_p3);

assign add_ln703_3_fu_161_p2 = (add_ln703_2_fu_155_p2 + add_ln703_fu_143_p2);

assign add_ln703_4_fu_285_p2 = (trunc_ln708_1_reg_588 + trunc_ln_reg_578);

assign add_ln703_5_fu_273_p2 = (trunc_ln708_3_fu_246_p4 + trunc_ln708_4_fu_264_p4);

assign add_ln703_6_fu_279_p2 = (add_ln703_5_fu_273_p2 + trunc_ln708_2_fu_228_p4);

assign add_ln703_7_fu_289_p2 = (add_ln703_6_reg_608 + add_ln703_4_fu_285_p2);

assign add_ln703_fu_143_p2 = (shl_ln728_1_fu_111_p3 + shl_ln_fu_103_p3);

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd0];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage0_11001 = ((ap_start == 1'b0) & (ap_start == 1'b1));
end

always @ (*) begin
    ap_block_pp0_stage0_subdone = ((1'b0 == ap_ce) | ((ap_start == 1'b0) & (ap_start == 1'b1)));
end

always @ (*) begin
    ap_block_state1_pp0_stage0_iter0 = (ap_start == 1'b0);
end

assign ap_block_state2_pp0_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state3_pp0_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state4_pp0_stage0_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state5_pp0_stage0_iter4 = ~(1'b1 == 1'b1);

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_enable_reg_pp0_iter0 = ap_start;

assign ap_return_0 = {{mul_ln1118_fu_372_p2[45:13]}};

assign ap_return_1 = {{mul_ln1118_1_fu_391_p2[45:13]}};

assign ap_return_2 = {{mul_ln1118_2_fu_410_p2[45:13]}};

assign ap_return_3 = {{mul_ln1118_3_fu_429_p2[45:13]}};

assign ap_return_4 = {{mul_ln1118_4_fu_448_p2[45:13]}};

assign icmp_ln144_fu_346_p2 = ((tmp_1_fu_336_p4 != 6'd0) ? 1'b1 : 1'b0);

assign index_1_fu_324_p3 = ((tmp_fu_316_p3[0:0] === 1'b1) ? 19'd0 : ret_V_fu_310_p2);

assign index_2_fu_352_p3 = ((icmp_ln144_fu_346_p2[0:0] === 1'b1) ? 13'd8191 : trunc_ln141_fu_332_p1);

assign invert_sqr_table_address0 = zext_ln145_fu_360_p1;

assign mul_ln1118_1_fu_391_p0 = zext_ln1116_fu_365_p1;

assign mul_ln1118_2_fu_410_p0 = zext_ln1116_fu_365_p1;

assign mul_ln1118_3_fu_429_p0 = zext_ln1116_fu_365_p1;

assign mul_ln1118_4_fu_448_p0 = zext_ln1116_fu_365_p1;

assign mul_ln1118_fu_372_p0 = zext_ln1116_fu_365_p1;

assign mul_ln708_1_fu_508_p0 = sext_ln1118_2_fu_206_p1;

assign mul_ln708_1_fu_508_p1 = sext_ln1118_2_fu_206_p1;

assign mul_ln708_2_fu_515_p0 = sext_ln1118_3_fu_224_p1;

assign mul_ln708_2_fu_515_p1 = sext_ln1118_3_fu_224_p1;

assign mul_ln708_3_fu_522_p0 = sext_ln1118_4_fu_242_p1;

assign mul_ln708_3_fu_522_p1 = sext_ln1118_4_fu_242_p1;

assign mul_ln708_4_fu_529_p0 = sext_ln1118_5_fu_260_p1;

assign mul_ln708_4_fu_529_p1 = sext_ln1118_5_fu_260_p1;

assign mul_ln708_fu_501_p0 = sext_ln1118_1_fu_188_p1;

assign mul_ln708_fu_501_p1 = sext_ln1118_1_fu_188_p1;

assign r_V_1_fu_536_p0 = 31'd1638;

assign r_V_fu_494_p0 = 31'd1638;

assign ret_V_fu_310_p2 = ($signed(19'd8) + $signed(sext_ln708_1_fu_307_p1));

assign sext_ln1118_1_fu_188_p1 = sub_ln703_fu_183_p2;

assign sext_ln1118_2_fu_206_p1 = sub_ln703_1_fu_201_p2;

assign sext_ln1118_3_fu_224_p1 = sub_ln703_2_fu_219_p2;

assign sext_ln1118_4_fu_242_p1 = sub_ln703_3_fu_237_p2;

assign sext_ln1118_5_fu_260_p1 = sub_ln703_4_fu_255_p2;

assign sext_ln708_1_fu_307_p1 = $signed(var_V_reg_613);

assign sext_ln708_fu_180_p1 = $signed(mean_V_reg_568);

assign shl_ln728_1_fu_111_p3 = {{p_read1}, {3'd0}};

assign shl_ln728_2_fu_119_p3 = {{p_read2}, {3'd0}};

assign shl_ln728_3_fu_127_p3 = {{p_read3}, {3'd0}};

assign shl_ln728_4_fu_135_p3 = {{p_read4}, {3'd0}};

assign shl_ln_fu_103_p3 = {{p_read}, {3'd0}};

assign sub_ln703_1_fu_201_p2 = ($signed(shl_ln728_1_reg_548) - $signed(sext_ln708_fu_180_p1));

assign sub_ln703_2_fu_219_p2 = ($signed(shl_ln728_2_reg_553) - $signed(sext_ln708_fu_180_p1));

assign sub_ln703_3_fu_237_p2 = ($signed(shl_ln728_3_reg_558) - $signed(sext_ln708_fu_180_p1));

assign sub_ln703_4_fu_255_p2 = ($signed(shl_ln728_4_reg_563) - $signed(sext_ln708_fu_180_p1));

assign sub_ln703_fu_183_p2 = ($signed(shl_ln_reg_543) - $signed(sext_ln708_fu_180_p1));

assign tmp_1_fu_336_p4 = {{index_1_fu_324_p3[18:13]}};

assign tmp_fu_316_p3 = ret_V_fu_310_p2[32'd18];

assign trunc_ln141_fu_332_p1 = index_1_fu_324_p3[12:0];

assign trunc_ln708_2_fu_228_p4 = {{mul_ln708_2_fu_515_p2[31:13]}};

assign trunc_ln708_3_fu_246_p4 = {{mul_ln708_3_fu_522_p2[31:13]}};

assign trunc_ln708_4_fu_264_p4 = {{mul_ln708_4_fu_529_p2[31:13]}};

assign zext_ln1116_fu_365_p1 = invert_sqr_table_q0;

assign zext_ln145_fu_360_p1 = index_2_fu_352_p3;

always @ (posedge ap_clk) begin
    shl_ln_reg_543[2:0] <= 3'b000;
    shl_ln728_1_reg_548[2:0] <= 3'b000;
    shl_ln728_2_reg_553[2:0] <= 3'b000;
    shl_ln728_3_reg_558[2:0] <= 3'b000;
    shl_ln728_4_reg_563[2:0] <= 3'b000;
end

endmodule //myproject_layernorm_1d_ap_fixed_16_6_5_3_0_ap_fixed_33_13_5_3_0_config2_s
