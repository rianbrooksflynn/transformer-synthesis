-- ==============================================================
-- Generated by Vitis HLS v2023.2
-- Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
-- Copyright 2022-2023 Advanced Micro Devices, Inc. All Rights Reserved.
-- ==============================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity myproject is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    input_1 : IN STD_LOGIC_VECTOR (319 downto 0);
    input_1_ap_vld : IN STD_LOGIC;
    layer2_out_0 : OUT STD_LOGIC_VECTOR (15 downto 0);
    layer2_out_0_ap_vld : OUT STD_LOGIC;
    layer2_out_1 : OUT STD_LOGIC_VECTOR (15 downto 0);
    layer2_out_1_ap_vld : OUT STD_LOGIC;
    layer2_out_2 : OUT STD_LOGIC_VECTOR (15 downto 0);
    layer2_out_2_ap_vld : OUT STD_LOGIC;
    layer2_out_3 : OUT STD_LOGIC_VECTOR (15 downto 0);
    layer2_out_3_ap_vld : OUT STD_LOGIC;
    layer2_out_4 : OUT STD_LOGIC_VECTOR (15 downto 0);
    layer2_out_4_ap_vld : OUT STD_LOGIC;
    layer2_out_5 : OUT STD_LOGIC_VECTOR (15 downto 0);
    layer2_out_5_ap_vld : OUT STD_LOGIC;
    layer2_out_6 : OUT STD_LOGIC_VECTOR (15 downto 0);
    layer2_out_6_ap_vld : OUT STD_LOGIC;
    layer2_out_7 : OUT STD_LOGIC_VECTOR (15 downto 0);
    layer2_out_7_ap_vld : OUT STD_LOGIC;
    layer2_out_8 : OUT STD_LOGIC_VECTOR (15 downto 0);
    layer2_out_8_ap_vld : OUT STD_LOGIC;
    layer2_out_9 : OUT STD_LOGIC_VECTOR (15 downto 0);
    layer2_out_9_ap_vld : OUT STD_LOGIC;
    layer2_out_10 : OUT STD_LOGIC_VECTOR (15 downto 0);
    layer2_out_10_ap_vld : OUT STD_LOGIC;
    layer2_out_11 : OUT STD_LOGIC_VECTOR (15 downto 0);
    layer2_out_11_ap_vld : OUT STD_LOGIC;
    layer2_out_12 : OUT STD_LOGIC_VECTOR (15 downto 0);
    layer2_out_12_ap_vld : OUT STD_LOGIC;
    layer2_out_13 : OUT STD_LOGIC_VECTOR (15 downto 0);
    layer2_out_13_ap_vld : OUT STD_LOGIC;
    layer2_out_14 : OUT STD_LOGIC_VECTOR (15 downto 0);
    layer2_out_14_ap_vld : OUT STD_LOGIC;
    layer2_out_15 : OUT STD_LOGIC_VECTOR (15 downto 0);
    layer2_out_15_ap_vld : OUT STD_LOGIC;
    layer2_out_16 : OUT STD_LOGIC_VECTOR (15 downto 0);
    layer2_out_16_ap_vld : OUT STD_LOGIC;
    layer2_out_17 : OUT STD_LOGIC_VECTOR (15 downto 0);
    layer2_out_17_ap_vld : OUT STD_LOGIC;
    layer2_out_18 : OUT STD_LOGIC_VECTOR (15 downto 0);
    layer2_out_18_ap_vld : OUT STD_LOGIC;
    layer2_out_19 : OUT STD_LOGIC_VECTOR (15 downto 0);
    layer2_out_19_ap_vld : OUT STD_LOGIC );
end;


architecture behav of myproject is 
    attribute CORE_GENERATION_INFO : STRING;
    attribute CORE_GENERATION_INFO of behav : architecture is
    "myproject_myproject,hls_ip_2023_2,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xcvu13p-flga2577-2-e,HLS_INPUT_CLOCK=5.000000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=4.253813,HLS_SYN_LAT=-1,HLS_SYN_TPT=none,HLS_SYN_MEM=16,HLS_SYN_DSP=0,HLS_SYN_FF=2007,HLS_SYN_LUT=3998,HLS_VERSION=2023_2}";
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_state1 : STD_LOGIC_VECTOR (1 downto 0) := "01";
    constant ap_ST_fsm_state2 : STD_LOGIC_VECTOR (1 downto 0) := "10";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv320_lc_1 : STD_LOGIC_VECTOR (319 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_const_boolean_0 : BOOLEAN := false;
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";

    signal ap_CS_fsm : STD_LOGIC_VECTOR (1 downto 0) := "01";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_state1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state1 : signal is "none";
    signal input_1_preg : STD_LOGIC_VECTOR (319 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    signal input_1_in_sig : STD_LOGIC_VECTOR (319 downto 0);
    signal input_1_ap_vld_preg : STD_LOGIC := '0';
    signal input_1_ap_vld_in_sig : STD_LOGIC;
    signal input_1_blk_n : STD_LOGIC;
    signal layer4_out_reg_602 : STD_LOGIC_VECTOR (15 downto 0);
    signal layer4_out_20_reg_607 : STD_LOGIC_VECTOR (15 downto 0);
    signal layer4_out_21_reg_612 : STD_LOGIC_VECTOR (15 downto 0);
    signal layer4_out_22_reg_617 : STD_LOGIC_VECTOR (15 downto 0);
    signal layer4_out_23_reg_622 : STD_LOGIC_VECTOR (15 downto 0);
    signal layer4_out_24_reg_627 : STD_LOGIC_VECTOR (15 downto 0);
    signal layer4_out_25_reg_632 : STD_LOGIC_VECTOR (15 downto 0);
    signal layer4_out_26_reg_637 : STD_LOGIC_VECTOR (15 downto 0);
    signal layer4_out_27_reg_642 : STD_LOGIC_VECTOR (15 downto 0);
    signal layer4_out_28_reg_647 : STD_LOGIC_VECTOR (15 downto 0);
    signal layer4_out_29_reg_652 : STD_LOGIC_VECTOR (15 downto 0);
    signal layer4_out_30_reg_657 : STD_LOGIC_VECTOR (15 downto 0);
    signal layer4_out_31_reg_662 : STD_LOGIC_VECTOR (15 downto 0);
    signal layer4_out_32_reg_667 : STD_LOGIC_VECTOR (15 downto 0);
    signal layer4_out_33_reg_672 : STD_LOGIC_VECTOR (15 downto 0);
    signal layer4_out_34_reg_677 : STD_LOGIC_VECTOR (15 downto 0);
    signal layer4_out_35_reg_682 : STD_LOGIC_VECTOR (15 downto 0);
    signal layer4_out_36_reg_687 : STD_LOGIC_VECTOR (15 downto 0);
    signal layer4_out_37_reg_692 : STD_LOGIC_VECTOR (15 downto 0);
    signal layer4_out_38_reg_697 : STD_LOGIC_VECTOR (15 downto 0);
    signal call_ret3_transpose_2d_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config3_s_fu_220_ap_ready : STD_LOGIC;
    signal call_ret3_transpose_2d_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config3_s_fu_220_ap_return_0 : STD_LOGIC_VECTOR (15 downto 0);
    signal call_ret3_transpose_2d_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config3_s_fu_220_ap_return_1 : STD_LOGIC_VECTOR (15 downto 0);
    signal call_ret3_transpose_2d_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config3_s_fu_220_ap_return_2 : STD_LOGIC_VECTOR (15 downto 0);
    signal call_ret3_transpose_2d_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config3_s_fu_220_ap_return_3 : STD_LOGIC_VECTOR (15 downto 0);
    signal call_ret3_transpose_2d_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config3_s_fu_220_ap_return_4 : STD_LOGIC_VECTOR (15 downto 0);
    signal call_ret3_transpose_2d_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config3_s_fu_220_ap_return_5 : STD_LOGIC_VECTOR (15 downto 0);
    signal call_ret3_transpose_2d_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config3_s_fu_220_ap_return_6 : STD_LOGIC_VECTOR (15 downto 0);
    signal call_ret3_transpose_2d_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config3_s_fu_220_ap_return_7 : STD_LOGIC_VECTOR (15 downto 0);
    signal call_ret3_transpose_2d_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config3_s_fu_220_ap_return_8 : STD_LOGIC_VECTOR (15 downto 0);
    signal call_ret3_transpose_2d_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config3_s_fu_220_ap_return_9 : STD_LOGIC_VECTOR (15 downto 0);
    signal call_ret3_transpose_2d_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config3_s_fu_220_ap_return_10 : STD_LOGIC_VECTOR (15 downto 0);
    signal call_ret3_transpose_2d_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config3_s_fu_220_ap_return_11 : STD_LOGIC_VECTOR (15 downto 0);
    signal call_ret3_transpose_2d_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config3_s_fu_220_ap_return_12 : STD_LOGIC_VECTOR (15 downto 0);
    signal call_ret3_transpose_2d_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config3_s_fu_220_ap_return_13 : STD_LOGIC_VECTOR (15 downto 0);
    signal call_ret3_transpose_2d_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config3_s_fu_220_ap_return_14 : STD_LOGIC_VECTOR (15 downto 0);
    signal call_ret3_transpose_2d_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config3_s_fu_220_ap_return_15 : STD_LOGIC_VECTOR (15 downto 0);
    signal call_ret3_transpose_2d_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config3_s_fu_220_ap_return_16 : STD_LOGIC_VECTOR (15 downto 0);
    signal call_ret3_transpose_2d_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config3_s_fu_220_ap_return_17 : STD_LOGIC_VECTOR (15 downto 0);
    signal call_ret3_transpose_2d_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config3_s_fu_220_ap_return_18 : STD_LOGIC_VECTOR (15 downto 0);
    signal call_ret3_transpose_2d_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config3_s_fu_220_ap_return_19 : STD_LOGIC_VECTOR (15 downto 0);
    signal call_ret_transpose_2d_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config4_s_fu_226_ap_ready : STD_LOGIC;
    signal call_ret_transpose_2d_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config4_s_fu_226_ap_return_0 : STD_LOGIC_VECTOR (15 downto 0);
    signal call_ret_transpose_2d_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config4_s_fu_226_ap_return_1 : STD_LOGIC_VECTOR (15 downto 0);
    signal call_ret_transpose_2d_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config4_s_fu_226_ap_return_2 : STD_LOGIC_VECTOR (15 downto 0);
    signal call_ret_transpose_2d_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config4_s_fu_226_ap_return_3 : STD_LOGIC_VECTOR (15 downto 0);
    signal call_ret_transpose_2d_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config4_s_fu_226_ap_return_4 : STD_LOGIC_VECTOR (15 downto 0);
    signal call_ret_transpose_2d_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config4_s_fu_226_ap_return_5 : STD_LOGIC_VECTOR (15 downto 0);
    signal call_ret_transpose_2d_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config4_s_fu_226_ap_return_6 : STD_LOGIC_VECTOR (15 downto 0);
    signal call_ret_transpose_2d_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config4_s_fu_226_ap_return_7 : STD_LOGIC_VECTOR (15 downto 0);
    signal call_ret_transpose_2d_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config4_s_fu_226_ap_return_8 : STD_LOGIC_VECTOR (15 downto 0);
    signal call_ret_transpose_2d_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config4_s_fu_226_ap_return_9 : STD_LOGIC_VECTOR (15 downto 0);
    signal call_ret_transpose_2d_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config4_s_fu_226_ap_return_10 : STD_LOGIC_VECTOR (15 downto 0);
    signal call_ret_transpose_2d_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config4_s_fu_226_ap_return_11 : STD_LOGIC_VECTOR (15 downto 0);
    signal call_ret_transpose_2d_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config4_s_fu_226_ap_return_12 : STD_LOGIC_VECTOR (15 downto 0);
    signal call_ret_transpose_2d_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config4_s_fu_226_ap_return_13 : STD_LOGIC_VECTOR (15 downto 0);
    signal call_ret_transpose_2d_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config4_s_fu_226_ap_return_14 : STD_LOGIC_VECTOR (15 downto 0);
    signal call_ret_transpose_2d_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config4_s_fu_226_ap_return_15 : STD_LOGIC_VECTOR (15 downto 0);
    signal call_ret_transpose_2d_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config4_s_fu_226_ap_return_16 : STD_LOGIC_VECTOR (15 downto 0);
    signal call_ret_transpose_2d_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config4_s_fu_226_ap_return_17 : STD_LOGIC_VECTOR (15 downto 0);
    signal call_ret_transpose_2d_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config4_s_fu_226_ap_return_18 : STD_LOGIC_VECTOR (15 downto 0);
    signal call_ret_transpose_2d_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config4_s_fu_226_ap_return_19 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_layernorm_1d_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config2_s_fu_250_ap_start : STD_LOGIC;
    signal grp_layernorm_1d_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config2_s_fu_250_ap_done : STD_LOGIC;
    signal grp_layernorm_1d_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config2_s_fu_250_ap_idle : STD_LOGIC;
    signal grp_layernorm_1d_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config2_s_fu_250_ap_ready : STD_LOGIC;
    signal grp_layernorm_1d_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config2_s_fu_250_ap_return_0 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_layernorm_1d_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config2_s_fu_250_ap_return_1 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_layernorm_1d_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config2_s_fu_250_ap_return_2 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_layernorm_1d_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config2_s_fu_250_ap_return_3 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_layernorm_1d_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config2_s_fu_250_ap_return_4 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_layernorm_1d_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config2_s_fu_263_ap_start : STD_LOGIC;
    signal grp_layernorm_1d_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config2_s_fu_263_ap_done : STD_LOGIC;
    signal grp_layernorm_1d_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config2_s_fu_263_ap_idle : STD_LOGIC;
    signal grp_layernorm_1d_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config2_s_fu_263_ap_ready : STD_LOGIC;
    signal grp_layernorm_1d_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config2_s_fu_263_ap_return_0 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_layernorm_1d_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config2_s_fu_263_ap_return_1 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_layernorm_1d_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config2_s_fu_263_ap_return_2 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_layernorm_1d_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config2_s_fu_263_ap_return_3 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_layernorm_1d_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config2_s_fu_263_ap_return_4 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_layernorm_1d_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config2_s_fu_276_ap_start : STD_LOGIC;
    signal grp_layernorm_1d_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config2_s_fu_276_ap_done : STD_LOGIC;
    signal grp_layernorm_1d_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config2_s_fu_276_ap_idle : STD_LOGIC;
    signal grp_layernorm_1d_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config2_s_fu_276_ap_ready : STD_LOGIC;
    signal grp_layernorm_1d_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config2_s_fu_276_ap_return_0 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_layernorm_1d_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config2_s_fu_276_ap_return_1 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_layernorm_1d_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config2_s_fu_276_ap_return_2 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_layernorm_1d_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config2_s_fu_276_ap_return_3 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_layernorm_1d_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config2_s_fu_276_ap_return_4 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_layernorm_1d_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config2_s_fu_289_ap_start : STD_LOGIC;
    signal grp_layernorm_1d_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config2_s_fu_289_ap_done : STD_LOGIC;
    signal grp_layernorm_1d_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config2_s_fu_289_ap_idle : STD_LOGIC;
    signal grp_layernorm_1d_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config2_s_fu_289_ap_ready : STD_LOGIC;
    signal grp_layernorm_1d_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config2_s_fu_289_ap_return_0 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_layernorm_1d_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config2_s_fu_289_ap_return_1 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_layernorm_1d_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config2_s_fu_289_ap_return_2 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_layernorm_1d_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config2_s_fu_289_ap_return_3 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_layernorm_1d_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config2_s_fu_289_ap_return_4 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_layernorm_1d_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config2_s_fu_250_ap_start_reg : STD_LOGIC := '0';
    signal ap_block_state1_ignore_call87 : BOOLEAN;
    signal ap_CS_fsm_state2 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state2 : signal is "none";
    signal grp_layernorm_1d_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config2_s_fu_263_ap_start_reg : STD_LOGIC := '0';
    signal ap_block_state1_ignore_call93 : BOOLEAN;
    signal grp_layernorm_1d_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config2_s_fu_276_ap_start_reg : STD_LOGIC := '0';
    signal ap_block_state1_ignore_call99 : BOOLEAN;
    signal grp_layernorm_1d_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config2_s_fu_289_ap_start_reg : STD_LOGIC := '0';
    signal ap_block_state1_ignore_call105 : BOOLEAN;
    signal ap_block_state1 : BOOLEAN;
    signal ap_block_state2_on_subcall_done : BOOLEAN;
    signal ap_NS_fsm : STD_LOGIC_VECTOR (1 downto 0);
    signal ap_ST_fsm_state1_blk : STD_LOGIC;
    signal ap_ST_fsm_state2_blk : STD_LOGIC;
    signal ap_ce_reg : STD_LOGIC;

    component myproject_transpose_2d_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config3_s IS
    port (
        ap_ready : OUT STD_LOGIC;
        data_val : IN STD_LOGIC_VECTOR (319 downto 0);
        ap_return_0 : OUT STD_LOGIC_VECTOR (15 downto 0);
        ap_return_1 : OUT STD_LOGIC_VECTOR (15 downto 0);
        ap_return_2 : OUT STD_LOGIC_VECTOR (15 downto 0);
        ap_return_3 : OUT STD_LOGIC_VECTOR (15 downto 0);
        ap_return_4 : OUT STD_LOGIC_VECTOR (15 downto 0);
        ap_return_5 : OUT STD_LOGIC_VECTOR (15 downto 0);
        ap_return_6 : OUT STD_LOGIC_VECTOR (15 downto 0);
        ap_return_7 : OUT STD_LOGIC_VECTOR (15 downto 0);
        ap_return_8 : OUT STD_LOGIC_VECTOR (15 downto 0);
        ap_return_9 : OUT STD_LOGIC_VECTOR (15 downto 0);
        ap_return_10 : OUT STD_LOGIC_VECTOR (15 downto 0);
        ap_return_11 : OUT STD_LOGIC_VECTOR (15 downto 0);
        ap_return_12 : OUT STD_LOGIC_VECTOR (15 downto 0);
        ap_return_13 : OUT STD_LOGIC_VECTOR (15 downto 0);
        ap_return_14 : OUT STD_LOGIC_VECTOR (15 downto 0);
        ap_return_15 : OUT STD_LOGIC_VECTOR (15 downto 0);
        ap_return_16 : OUT STD_LOGIC_VECTOR (15 downto 0);
        ap_return_17 : OUT STD_LOGIC_VECTOR (15 downto 0);
        ap_return_18 : OUT STD_LOGIC_VECTOR (15 downto 0);
        ap_return_19 : OUT STD_LOGIC_VECTOR (15 downto 0) );
    end component;


    component myproject_transpose_2d_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config4_s IS
    port (
        ap_ready : OUT STD_LOGIC;
        data_0_val : IN STD_LOGIC_VECTOR (15 downto 0);
        data_1_val : IN STD_LOGIC_VECTOR (15 downto 0);
        data_2_val : IN STD_LOGIC_VECTOR (15 downto 0);
        data_3_val : IN STD_LOGIC_VECTOR (15 downto 0);
        data_4_val : IN STD_LOGIC_VECTOR (15 downto 0);
        data_5_val : IN STD_LOGIC_VECTOR (15 downto 0);
        data_6_val : IN STD_LOGIC_VECTOR (15 downto 0);
        data_7_val : IN STD_LOGIC_VECTOR (15 downto 0);
        data_8_val : IN STD_LOGIC_VECTOR (15 downto 0);
        data_9_val : IN STD_LOGIC_VECTOR (15 downto 0);
        data_10_val : IN STD_LOGIC_VECTOR (15 downto 0);
        data_11_val : IN STD_LOGIC_VECTOR (15 downto 0);
        data_12_val : IN STD_LOGIC_VECTOR (15 downto 0);
        data_13_val : IN STD_LOGIC_VECTOR (15 downto 0);
        data_14_val : IN STD_LOGIC_VECTOR (15 downto 0);
        data_15_val : IN STD_LOGIC_VECTOR (15 downto 0);
        data_16_val : IN STD_LOGIC_VECTOR (15 downto 0);
        data_17_val : IN STD_LOGIC_VECTOR (15 downto 0);
        data_18_val : IN STD_LOGIC_VECTOR (15 downto 0);
        data_19_val : IN STD_LOGIC_VECTOR (15 downto 0);
        ap_return_0 : OUT STD_LOGIC_VECTOR (15 downto 0);
        ap_return_1 : OUT STD_LOGIC_VECTOR (15 downto 0);
        ap_return_2 : OUT STD_LOGIC_VECTOR (15 downto 0);
        ap_return_3 : OUT STD_LOGIC_VECTOR (15 downto 0);
        ap_return_4 : OUT STD_LOGIC_VECTOR (15 downto 0);
        ap_return_5 : OUT STD_LOGIC_VECTOR (15 downto 0);
        ap_return_6 : OUT STD_LOGIC_VECTOR (15 downto 0);
        ap_return_7 : OUT STD_LOGIC_VECTOR (15 downto 0);
        ap_return_8 : OUT STD_LOGIC_VECTOR (15 downto 0);
        ap_return_9 : OUT STD_LOGIC_VECTOR (15 downto 0);
        ap_return_10 : OUT STD_LOGIC_VECTOR (15 downto 0);
        ap_return_11 : OUT STD_LOGIC_VECTOR (15 downto 0);
        ap_return_12 : OUT STD_LOGIC_VECTOR (15 downto 0);
        ap_return_13 : OUT STD_LOGIC_VECTOR (15 downto 0);
        ap_return_14 : OUT STD_LOGIC_VECTOR (15 downto 0);
        ap_return_15 : OUT STD_LOGIC_VECTOR (15 downto 0);
        ap_return_16 : OUT STD_LOGIC_VECTOR (15 downto 0);
        ap_return_17 : OUT STD_LOGIC_VECTOR (15 downto 0);
        ap_return_18 : OUT STD_LOGIC_VECTOR (15 downto 0);
        ap_return_19 : OUT STD_LOGIC_VECTOR (15 downto 0) );
    end component;


    component myproject_layernorm_1d_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config2_s IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        data_0_val : IN STD_LOGIC_VECTOR (15 downto 0);
        data_1_val : IN STD_LOGIC_VECTOR (15 downto 0);
        data_2_val : IN STD_LOGIC_VECTOR (15 downto 0);
        data_3_val : IN STD_LOGIC_VECTOR (15 downto 0);
        data_4_val : IN STD_LOGIC_VECTOR (15 downto 0);
        ap_return_0 : OUT STD_LOGIC_VECTOR (15 downto 0);
        ap_return_1 : OUT STD_LOGIC_VECTOR (15 downto 0);
        ap_return_2 : OUT STD_LOGIC_VECTOR (15 downto 0);
        ap_return_3 : OUT STD_LOGIC_VECTOR (15 downto 0);
        ap_return_4 : OUT STD_LOGIC_VECTOR (15 downto 0) );
    end component;



begin
    call_ret3_transpose_2d_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config3_s_fu_220 : component myproject_transpose_2d_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config3_s
    port map (
        ap_ready => call_ret3_transpose_2d_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config3_s_fu_220_ap_ready,
        data_val => input_1_in_sig,
        ap_return_0 => call_ret3_transpose_2d_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config3_s_fu_220_ap_return_0,
        ap_return_1 => call_ret3_transpose_2d_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config3_s_fu_220_ap_return_1,
        ap_return_2 => call_ret3_transpose_2d_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config3_s_fu_220_ap_return_2,
        ap_return_3 => call_ret3_transpose_2d_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config3_s_fu_220_ap_return_3,
        ap_return_4 => call_ret3_transpose_2d_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config3_s_fu_220_ap_return_4,
        ap_return_5 => call_ret3_transpose_2d_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config3_s_fu_220_ap_return_5,
        ap_return_6 => call_ret3_transpose_2d_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config3_s_fu_220_ap_return_6,
        ap_return_7 => call_ret3_transpose_2d_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config3_s_fu_220_ap_return_7,
        ap_return_8 => call_ret3_transpose_2d_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config3_s_fu_220_ap_return_8,
        ap_return_9 => call_ret3_transpose_2d_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config3_s_fu_220_ap_return_9,
        ap_return_10 => call_ret3_transpose_2d_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config3_s_fu_220_ap_return_10,
        ap_return_11 => call_ret3_transpose_2d_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config3_s_fu_220_ap_return_11,
        ap_return_12 => call_ret3_transpose_2d_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config3_s_fu_220_ap_return_12,
        ap_return_13 => call_ret3_transpose_2d_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config3_s_fu_220_ap_return_13,
        ap_return_14 => call_ret3_transpose_2d_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config3_s_fu_220_ap_return_14,
        ap_return_15 => call_ret3_transpose_2d_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config3_s_fu_220_ap_return_15,
        ap_return_16 => call_ret3_transpose_2d_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config3_s_fu_220_ap_return_16,
        ap_return_17 => call_ret3_transpose_2d_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config3_s_fu_220_ap_return_17,
        ap_return_18 => call_ret3_transpose_2d_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config3_s_fu_220_ap_return_18,
        ap_return_19 => call_ret3_transpose_2d_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config3_s_fu_220_ap_return_19);

    call_ret_transpose_2d_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config4_s_fu_226 : component myproject_transpose_2d_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config4_s
    port map (
        ap_ready => call_ret_transpose_2d_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config4_s_fu_226_ap_ready,
        data_0_val => call_ret3_transpose_2d_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config3_s_fu_220_ap_return_0,
        data_1_val => call_ret3_transpose_2d_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config3_s_fu_220_ap_return_1,
        data_2_val => call_ret3_transpose_2d_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config3_s_fu_220_ap_return_2,
        data_3_val => call_ret3_transpose_2d_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config3_s_fu_220_ap_return_3,
        data_4_val => call_ret3_transpose_2d_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config3_s_fu_220_ap_return_4,
        data_5_val => call_ret3_transpose_2d_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config3_s_fu_220_ap_return_5,
        data_6_val => call_ret3_transpose_2d_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config3_s_fu_220_ap_return_6,
        data_7_val => call_ret3_transpose_2d_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config3_s_fu_220_ap_return_7,
        data_8_val => call_ret3_transpose_2d_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config3_s_fu_220_ap_return_8,
        data_9_val => call_ret3_transpose_2d_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config3_s_fu_220_ap_return_9,
        data_10_val => call_ret3_transpose_2d_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config3_s_fu_220_ap_return_10,
        data_11_val => call_ret3_transpose_2d_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config3_s_fu_220_ap_return_11,
        data_12_val => call_ret3_transpose_2d_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config3_s_fu_220_ap_return_12,
        data_13_val => call_ret3_transpose_2d_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config3_s_fu_220_ap_return_13,
        data_14_val => call_ret3_transpose_2d_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config3_s_fu_220_ap_return_14,
        data_15_val => call_ret3_transpose_2d_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config3_s_fu_220_ap_return_15,
        data_16_val => call_ret3_transpose_2d_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config3_s_fu_220_ap_return_16,
        data_17_val => call_ret3_transpose_2d_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config3_s_fu_220_ap_return_17,
        data_18_val => call_ret3_transpose_2d_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config3_s_fu_220_ap_return_18,
        data_19_val => call_ret3_transpose_2d_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config3_s_fu_220_ap_return_19,
        ap_return_0 => call_ret_transpose_2d_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config4_s_fu_226_ap_return_0,
        ap_return_1 => call_ret_transpose_2d_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config4_s_fu_226_ap_return_1,
        ap_return_2 => call_ret_transpose_2d_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config4_s_fu_226_ap_return_2,
        ap_return_3 => call_ret_transpose_2d_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config4_s_fu_226_ap_return_3,
        ap_return_4 => call_ret_transpose_2d_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config4_s_fu_226_ap_return_4,
        ap_return_5 => call_ret_transpose_2d_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config4_s_fu_226_ap_return_5,
        ap_return_6 => call_ret_transpose_2d_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config4_s_fu_226_ap_return_6,
        ap_return_7 => call_ret_transpose_2d_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config4_s_fu_226_ap_return_7,
        ap_return_8 => call_ret_transpose_2d_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config4_s_fu_226_ap_return_8,
        ap_return_9 => call_ret_transpose_2d_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config4_s_fu_226_ap_return_9,
        ap_return_10 => call_ret_transpose_2d_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config4_s_fu_226_ap_return_10,
        ap_return_11 => call_ret_transpose_2d_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config4_s_fu_226_ap_return_11,
        ap_return_12 => call_ret_transpose_2d_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config4_s_fu_226_ap_return_12,
        ap_return_13 => call_ret_transpose_2d_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config4_s_fu_226_ap_return_13,
        ap_return_14 => call_ret_transpose_2d_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config4_s_fu_226_ap_return_14,
        ap_return_15 => call_ret_transpose_2d_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config4_s_fu_226_ap_return_15,
        ap_return_16 => call_ret_transpose_2d_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config4_s_fu_226_ap_return_16,
        ap_return_17 => call_ret_transpose_2d_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config4_s_fu_226_ap_return_17,
        ap_return_18 => call_ret_transpose_2d_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config4_s_fu_226_ap_return_18,
        ap_return_19 => call_ret_transpose_2d_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config4_s_fu_226_ap_return_19);

    grp_layernorm_1d_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config2_s_fu_250 : component myproject_layernorm_1d_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config2_s
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_layernorm_1d_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config2_s_fu_250_ap_start,
        ap_done => grp_layernorm_1d_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config2_s_fu_250_ap_done,
        ap_idle => grp_layernorm_1d_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config2_s_fu_250_ap_idle,
        ap_ready => grp_layernorm_1d_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config2_s_fu_250_ap_ready,
        data_0_val => layer4_out_reg_602,
        data_1_val => layer4_out_20_reg_607,
        data_2_val => layer4_out_21_reg_612,
        data_3_val => layer4_out_22_reg_617,
        data_4_val => layer4_out_23_reg_622,
        ap_return_0 => grp_layernorm_1d_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config2_s_fu_250_ap_return_0,
        ap_return_1 => grp_layernorm_1d_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config2_s_fu_250_ap_return_1,
        ap_return_2 => grp_layernorm_1d_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config2_s_fu_250_ap_return_2,
        ap_return_3 => grp_layernorm_1d_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config2_s_fu_250_ap_return_3,
        ap_return_4 => grp_layernorm_1d_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config2_s_fu_250_ap_return_4);

    grp_layernorm_1d_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config2_s_fu_263 : component myproject_layernorm_1d_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config2_s
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_layernorm_1d_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config2_s_fu_263_ap_start,
        ap_done => grp_layernorm_1d_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config2_s_fu_263_ap_done,
        ap_idle => grp_layernorm_1d_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config2_s_fu_263_ap_idle,
        ap_ready => grp_layernorm_1d_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config2_s_fu_263_ap_ready,
        data_0_val => layer4_out_24_reg_627,
        data_1_val => layer4_out_25_reg_632,
        data_2_val => layer4_out_26_reg_637,
        data_3_val => layer4_out_27_reg_642,
        data_4_val => layer4_out_28_reg_647,
        ap_return_0 => grp_layernorm_1d_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config2_s_fu_263_ap_return_0,
        ap_return_1 => grp_layernorm_1d_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config2_s_fu_263_ap_return_1,
        ap_return_2 => grp_layernorm_1d_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config2_s_fu_263_ap_return_2,
        ap_return_3 => grp_layernorm_1d_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config2_s_fu_263_ap_return_3,
        ap_return_4 => grp_layernorm_1d_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config2_s_fu_263_ap_return_4);

    grp_layernorm_1d_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config2_s_fu_276 : component myproject_layernorm_1d_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config2_s
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_layernorm_1d_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config2_s_fu_276_ap_start,
        ap_done => grp_layernorm_1d_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config2_s_fu_276_ap_done,
        ap_idle => grp_layernorm_1d_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config2_s_fu_276_ap_idle,
        ap_ready => grp_layernorm_1d_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config2_s_fu_276_ap_ready,
        data_0_val => layer4_out_29_reg_652,
        data_1_val => layer4_out_30_reg_657,
        data_2_val => layer4_out_31_reg_662,
        data_3_val => layer4_out_32_reg_667,
        data_4_val => layer4_out_33_reg_672,
        ap_return_0 => grp_layernorm_1d_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config2_s_fu_276_ap_return_0,
        ap_return_1 => grp_layernorm_1d_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config2_s_fu_276_ap_return_1,
        ap_return_2 => grp_layernorm_1d_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config2_s_fu_276_ap_return_2,
        ap_return_3 => grp_layernorm_1d_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config2_s_fu_276_ap_return_3,
        ap_return_4 => grp_layernorm_1d_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config2_s_fu_276_ap_return_4);

    grp_layernorm_1d_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config2_s_fu_289 : component myproject_layernorm_1d_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config2_s
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_layernorm_1d_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config2_s_fu_289_ap_start,
        ap_done => grp_layernorm_1d_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config2_s_fu_289_ap_done,
        ap_idle => grp_layernorm_1d_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config2_s_fu_289_ap_idle,
        ap_ready => grp_layernorm_1d_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config2_s_fu_289_ap_ready,
        data_0_val => layer4_out_34_reg_677,
        data_1_val => layer4_out_35_reg_682,
        data_2_val => layer4_out_36_reg_687,
        data_3_val => layer4_out_37_reg_692,
        data_4_val => layer4_out_38_reg_697,
        ap_return_0 => grp_layernorm_1d_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config2_s_fu_289_ap_return_0,
        ap_return_1 => grp_layernorm_1d_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config2_s_fu_289_ap_return_1,
        ap_return_2 => grp_layernorm_1d_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config2_s_fu_289_ap_return_2,
        ap_return_3 => grp_layernorm_1d_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config2_s_fu_289_ap_return_3,
        ap_return_4 => grp_layernorm_1d_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config2_s_fu_289_ap_return_4);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_state1;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    grp_layernorm_1d_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config2_s_fu_250_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_layernorm_1d_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config2_s_fu_250_ap_start_reg <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_state1_ignore_call87) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                    grp_layernorm_1d_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config2_s_fu_250_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_layernorm_1d_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config2_s_fu_250_ap_ready = ap_const_logic_1)) then 
                    grp_layernorm_1d_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config2_s_fu_250_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_layernorm_1d_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config2_s_fu_263_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_layernorm_1d_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config2_s_fu_263_ap_start_reg <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_state1_ignore_call93) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                    grp_layernorm_1d_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config2_s_fu_263_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_layernorm_1d_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config2_s_fu_263_ap_ready = ap_const_logic_1)) then 
                    grp_layernorm_1d_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config2_s_fu_263_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_layernorm_1d_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config2_s_fu_276_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_layernorm_1d_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config2_s_fu_276_ap_start_reg <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_state1_ignore_call99) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                    grp_layernorm_1d_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config2_s_fu_276_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_layernorm_1d_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config2_s_fu_276_ap_ready = ap_const_logic_1)) then 
                    grp_layernorm_1d_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config2_s_fu_276_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_layernorm_1d_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config2_s_fu_289_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_layernorm_1d_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config2_s_fu_289_ap_start_reg <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_state1_ignore_call105) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                    grp_layernorm_1d_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config2_s_fu_289_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_layernorm_1d_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config2_s_fu_289_ap_ready = ap_const_logic_1)) then 
                    grp_layernorm_1d_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config2_s_fu_289_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    input_1_ap_vld_preg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                input_1_ap_vld_preg <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_state2_on_subcall_done) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
                    input_1_ap_vld_preg <= ap_const_logic_0;
                elsif ((not(((ap_start = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state1))) and (input_1_ap_vld = ap_const_logic_1))) then 
                    input_1_ap_vld_preg <= input_1_ap_vld;
                end if; 
            end if;
        end if;
    end process;


    input_1_preg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                input_1_preg <= ap_const_lv320_lc_1;
            else
                if ((not(((ap_start = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state1))) and (input_1_ap_vld = ap_const_logic_1))) then 
                    input_1_preg <= input_1;
                end if; 
            end if;
        end if;
    end process;

    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state1)) then
                layer4_out_20_reg_607 <= call_ret_transpose_2d_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config4_s_fu_226_ap_return_1;
                layer4_out_21_reg_612 <= call_ret_transpose_2d_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config4_s_fu_226_ap_return_2;
                layer4_out_22_reg_617 <= call_ret_transpose_2d_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config4_s_fu_226_ap_return_3;
                layer4_out_23_reg_622 <= call_ret_transpose_2d_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config4_s_fu_226_ap_return_4;
                layer4_out_24_reg_627 <= call_ret_transpose_2d_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config4_s_fu_226_ap_return_5;
                layer4_out_25_reg_632 <= call_ret_transpose_2d_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config4_s_fu_226_ap_return_6;
                layer4_out_26_reg_637 <= call_ret_transpose_2d_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config4_s_fu_226_ap_return_7;
                layer4_out_27_reg_642 <= call_ret_transpose_2d_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config4_s_fu_226_ap_return_8;
                layer4_out_28_reg_647 <= call_ret_transpose_2d_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config4_s_fu_226_ap_return_9;
                layer4_out_29_reg_652 <= call_ret_transpose_2d_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config4_s_fu_226_ap_return_10;
                layer4_out_30_reg_657 <= call_ret_transpose_2d_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config4_s_fu_226_ap_return_11;
                layer4_out_31_reg_662 <= call_ret_transpose_2d_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config4_s_fu_226_ap_return_12;
                layer4_out_32_reg_667 <= call_ret_transpose_2d_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config4_s_fu_226_ap_return_13;
                layer4_out_33_reg_672 <= call_ret_transpose_2d_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config4_s_fu_226_ap_return_14;
                layer4_out_34_reg_677 <= call_ret_transpose_2d_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config4_s_fu_226_ap_return_15;
                layer4_out_35_reg_682 <= call_ret_transpose_2d_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config4_s_fu_226_ap_return_16;
                layer4_out_36_reg_687 <= call_ret_transpose_2d_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config4_s_fu_226_ap_return_17;
                layer4_out_37_reg_692 <= call_ret_transpose_2d_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config4_s_fu_226_ap_return_18;
                layer4_out_38_reg_697 <= call_ret_transpose_2d_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config4_s_fu_226_ap_return_19;
                layer4_out_reg_602 <= call_ret_transpose_2d_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config4_s_fu_226_ap_return_0;
            end if;
        end if;
    end process;

    ap_NS_fsm_assign_proc : process (ap_CS_fsm, ap_CS_fsm_state1, ap_CS_fsm_state2, ap_block_state1, ap_block_state2_on_subcall_done)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_state1 => 
                if (((ap_const_boolean_0 = ap_block_state1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then
                    ap_NS_fsm <= ap_ST_fsm_state2;
                else
                    ap_NS_fsm <= ap_ST_fsm_state1;
                end if;
            when ap_ST_fsm_state2 => 
                if (((ap_const_boolean_0 = ap_block_state2_on_subcall_done) and (ap_const_logic_1 = ap_CS_fsm_state2))) then
                    ap_NS_fsm <= ap_ST_fsm_state1;
                else
                    ap_NS_fsm <= ap_ST_fsm_state2;
                end if;
            when others =>  
                ap_NS_fsm <= "XX";
        end case;
    end process;
    ap_CS_fsm_state1 <= ap_CS_fsm(0);
    ap_CS_fsm_state2 <= ap_CS_fsm(1);

    ap_ST_fsm_state1_blk_assign_proc : process(ap_block_state1)
    begin
        if ((ap_const_boolean_1 = ap_block_state1)) then 
            ap_ST_fsm_state1_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state1_blk <= ap_const_logic_0;
        end if; 
    end process;


    ap_ST_fsm_state2_blk_assign_proc : process(ap_block_state2_on_subcall_done)
    begin
        if ((ap_const_boolean_1 = ap_block_state2_on_subcall_done)) then 
            ap_ST_fsm_state2_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state2_blk <= ap_const_logic_0;
        end if; 
    end process;


    ap_block_state1_assign_proc : process(ap_start, input_1_ap_vld_in_sig)
    begin
                ap_block_state1 <= ((ap_start = ap_const_logic_0) or (input_1_ap_vld_in_sig = ap_const_logic_0));
    end process;


    ap_block_state1_ignore_call105_assign_proc : process(ap_start, input_1_ap_vld_in_sig)
    begin
                ap_block_state1_ignore_call105 <= ((ap_start = ap_const_logic_0) or (input_1_ap_vld_in_sig = ap_const_logic_0));
    end process;


    ap_block_state1_ignore_call87_assign_proc : process(ap_start, input_1_ap_vld_in_sig)
    begin
                ap_block_state1_ignore_call87 <= ((ap_start = ap_const_logic_0) or (input_1_ap_vld_in_sig = ap_const_logic_0));
    end process;


    ap_block_state1_ignore_call93_assign_proc : process(ap_start, input_1_ap_vld_in_sig)
    begin
                ap_block_state1_ignore_call93 <= ((ap_start = ap_const_logic_0) or (input_1_ap_vld_in_sig = ap_const_logic_0));
    end process;


    ap_block_state1_ignore_call99_assign_proc : process(ap_start, input_1_ap_vld_in_sig)
    begin
                ap_block_state1_ignore_call99 <= ((ap_start = ap_const_logic_0) or (input_1_ap_vld_in_sig = ap_const_logic_0));
    end process;


    ap_block_state2_on_subcall_done_assign_proc : process(grp_layernorm_1d_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config2_s_fu_250_ap_done, grp_layernorm_1d_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config2_s_fu_263_ap_done, grp_layernorm_1d_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config2_s_fu_276_ap_done, grp_layernorm_1d_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config2_s_fu_289_ap_done)
    begin
                ap_block_state2_on_subcall_done <= ((grp_layernorm_1d_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config2_s_fu_289_ap_done = ap_const_logic_0) or (grp_layernorm_1d_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config2_s_fu_276_ap_done = ap_const_logic_0) or (grp_layernorm_1d_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config2_s_fu_263_ap_done = ap_const_logic_0) or (grp_layernorm_1d_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config2_s_fu_250_ap_done = ap_const_logic_0));
    end process;


    ap_done_assign_proc : process(ap_CS_fsm_state2, ap_block_state2_on_subcall_done)
    begin
        if (((ap_const_boolean_0 = ap_block_state2_on_subcall_done) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_assign_proc : process(ap_start, ap_CS_fsm_state1)
    begin
        if (((ap_start = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_ready_assign_proc : process(ap_CS_fsm_state2, ap_block_state2_on_subcall_done)
    begin
        if (((ap_const_boolean_0 = ap_block_state2_on_subcall_done) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;

    grp_layernorm_1d_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config2_s_fu_250_ap_start <= grp_layernorm_1d_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config2_s_fu_250_ap_start_reg;
    grp_layernorm_1d_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config2_s_fu_263_ap_start <= grp_layernorm_1d_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config2_s_fu_263_ap_start_reg;
    grp_layernorm_1d_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config2_s_fu_276_ap_start <= grp_layernorm_1d_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config2_s_fu_276_ap_start_reg;
    grp_layernorm_1d_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config2_s_fu_289_ap_start <= grp_layernorm_1d_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config2_s_fu_289_ap_start_reg;

    input_1_ap_vld_in_sig_assign_proc : process(input_1_ap_vld, input_1_ap_vld_preg)
    begin
        if ((input_1_ap_vld = ap_const_logic_1)) then 
            input_1_ap_vld_in_sig <= input_1_ap_vld;
        else 
            input_1_ap_vld_in_sig <= input_1_ap_vld_preg;
        end if; 
    end process;


    input_1_blk_n_assign_proc : process(ap_start, ap_CS_fsm_state1, input_1_ap_vld)
    begin
        if (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            input_1_blk_n <= input_1_ap_vld;
        else 
            input_1_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    input_1_in_sig_assign_proc : process(input_1, input_1_preg, input_1_ap_vld)
    begin
        if ((input_1_ap_vld = ap_const_logic_1)) then 
            input_1_in_sig <= input_1;
        else 
            input_1_in_sig <= input_1_preg;
        end if; 
    end process;

    layer2_out_0 <= grp_layernorm_1d_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config2_s_fu_250_ap_return_0;

    layer2_out_0_ap_vld_assign_proc : process(ap_CS_fsm_state2, ap_block_state2_on_subcall_done)
    begin
        if (((ap_const_boolean_0 = ap_block_state2_on_subcall_done) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
            layer2_out_0_ap_vld <= ap_const_logic_1;
        else 
            layer2_out_0_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    layer2_out_1 <= grp_layernorm_1d_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config2_s_fu_250_ap_return_1;
    layer2_out_10 <= grp_layernorm_1d_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config2_s_fu_276_ap_return_0;

    layer2_out_10_ap_vld_assign_proc : process(ap_CS_fsm_state2, ap_block_state2_on_subcall_done)
    begin
        if (((ap_const_boolean_0 = ap_block_state2_on_subcall_done) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
            layer2_out_10_ap_vld <= ap_const_logic_1;
        else 
            layer2_out_10_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    layer2_out_11 <= grp_layernorm_1d_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config2_s_fu_276_ap_return_1;

    layer2_out_11_ap_vld_assign_proc : process(ap_CS_fsm_state2, ap_block_state2_on_subcall_done)
    begin
        if (((ap_const_boolean_0 = ap_block_state2_on_subcall_done) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
            layer2_out_11_ap_vld <= ap_const_logic_1;
        else 
            layer2_out_11_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    layer2_out_12 <= grp_layernorm_1d_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config2_s_fu_276_ap_return_2;

    layer2_out_12_ap_vld_assign_proc : process(ap_CS_fsm_state2, ap_block_state2_on_subcall_done)
    begin
        if (((ap_const_boolean_0 = ap_block_state2_on_subcall_done) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
            layer2_out_12_ap_vld <= ap_const_logic_1;
        else 
            layer2_out_12_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    layer2_out_13 <= grp_layernorm_1d_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config2_s_fu_276_ap_return_3;

    layer2_out_13_ap_vld_assign_proc : process(ap_CS_fsm_state2, ap_block_state2_on_subcall_done)
    begin
        if (((ap_const_boolean_0 = ap_block_state2_on_subcall_done) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
            layer2_out_13_ap_vld <= ap_const_logic_1;
        else 
            layer2_out_13_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    layer2_out_14 <= grp_layernorm_1d_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config2_s_fu_276_ap_return_4;

    layer2_out_14_ap_vld_assign_proc : process(ap_CS_fsm_state2, ap_block_state2_on_subcall_done)
    begin
        if (((ap_const_boolean_0 = ap_block_state2_on_subcall_done) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
            layer2_out_14_ap_vld <= ap_const_logic_1;
        else 
            layer2_out_14_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    layer2_out_15 <= grp_layernorm_1d_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config2_s_fu_289_ap_return_0;

    layer2_out_15_ap_vld_assign_proc : process(ap_CS_fsm_state2, ap_block_state2_on_subcall_done)
    begin
        if (((ap_const_boolean_0 = ap_block_state2_on_subcall_done) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
            layer2_out_15_ap_vld <= ap_const_logic_1;
        else 
            layer2_out_15_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    layer2_out_16 <= grp_layernorm_1d_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config2_s_fu_289_ap_return_1;

    layer2_out_16_ap_vld_assign_proc : process(ap_CS_fsm_state2, ap_block_state2_on_subcall_done)
    begin
        if (((ap_const_boolean_0 = ap_block_state2_on_subcall_done) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
            layer2_out_16_ap_vld <= ap_const_logic_1;
        else 
            layer2_out_16_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    layer2_out_17 <= grp_layernorm_1d_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config2_s_fu_289_ap_return_2;

    layer2_out_17_ap_vld_assign_proc : process(ap_CS_fsm_state2, ap_block_state2_on_subcall_done)
    begin
        if (((ap_const_boolean_0 = ap_block_state2_on_subcall_done) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
            layer2_out_17_ap_vld <= ap_const_logic_1;
        else 
            layer2_out_17_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    layer2_out_18 <= grp_layernorm_1d_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config2_s_fu_289_ap_return_3;

    layer2_out_18_ap_vld_assign_proc : process(ap_CS_fsm_state2, ap_block_state2_on_subcall_done)
    begin
        if (((ap_const_boolean_0 = ap_block_state2_on_subcall_done) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
            layer2_out_18_ap_vld <= ap_const_logic_1;
        else 
            layer2_out_18_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    layer2_out_19 <= grp_layernorm_1d_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config2_s_fu_289_ap_return_4;

    layer2_out_19_ap_vld_assign_proc : process(ap_CS_fsm_state2, ap_block_state2_on_subcall_done)
    begin
        if (((ap_const_boolean_0 = ap_block_state2_on_subcall_done) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
            layer2_out_19_ap_vld <= ap_const_logic_1;
        else 
            layer2_out_19_ap_vld <= ap_const_logic_0;
        end if; 
    end process;


    layer2_out_1_ap_vld_assign_proc : process(ap_CS_fsm_state2, ap_block_state2_on_subcall_done)
    begin
        if (((ap_const_boolean_0 = ap_block_state2_on_subcall_done) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
            layer2_out_1_ap_vld <= ap_const_logic_1;
        else 
            layer2_out_1_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    layer2_out_2 <= grp_layernorm_1d_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config2_s_fu_250_ap_return_2;

    layer2_out_2_ap_vld_assign_proc : process(ap_CS_fsm_state2, ap_block_state2_on_subcall_done)
    begin
        if (((ap_const_boolean_0 = ap_block_state2_on_subcall_done) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
            layer2_out_2_ap_vld <= ap_const_logic_1;
        else 
            layer2_out_2_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    layer2_out_3 <= grp_layernorm_1d_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config2_s_fu_250_ap_return_3;

    layer2_out_3_ap_vld_assign_proc : process(ap_CS_fsm_state2, ap_block_state2_on_subcall_done)
    begin
        if (((ap_const_boolean_0 = ap_block_state2_on_subcall_done) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
            layer2_out_3_ap_vld <= ap_const_logic_1;
        else 
            layer2_out_3_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    layer2_out_4 <= grp_layernorm_1d_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config2_s_fu_250_ap_return_4;

    layer2_out_4_ap_vld_assign_proc : process(ap_CS_fsm_state2, ap_block_state2_on_subcall_done)
    begin
        if (((ap_const_boolean_0 = ap_block_state2_on_subcall_done) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
            layer2_out_4_ap_vld <= ap_const_logic_1;
        else 
            layer2_out_4_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    layer2_out_5 <= grp_layernorm_1d_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config2_s_fu_263_ap_return_0;

    layer2_out_5_ap_vld_assign_proc : process(ap_CS_fsm_state2, ap_block_state2_on_subcall_done)
    begin
        if (((ap_const_boolean_0 = ap_block_state2_on_subcall_done) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
            layer2_out_5_ap_vld <= ap_const_logic_1;
        else 
            layer2_out_5_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    layer2_out_6 <= grp_layernorm_1d_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config2_s_fu_263_ap_return_1;

    layer2_out_6_ap_vld_assign_proc : process(ap_CS_fsm_state2, ap_block_state2_on_subcall_done)
    begin
        if (((ap_const_boolean_0 = ap_block_state2_on_subcall_done) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
            layer2_out_6_ap_vld <= ap_const_logic_1;
        else 
            layer2_out_6_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    layer2_out_7 <= grp_layernorm_1d_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config2_s_fu_263_ap_return_2;

    layer2_out_7_ap_vld_assign_proc : process(ap_CS_fsm_state2, ap_block_state2_on_subcall_done)
    begin
        if (((ap_const_boolean_0 = ap_block_state2_on_subcall_done) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
            layer2_out_7_ap_vld <= ap_const_logic_1;
        else 
            layer2_out_7_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    layer2_out_8 <= grp_layernorm_1d_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config2_s_fu_263_ap_return_3;

    layer2_out_8_ap_vld_assign_proc : process(ap_CS_fsm_state2, ap_block_state2_on_subcall_done)
    begin
        if (((ap_const_boolean_0 = ap_block_state2_on_subcall_done) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
            layer2_out_8_ap_vld <= ap_const_logic_1;
        else 
            layer2_out_8_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    layer2_out_9 <= grp_layernorm_1d_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config2_s_fu_263_ap_return_4;

    layer2_out_9_ap_vld_assign_proc : process(ap_CS_fsm_state2, ap_block_state2_on_subcall_done)
    begin
        if (((ap_const_boolean_0 = ap_block_state2_on_subcall_done) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
            layer2_out_9_ap_vld <= ap_const_logic_1;
        else 
            layer2_out_9_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

end behav;
