// ==============================================================
// Generated by Vitis HLS v2023.2
// Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
// Copyright 2022-2023 Advanced Micro Devices, Inc. All Rights Reserved.
// ==============================================================

`timescale 1 ns / 1 ps 

module myproject_layernorm_1d_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config2_s (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        data_0_val,
        data_1_val,
        data_2_val,
        data_3_val,
        data_4_val,
        data_5_val,
        data_6_val,
        data_7_val,
        data_8_val,
        data_9_val,
        ap_return_0,
        ap_return_1,
        ap_return_2,
        ap_return_3,
        ap_return_4,
        ap_return_5,
        ap_return_6,
        ap_return_7,
        ap_return_8,
        ap_return_9
);

parameter    ap_ST_fsm_state1 = 7'd1;
parameter    ap_ST_fsm_state2 = 7'd2;
parameter    ap_ST_fsm_state3 = 7'd4;
parameter    ap_ST_fsm_state4 = 7'd8;
parameter    ap_ST_fsm_state5 = 7'd16;
parameter    ap_ST_fsm_state6 = 7'd32;
parameter    ap_ST_fsm_state7 = 7'd64;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
input  [15:0] data_0_val;
input  [15:0] data_1_val;
input  [15:0] data_2_val;
input  [15:0] data_3_val;
input  [15:0] data_4_val;
input  [15:0] data_5_val;
input  [15:0] data_6_val;
input  [15:0] data_7_val;
input  [15:0] data_8_val;
input  [15:0] data_9_val;
output  [15:0] ap_return_0;
output  [15:0] ap_return_1;
output  [15:0] ap_return_2;
output  [15:0] ap_return_3;
output  [15:0] ap_return_4;
output  [15:0] ap_return_5;
output  [15:0] ap_return_6;
output  [15:0] ap_return_7;
output  [15:0] ap_return_8;
output  [15:0] ap_return_9;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg[15:0] ap_return_0;
reg[15:0] ap_return_1;
reg[15:0] ap_return_2;
reg[15:0] ap_return_3;
reg[15:0] ap_return_4;
reg[15:0] ap_return_5;
reg[15:0] ap_return_6;
reg[15:0] ap_return_7;
reg[15:0] ap_return_8;
reg[15:0] ap_return_9;

(* fsm_encoding = "none" *) reg   [6:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
wire   [9:0] index_table_address0;
reg    index_table_ce0;
wire   [20:0] index_table_q0;
wire   [9:0] invert_sqr_table_address0;
reg    invert_sqr_table_ce0;
wire   [28:0] invert_sqr_table_q0;
wire   [18:0] sum_cache_fu_239_p3;
reg   [18:0] sum_cache_reg_1106;
wire   [18:0] shl_ln_fu_247_p3;
reg   [18:0] shl_ln_reg_1111;
wire   [18:0] shl_ln109_1_fu_255_p3;
reg   [18:0] shl_ln109_1_reg_1116;
wire   [18:0] shl_ln109_2_fu_263_p3;
reg   [18:0] shl_ln109_2_reg_1121;
wire   [18:0] shl_ln109_3_fu_271_p3;
reg   [18:0] shl_ln109_3_reg_1126;
wire   [18:0] shl_ln109_4_fu_279_p3;
reg   [18:0] shl_ln109_4_reg_1131;
wire   [18:0] shl_ln109_5_fu_287_p3;
reg   [18:0] shl_ln109_5_reg_1136;
wire   [18:0] shl_ln109_6_fu_295_p3;
reg   [18:0] shl_ln109_6_reg_1141;
wire   [18:0] shl_ln109_7_fu_303_p3;
reg   [18:0] shl_ln109_7_reg_1146;
wire   [18:0] shl_ln109_8_fu_311_p3;
reg   [18:0] shl_ln109_8_reg_1151;
reg   [16:0] mean_reg_1156;
wire  signed [18:0] sub_ln114_fu_396_p2;
reg  signed [18:0] sub_ln114_reg_1161;
wire    ap_CS_fsm_state2;
wire  signed [18:0] sub_ln114_1_fu_421_p2;
reg  signed [18:0] sub_ln114_1_reg_1166;
wire  signed [18:0] sub_ln114_2_fu_446_p2;
reg  signed [18:0] sub_ln114_2_reg_1171;
wire  signed [18:0] sub_ln114_3_fu_471_p2;
reg  signed [18:0] sub_ln114_3_reg_1176;
wire  signed [18:0] sub_ln114_4_fu_496_p2;
reg  signed [18:0] sub_ln114_4_reg_1181;
wire  signed [18:0] sub_ln114_5_fu_521_p2;
reg  signed [18:0] sub_ln114_5_reg_1186;
wire  signed [18:0] sub_ln114_6_fu_546_p2;
reg  signed [18:0] sub_ln114_6_reg_1191;
wire  signed [18:0] sub_ln114_7_fu_571_p2;
reg  signed [18:0] sub_ln114_7_reg_1196;
wire  signed [18:0] sub_ln114_8_fu_596_p2;
reg  signed [18:0] sub_ln114_8_reg_1201;
wire  signed [18:0] sub_ln114_9_fu_621_p2;
reg  signed [18:0] sub_ln114_9_reg_1206;
wire   [18:0] add_ln116_1_fu_646_p2;
reg   [18:0] add_ln116_1_reg_1211;
wire   [18:0] add_ln116_3_fu_658_p2;
reg   [18:0] add_ln116_3_reg_1216;
wire   [18:0] add_ln116_8_fu_682_p2;
reg   [18:0] add_ln116_8_reg_1221;
wire   [20:0] conv_i21_i_fu_747_p3;
reg   [20:0] conv_i21_i_reg_1246;
wire    ap_CS_fsm_state3;
wire   [31:0] mid_fu_825_p3;
reg   [31:0] mid_reg_1257;
wire    ap_CS_fsm_state4;
wire    ap_CS_fsm_state5;
wire    ap_CS_fsm_state6;
reg   [28:0] deno_inver_1_reg_184;
wire   [0:0] icmp_ln52_fu_725_p2;
wire   [0:0] icmp_ln55_fu_731_p2;
wire   [63:0] zext_ln65_fu_833_p1;
wire   [63:0] zext_ln72_fu_887_p1;
wire   [0:0] icmp_ln63_fu_871_p2;
reg   [31:0] low_fu_90;
wire   [31:0] low_4_fu_843_p3;
reg   [31:0] high_fu_94;
wire   [31:0] high_3_fu_849_p3;
wire   [28:0] mul_ln122_fu_199_p0;
wire   [38:0] zext_ln122_fu_892_p1;
wire    ap_CS_fsm_state7;
wire   [28:0] mul_ln122_1_fu_203_p0;
wire   [28:0] mul_ln122_2_fu_207_p0;
wire   [28:0] mul_ln122_3_fu_211_p0;
wire   [28:0] mul_ln122_4_fu_215_p0;
wire   [28:0] mul_ln122_5_fu_219_p0;
wire   [28:0] mul_ln122_6_fu_223_p0;
wire   [28:0] mul_ln122_7_fu_227_p0;
wire   [28:0] mul_ln122_8_fu_231_p0;
wire   [28:0] mul_ln122_9_fu_235_p0;
wire   [18:0] add_ln109_2_fu_325_p2;
wire   [18:0] add_ln109_3_fu_331_p2;
wire   [18:0] add_ln109_1_fu_319_p2;
wire   [18:0] add_ln109_6_fu_349_p2;
wire   [18:0] add_ln109_7_fu_355_p2;
wire   [18:0] add_ln109_5_fu_343_p2;
wire   [18:0] add_ln109_8_fu_361_p2;
wire   [18:0] add_ln109_4_fu_337_p2;
wire  signed [18:0] add_ln109_fu_367_p2;
wire   [10:0] mul_ln73_fu_377_p1;
wire   [29:0] mul_ln73_fu_377_p2;
wire  signed [18:0] sext_ln111_fu_393_p1;
wire  signed [18:0] mul_ln115_fu_405_p0;
wire  signed [31:0] sext_ln115_fu_401_p1;
wire  signed [18:0] mul_ln115_fu_405_p1;
wire   [31:0] mul_ln115_fu_405_p2;
wire  signed [18:0] mul_ln115_1_fu_430_p0;
wire  signed [31:0] sext_ln115_1_fu_426_p1;
wire  signed [18:0] mul_ln115_1_fu_430_p1;
wire   [31:0] mul_ln115_1_fu_430_p2;
wire  signed [18:0] mul_ln115_2_fu_455_p0;
wire  signed [31:0] sext_ln115_2_fu_451_p1;
wire  signed [18:0] mul_ln115_2_fu_455_p1;
wire   [31:0] mul_ln115_2_fu_455_p2;
wire  signed [18:0] mul_ln115_3_fu_480_p0;
wire  signed [31:0] sext_ln115_3_fu_476_p1;
wire  signed [18:0] mul_ln115_3_fu_480_p1;
wire   [31:0] mul_ln115_3_fu_480_p2;
wire  signed [18:0] mul_ln115_4_fu_505_p0;
wire  signed [31:0] sext_ln115_4_fu_501_p1;
wire  signed [18:0] mul_ln115_4_fu_505_p1;
wire   [31:0] mul_ln115_4_fu_505_p2;
wire  signed [18:0] mul_ln115_5_fu_530_p0;
wire  signed [31:0] sext_ln115_5_fu_526_p1;
wire  signed [18:0] mul_ln115_5_fu_530_p1;
wire   [31:0] mul_ln115_5_fu_530_p2;
wire  signed [18:0] mul_ln115_6_fu_555_p0;
wire  signed [31:0] sext_ln115_6_fu_551_p1;
wire  signed [18:0] mul_ln115_6_fu_555_p1;
wire   [31:0] mul_ln115_6_fu_555_p2;
wire  signed [18:0] mul_ln115_7_fu_580_p0;
wire  signed [31:0] sext_ln115_7_fu_576_p1;
wire  signed [18:0] mul_ln115_7_fu_580_p1;
wire   [31:0] mul_ln115_7_fu_580_p2;
wire  signed [18:0] mul_ln115_8_fu_605_p0;
wire  signed [31:0] sext_ln115_8_fu_601_p1;
wire  signed [18:0] mul_ln115_8_fu_605_p1;
wire   [31:0] mul_ln115_8_fu_605_p2;
wire  signed [18:0] mul_ln115_9_fu_630_p0;
wire  signed [31:0] sext_ln115_9_fu_626_p1;
wire  signed [18:0] mul_ln115_9_fu_630_p1;
wire   [31:0] mul_ln115_9_fu_630_p2;
wire   [18:0] diff_10_fu_411_p4;
wire   [18:0] diff_fu_436_p4;
wire   [18:0] diff_3_fu_486_p4;
wire   [18:0] diff_4_fu_511_p4;
wire   [18:0] add_ln116_2_fu_652_p2;
wire   [18:0] diff_2_fu_461_p4;
wire   [18:0] diff_5_fu_536_p4;
wire   [18:0] diff_6_fu_561_p4;
wire   [18:0] diff_8_fu_611_p4;
wire   [18:0] diff_9_fu_636_p4;
wire   [18:0] add_ln116_6_fu_670_p2;
wire   [18:0] diff_7_fu_586_p4;
wire   [18:0] add_ln116_7_fu_676_p2;
wire   [18:0] add_ln116_5_fu_664_p2;
wire   [18:0] add_ln116_4_fu_688_p2;
wire  signed [18:0] add_ln116_fu_692_p2;
wire   [10:0] mul_ln73_1_fu_701_p1;
wire   [29:0] mul_ln73_1_fu_701_p2;
wire   [16:0] trunc_ln1_fu_707_p4;
wire   [23:0] tmp_fu_717_p3;
wire   [13:0] tmp_1_fu_737_p4;
wire   [31:0] add_ln64_fu_771_p2;
wire   [31:0] sub_ln64_fu_785_p2;
wire   [30:0] lshr_ln64_1_fu_791_p4;
wire   [31:0] zext_ln64_fu_801_p1;
wire   [30:0] lshr_ln64_2_fu_811_p4;
wire   [0:0] tmp_2_fu_777_p3;
wire   [31:0] sub_ln64_1_fu_805_p2;
wire   [31:0] zext_ln64_1_fu_821_p1;
wire   [0:0] icmp_ln65_fu_838_p2;
wire   [31:0] sub_ln63_fu_855_p2;
wire   [30:0] tmp_3_fu_861_p4;
wire   [38:0] mul_ln122_fu_199_p2;
wire   [38:0] mul_ln122_1_fu_203_p2;
wire   [38:0] mul_ln122_2_fu_207_p2;
wire   [38:0] mul_ln122_3_fu_211_p2;
wire   [38:0] mul_ln122_4_fu_215_p2;
wire   [38:0] mul_ln122_5_fu_219_p2;
wire   [38:0] mul_ln122_6_fu_223_p2;
wire   [38:0] mul_ln122_7_fu_227_p2;
wire   [38:0] mul_ln122_8_fu_231_p2;
wire   [38:0] mul_ln122_9_fu_235_p2;
reg   [15:0] ap_return_0_preg;
reg   [15:0] ap_return_1_preg;
reg   [15:0] ap_return_2_preg;
reg   [15:0] ap_return_3_preg;
reg   [15:0] ap_return_4_preg;
reg   [15:0] ap_return_5_preg;
reg   [15:0] ap_return_6_preg;
reg   [15:0] ap_return_7_preg;
reg   [15:0] ap_return_8_preg;
reg   [15:0] ap_return_9_preg;
reg   [6:0] ap_NS_fsm;
reg    ap_ST_fsm_state1_blk;
wire    ap_ST_fsm_state2_blk;
wire    ap_ST_fsm_state3_blk;
wire    ap_ST_fsm_state4_blk;
wire    ap_ST_fsm_state5_blk;
wire    ap_ST_fsm_state6_blk;
wire    ap_ST_fsm_state7_blk;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 7'd1;
#0 low_fu_90 = 32'd0;
#0 high_fu_94 = 32'd0;
#0 ap_return_0_preg = 16'd0;
#0 ap_return_1_preg = 16'd0;
#0 ap_return_2_preg = 16'd0;
#0 ap_return_3_preg = 16'd0;
#0 ap_return_4_preg = 16'd0;
#0 ap_return_5_preg = 16'd0;
#0 ap_return_6_preg = 16'd0;
#0 ap_return_7_preg = 16'd0;
#0 ap_return_8_preg = 16'd0;
#0 ap_return_9_preg = 16'd0;
end

myproject_layernorm_1d_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config2_s_index_table_RObkb #(
    .DataWidth( 21 ),
    .AddressRange( 1024 ),
    .AddressWidth( 10 ))
index_table_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(index_table_address0),
    .ce0(index_table_ce0),
    .q0(index_table_q0)
);

myproject_layernorm_1d_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config2_s_invert_sqr_tabcud #(
    .DataWidth( 29 ),
    .AddressRange( 1024 ),
    .AddressWidth( 10 ))
invert_sqr_table_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(invert_sqr_table_address0),
    .ce0(invert_sqr_table_ce0),
    .q0(invert_sqr_table_q0)
);

myproject_mul_29ns_19s_39_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 29 ),
    .din1_WIDTH( 19 ),
    .dout_WIDTH( 39 ))
mul_29ns_19s_39_1_1_U102(
    .din0(mul_ln122_fu_199_p0),
    .din1(sub_ln114_reg_1161),
    .dout(mul_ln122_fu_199_p2)
);

myproject_mul_29ns_19s_39_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 29 ),
    .din1_WIDTH( 19 ),
    .dout_WIDTH( 39 ))
mul_29ns_19s_39_1_1_U103(
    .din0(mul_ln122_1_fu_203_p0),
    .din1(sub_ln114_1_reg_1166),
    .dout(mul_ln122_1_fu_203_p2)
);

myproject_mul_29ns_19s_39_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 29 ),
    .din1_WIDTH( 19 ),
    .dout_WIDTH( 39 ))
mul_29ns_19s_39_1_1_U104(
    .din0(mul_ln122_2_fu_207_p0),
    .din1(sub_ln114_2_reg_1171),
    .dout(mul_ln122_2_fu_207_p2)
);

myproject_mul_29ns_19s_39_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 29 ),
    .din1_WIDTH( 19 ),
    .dout_WIDTH( 39 ))
mul_29ns_19s_39_1_1_U105(
    .din0(mul_ln122_3_fu_211_p0),
    .din1(sub_ln114_3_reg_1176),
    .dout(mul_ln122_3_fu_211_p2)
);

myproject_mul_29ns_19s_39_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 29 ),
    .din1_WIDTH( 19 ),
    .dout_WIDTH( 39 ))
mul_29ns_19s_39_1_1_U106(
    .din0(mul_ln122_4_fu_215_p0),
    .din1(sub_ln114_4_reg_1181),
    .dout(mul_ln122_4_fu_215_p2)
);

myproject_mul_29ns_19s_39_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 29 ),
    .din1_WIDTH( 19 ),
    .dout_WIDTH( 39 ))
mul_29ns_19s_39_1_1_U107(
    .din0(mul_ln122_5_fu_219_p0),
    .din1(sub_ln114_5_reg_1186),
    .dout(mul_ln122_5_fu_219_p2)
);

myproject_mul_29ns_19s_39_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 29 ),
    .din1_WIDTH( 19 ),
    .dout_WIDTH( 39 ))
mul_29ns_19s_39_1_1_U108(
    .din0(mul_ln122_6_fu_223_p0),
    .din1(sub_ln114_6_reg_1191),
    .dout(mul_ln122_6_fu_223_p2)
);

myproject_mul_29ns_19s_39_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 29 ),
    .din1_WIDTH( 19 ),
    .dout_WIDTH( 39 ))
mul_29ns_19s_39_1_1_U109(
    .din0(mul_ln122_7_fu_227_p0),
    .din1(sub_ln114_7_reg_1196),
    .dout(mul_ln122_7_fu_227_p2)
);

myproject_mul_29ns_19s_39_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 29 ),
    .din1_WIDTH( 19 ),
    .dout_WIDTH( 39 ))
mul_29ns_19s_39_1_1_U110(
    .din0(mul_ln122_8_fu_231_p0),
    .din1(sub_ln114_8_reg_1201),
    .dout(mul_ln122_8_fu_231_p2)
);

myproject_mul_29ns_19s_39_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 29 ),
    .din1_WIDTH( 19 ),
    .dout_WIDTH( 39 ))
mul_29ns_19s_39_1_1_U111(
    .din0(mul_ln122_9_fu_235_p0),
    .din1(sub_ln114_9_reg_1206),
    .dout(mul_ln122_9_fu_235_p2)
);

myproject_mul_19s_11ns_30_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 19 ),
    .din1_WIDTH( 11 ),
    .dout_WIDTH( 30 ))
mul_19s_11ns_30_1_1_U112(
    .din0(add_ln109_fu_367_p2),
    .din1(mul_ln73_fu_377_p1),
    .dout(mul_ln73_fu_377_p2)
);

myproject_mul_19s_19s_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 19 ),
    .din1_WIDTH( 19 ),
    .dout_WIDTH( 32 ))
mul_19s_19s_32_1_1_U113(
    .din0(mul_ln115_fu_405_p0),
    .din1(mul_ln115_fu_405_p1),
    .dout(mul_ln115_fu_405_p2)
);

myproject_mul_19s_19s_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 19 ),
    .din1_WIDTH( 19 ),
    .dout_WIDTH( 32 ))
mul_19s_19s_32_1_1_U114(
    .din0(mul_ln115_1_fu_430_p0),
    .din1(mul_ln115_1_fu_430_p1),
    .dout(mul_ln115_1_fu_430_p2)
);

myproject_mul_19s_19s_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 19 ),
    .din1_WIDTH( 19 ),
    .dout_WIDTH( 32 ))
mul_19s_19s_32_1_1_U115(
    .din0(mul_ln115_2_fu_455_p0),
    .din1(mul_ln115_2_fu_455_p1),
    .dout(mul_ln115_2_fu_455_p2)
);

myproject_mul_19s_19s_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 19 ),
    .din1_WIDTH( 19 ),
    .dout_WIDTH( 32 ))
mul_19s_19s_32_1_1_U116(
    .din0(mul_ln115_3_fu_480_p0),
    .din1(mul_ln115_3_fu_480_p1),
    .dout(mul_ln115_3_fu_480_p2)
);

myproject_mul_19s_19s_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 19 ),
    .din1_WIDTH( 19 ),
    .dout_WIDTH( 32 ))
mul_19s_19s_32_1_1_U117(
    .din0(mul_ln115_4_fu_505_p0),
    .din1(mul_ln115_4_fu_505_p1),
    .dout(mul_ln115_4_fu_505_p2)
);

myproject_mul_19s_19s_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 19 ),
    .din1_WIDTH( 19 ),
    .dout_WIDTH( 32 ))
mul_19s_19s_32_1_1_U118(
    .din0(mul_ln115_5_fu_530_p0),
    .din1(mul_ln115_5_fu_530_p1),
    .dout(mul_ln115_5_fu_530_p2)
);

myproject_mul_19s_19s_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 19 ),
    .din1_WIDTH( 19 ),
    .dout_WIDTH( 32 ))
mul_19s_19s_32_1_1_U119(
    .din0(mul_ln115_6_fu_555_p0),
    .din1(mul_ln115_6_fu_555_p1),
    .dout(mul_ln115_6_fu_555_p2)
);

myproject_mul_19s_19s_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 19 ),
    .din1_WIDTH( 19 ),
    .dout_WIDTH( 32 ))
mul_19s_19s_32_1_1_U120(
    .din0(mul_ln115_7_fu_580_p0),
    .din1(mul_ln115_7_fu_580_p1),
    .dout(mul_ln115_7_fu_580_p2)
);

myproject_mul_19s_19s_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 19 ),
    .din1_WIDTH( 19 ),
    .dout_WIDTH( 32 ))
mul_19s_19s_32_1_1_U121(
    .din0(mul_ln115_8_fu_605_p0),
    .din1(mul_ln115_8_fu_605_p1),
    .dout(mul_ln115_8_fu_605_p2)
);

myproject_mul_19s_19s_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 19 ),
    .din1_WIDTH( 19 ),
    .dout_WIDTH( 32 ))
mul_19s_19s_32_1_1_U122(
    .din0(mul_ln115_9_fu_630_p0),
    .din1(mul_ln115_9_fu_630_p1),
    .dout(mul_ln115_9_fu_630_p2)
);

myproject_mul_19s_11ns_30_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 19 ),
    .din1_WIDTH( 11 ),
    .dout_WIDTH( 30 ))
mul_19s_11ns_30_1_1_U123(
    .din0(add_ln116_fu_692_p2),
    .din1(mul_ln73_1_fu_701_p1),
    .dout(mul_ln73_1_fu_701_p2)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_return_0_preg <= 16'd0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state7)) begin
            ap_return_0_preg <= {{mul_ln122_fu_199_p2[38:23]}};
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_return_1_preg <= 16'd0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state7)) begin
            ap_return_1_preg <= {{mul_ln122_1_fu_203_p2[38:23]}};
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_return_2_preg <= 16'd0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state7)) begin
            ap_return_2_preg <= {{mul_ln122_2_fu_207_p2[38:23]}};
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_return_3_preg <= 16'd0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state7)) begin
            ap_return_3_preg <= {{mul_ln122_3_fu_211_p2[38:23]}};
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_return_4_preg <= 16'd0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state7)) begin
            ap_return_4_preg <= {{mul_ln122_4_fu_215_p2[38:23]}};
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_return_5_preg <= 16'd0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state7)) begin
            ap_return_5_preg <= {{mul_ln122_5_fu_219_p2[38:23]}};
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_return_6_preg <= 16'd0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state7)) begin
            ap_return_6_preg <= {{mul_ln122_6_fu_223_p2[38:23]}};
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_return_7_preg <= 16'd0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state7)) begin
            ap_return_7_preg <= {{mul_ln122_7_fu_227_p2[38:23]}};
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_return_8_preg <= 16'd0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state7)) begin
            ap_return_8_preg <= {{mul_ln122_8_fu_231_p2[38:23]}};
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_return_9_preg <= 16'd0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state7)) begin
            ap_return_9_preg <= {{mul_ln122_9_fu_235_p2[38:23]}};
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state3) & (icmp_ln55_fu_731_p2 == 1'd1) & (icmp_ln52_fu_725_p2 == 1'd0))) begin
        deno_inver_1_reg_184 <= 29'd1048497;
    end else if (((1'b1 == ap_CS_fsm_state3) & (icmp_ln52_fu_725_p2 == 1'd1))) begin
        deno_inver_1_reg_184 <= 29'd331588800;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        deno_inver_1_reg_184 <= invert_sqr_table_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state3) & (icmp_ln55_fu_731_p2 == 1'd0) & (icmp_ln52_fu_725_p2 == 1'd0))) begin
        high_fu_94 <= 32'd1023;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        high_fu_94 <= high_3_fu_849_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state3) & (icmp_ln55_fu_731_p2 == 1'd0) & (icmp_ln52_fu_725_p2 == 1'd0))) begin
        low_fu_90 <= 32'd0;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        low_fu_90 <= low_4_fu_843_p3;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        add_ln116_1_reg_1211 <= add_ln116_1_fu_646_p2;
        add_ln116_3_reg_1216 <= add_ln116_3_fu_658_p2;
        add_ln116_8_reg_1221 <= add_ln116_8_fu_682_p2;
        sub_ln114_1_reg_1166 <= sub_ln114_1_fu_421_p2;
        sub_ln114_2_reg_1171 <= sub_ln114_2_fu_446_p2;
        sub_ln114_3_reg_1176 <= sub_ln114_3_fu_471_p2;
        sub_ln114_4_reg_1181 <= sub_ln114_4_fu_496_p2;
        sub_ln114_5_reg_1186 <= sub_ln114_5_fu_521_p2;
        sub_ln114_6_reg_1191 <= sub_ln114_6_fu_546_p2;
        sub_ln114_7_reg_1196 <= sub_ln114_7_fu_571_p2;
        sub_ln114_8_reg_1201 <= sub_ln114_8_fu_596_p2;
        sub_ln114_9_reg_1206 <= sub_ln114_9_fu_621_p2;
        sub_ln114_reg_1161 <= sub_ln114_fu_396_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        conv_i21_i_reg_1246[20 : 7] <= conv_i21_i_fu_747_p3[20 : 7];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state1)) begin
        mean_reg_1156 <= {{mul_ln73_fu_377_p2[29:13]}};
        shl_ln109_1_reg_1116[18 : 3] <= shl_ln109_1_fu_255_p3[18 : 3];
        shl_ln109_2_reg_1121[18 : 3] <= shl_ln109_2_fu_263_p3[18 : 3];
        shl_ln109_3_reg_1126[18 : 3] <= shl_ln109_3_fu_271_p3[18 : 3];
        shl_ln109_4_reg_1131[18 : 3] <= shl_ln109_4_fu_279_p3[18 : 3];
        shl_ln109_5_reg_1136[18 : 3] <= shl_ln109_5_fu_287_p3[18 : 3];
        shl_ln109_6_reg_1141[18 : 3] <= shl_ln109_6_fu_295_p3[18 : 3];
        shl_ln109_7_reg_1146[18 : 3] <= shl_ln109_7_fu_303_p3[18 : 3];
        shl_ln109_8_reg_1151[18 : 3] <= shl_ln109_8_fu_311_p3[18 : 3];
        shl_ln_reg_1111[18 : 3] <= shl_ln_fu_247_p3[18 : 3];
        sum_cache_reg_1106[18 : 3] <= sum_cache_fu_239_p3[18 : 3];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        mid_reg_1257 <= mid_fu_825_p3;
    end
end

always @ (*) begin
    if ((ap_start == 1'b0)) begin
        ap_ST_fsm_state1_blk = 1'b1;
    end else begin
        ap_ST_fsm_state1_blk = 1'b0;
    end
end

assign ap_ST_fsm_state2_blk = 1'b0;

assign ap_ST_fsm_state3_blk = 1'b0;

assign ap_ST_fsm_state4_blk = 1'b0;

assign ap_ST_fsm_state5_blk = 1'b0;

assign ap_ST_fsm_state6_blk = 1'b0;

assign ap_ST_fsm_state7_blk = 1'b0;

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state7) | ((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b0)))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state7)) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state7)) begin
        ap_return_0 = {{mul_ln122_fu_199_p2[38:23]}};
    end else begin
        ap_return_0 = ap_return_0_preg;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state7)) begin
        ap_return_1 = {{mul_ln122_1_fu_203_p2[38:23]}};
    end else begin
        ap_return_1 = ap_return_1_preg;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state7)) begin
        ap_return_2 = {{mul_ln122_2_fu_207_p2[38:23]}};
    end else begin
        ap_return_2 = ap_return_2_preg;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state7)) begin
        ap_return_3 = {{mul_ln122_3_fu_211_p2[38:23]}};
    end else begin
        ap_return_3 = ap_return_3_preg;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state7)) begin
        ap_return_4 = {{mul_ln122_4_fu_215_p2[38:23]}};
    end else begin
        ap_return_4 = ap_return_4_preg;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state7)) begin
        ap_return_5 = {{mul_ln122_5_fu_219_p2[38:23]}};
    end else begin
        ap_return_5 = ap_return_5_preg;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state7)) begin
        ap_return_6 = {{mul_ln122_6_fu_223_p2[38:23]}};
    end else begin
        ap_return_6 = ap_return_6_preg;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state7)) begin
        ap_return_7 = {{mul_ln122_7_fu_227_p2[38:23]}};
    end else begin
        ap_return_7 = ap_return_7_preg;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state7)) begin
        ap_return_8 = {{mul_ln122_8_fu_231_p2[38:23]}};
    end else begin
        ap_return_8 = ap_return_8_preg;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state7)) begin
        ap_return_9 = {{mul_ln122_9_fu_235_p2[38:23]}};
    end else begin
        ap_return_9 = ap_return_9_preg;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        index_table_ce0 = 1'b1;
    end else begin
        index_table_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state5)) begin
        invert_sqr_table_ce0 = 1'b1;
    end else begin
        invert_sqr_table_ce0 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            ap_NS_fsm = ap_ST_fsm_state3;
        end
        ap_ST_fsm_state3 : begin
            if (((1'b1 == ap_CS_fsm_state3) & (icmp_ln55_fu_731_p2 == 1'd0) & (icmp_ln52_fu_725_p2 == 1'd0))) begin
                ap_NS_fsm = ap_ST_fsm_state4;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state7;
            end
        end
        ap_ST_fsm_state4 : begin
            ap_NS_fsm = ap_ST_fsm_state5;
        end
        ap_ST_fsm_state5 : begin
            if (((1'b1 == ap_CS_fsm_state5) & (icmp_ln63_fu_871_p2 == 1'd0))) begin
                ap_NS_fsm = ap_ST_fsm_state6;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state4;
            end
        end
        ap_ST_fsm_state6 : begin
            ap_NS_fsm = ap_ST_fsm_state7;
        end
        ap_ST_fsm_state7 : begin
            ap_NS_fsm = ap_ST_fsm_state1;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign add_ln109_1_fu_319_p2 = (shl_ln_fu_247_p3 + sum_cache_fu_239_p3);

assign add_ln109_2_fu_325_p2 = (shl_ln109_2_fu_263_p3 + shl_ln109_3_fu_271_p3);

assign add_ln109_3_fu_331_p2 = (add_ln109_2_fu_325_p2 + shl_ln109_1_fu_255_p3);

assign add_ln109_4_fu_337_p2 = (add_ln109_3_fu_331_p2 + add_ln109_1_fu_319_p2);

assign add_ln109_5_fu_343_p2 = (shl_ln109_4_fu_279_p3 + shl_ln109_5_fu_287_p3);

assign add_ln109_6_fu_349_p2 = (shl_ln109_7_fu_303_p3 + shl_ln109_8_fu_311_p3);

assign add_ln109_7_fu_355_p2 = (add_ln109_6_fu_349_p2 + shl_ln109_6_fu_295_p3);

assign add_ln109_8_fu_361_p2 = (add_ln109_7_fu_355_p2 + add_ln109_5_fu_343_p2);

assign add_ln109_fu_367_p2 = (add_ln109_8_fu_361_p2 + add_ln109_4_fu_337_p2);

assign add_ln116_1_fu_646_p2 = (diff_10_fu_411_p4 + diff_fu_436_p4);

assign add_ln116_2_fu_652_p2 = (diff_3_fu_486_p4 + diff_4_fu_511_p4);

assign add_ln116_3_fu_658_p2 = (add_ln116_2_fu_652_p2 + diff_2_fu_461_p4);

assign add_ln116_4_fu_688_p2 = (add_ln116_3_reg_1216 + add_ln116_1_reg_1211);

assign add_ln116_5_fu_664_p2 = (diff_5_fu_536_p4 + diff_6_fu_561_p4);

assign add_ln116_6_fu_670_p2 = (diff_8_fu_611_p4 + diff_9_fu_636_p4);

assign add_ln116_7_fu_676_p2 = (add_ln116_6_fu_670_p2 + diff_7_fu_586_p4);

assign add_ln116_8_fu_682_p2 = (add_ln116_7_fu_676_p2 + add_ln116_5_fu_664_p2);

assign add_ln116_fu_692_p2 = (add_ln116_8_reg_1221 + add_ln116_4_fu_688_p2);

assign add_ln64_fu_771_p2 = (low_fu_90 + high_fu_94);

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state3 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_state4 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_state5 = ap_CS_fsm[32'd4];

assign ap_CS_fsm_state6 = ap_CS_fsm[32'd5];

assign ap_CS_fsm_state7 = ap_CS_fsm[32'd6];

assign conv_i21_i_fu_747_p3 = {{tmp_1_fu_737_p4}, {7'd0}};

assign diff_10_fu_411_p4 = {{mul_ln115_fu_405_p2[31:13]}};

assign diff_2_fu_461_p4 = {{mul_ln115_2_fu_455_p2[31:13]}};

assign diff_3_fu_486_p4 = {{mul_ln115_3_fu_480_p2[31:13]}};

assign diff_4_fu_511_p4 = {{mul_ln115_4_fu_505_p2[31:13]}};

assign diff_5_fu_536_p4 = {{mul_ln115_5_fu_530_p2[31:13]}};

assign diff_6_fu_561_p4 = {{mul_ln115_6_fu_555_p2[31:13]}};

assign diff_7_fu_586_p4 = {{mul_ln115_7_fu_580_p2[31:13]}};

assign diff_8_fu_611_p4 = {{mul_ln115_8_fu_605_p2[31:13]}};

assign diff_9_fu_636_p4 = {{mul_ln115_9_fu_630_p2[31:13]}};

assign diff_fu_436_p4 = {{mul_ln115_1_fu_430_p2[31:13]}};

assign high_3_fu_849_p3 = ((icmp_ln65_fu_838_p2[0:0] == 1'b1) ? high_fu_94 : mid_reg_1257);

assign icmp_ln52_fu_725_p2 = (($signed(tmp_fu_717_p3) < $signed(24'd11)) ? 1'b1 : 1'b0);

assign icmp_ln55_fu_731_p2 = (($signed(tmp_fu_717_p3) > $signed(24'd1048732)) ? 1'b1 : 1'b0);

assign icmp_ln63_fu_871_p2 = (($signed(tmp_3_fu_861_p4) > $signed(31'd0)) ? 1'b1 : 1'b0);

assign icmp_ln65_fu_838_p2 = ((conv_i21_i_reg_1246 > index_table_q0) ? 1'b1 : 1'b0);

assign index_table_address0 = zext_ln65_fu_833_p1;

assign invert_sqr_table_address0 = zext_ln72_fu_887_p1;

assign low_4_fu_843_p3 = ((icmp_ln65_fu_838_p2[0:0] == 1'b1) ? mid_reg_1257 : low_fu_90);

assign lshr_ln64_1_fu_791_p4 = {{sub_ln64_fu_785_p2[31:1]}};

assign lshr_ln64_2_fu_811_p4 = {{add_ln64_fu_771_p2[31:1]}};

assign mid_fu_825_p3 = ((tmp_2_fu_777_p3[0:0] == 1'b1) ? sub_ln64_1_fu_805_p2 : zext_ln64_1_fu_821_p1);

assign mul_ln115_1_fu_430_p0 = sext_ln115_1_fu_426_p1;

assign mul_ln115_1_fu_430_p1 = sext_ln115_1_fu_426_p1;

assign mul_ln115_2_fu_455_p0 = sext_ln115_2_fu_451_p1;

assign mul_ln115_2_fu_455_p1 = sext_ln115_2_fu_451_p1;

assign mul_ln115_3_fu_480_p0 = sext_ln115_3_fu_476_p1;

assign mul_ln115_3_fu_480_p1 = sext_ln115_3_fu_476_p1;

assign mul_ln115_4_fu_505_p0 = sext_ln115_4_fu_501_p1;

assign mul_ln115_4_fu_505_p1 = sext_ln115_4_fu_501_p1;

assign mul_ln115_5_fu_530_p0 = sext_ln115_5_fu_526_p1;

assign mul_ln115_5_fu_530_p1 = sext_ln115_5_fu_526_p1;

assign mul_ln115_6_fu_555_p0 = sext_ln115_6_fu_551_p1;

assign mul_ln115_6_fu_555_p1 = sext_ln115_6_fu_551_p1;

assign mul_ln115_7_fu_580_p0 = sext_ln115_7_fu_576_p1;

assign mul_ln115_7_fu_580_p1 = sext_ln115_7_fu_576_p1;

assign mul_ln115_8_fu_605_p0 = sext_ln115_8_fu_601_p1;

assign mul_ln115_8_fu_605_p1 = sext_ln115_8_fu_601_p1;

assign mul_ln115_9_fu_630_p0 = sext_ln115_9_fu_626_p1;

assign mul_ln115_9_fu_630_p1 = sext_ln115_9_fu_626_p1;

assign mul_ln115_fu_405_p0 = sext_ln115_fu_401_p1;

assign mul_ln115_fu_405_p1 = sext_ln115_fu_401_p1;

assign mul_ln122_1_fu_203_p0 = zext_ln122_fu_892_p1;

assign mul_ln122_2_fu_207_p0 = zext_ln122_fu_892_p1;

assign mul_ln122_3_fu_211_p0 = zext_ln122_fu_892_p1;

assign mul_ln122_4_fu_215_p0 = zext_ln122_fu_892_p1;

assign mul_ln122_5_fu_219_p0 = zext_ln122_fu_892_p1;

assign mul_ln122_6_fu_223_p0 = zext_ln122_fu_892_p1;

assign mul_ln122_7_fu_227_p0 = zext_ln122_fu_892_p1;

assign mul_ln122_8_fu_231_p0 = zext_ln122_fu_892_p1;

assign mul_ln122_9_fu_235_p0 = zext_ln122_fu_892_p1;

assign mul_ln122_fu_199_p0 = zext_ln122_fu_892_p1;

assign mul_ln73_1_fu_701_p1 = 30'd819;

assign mul_ln73_fu_377_p1 = 30'd819;

assign sext_ln111_fu_393_p1 = $signed(mean_reg_1156);

assign sext_ln115_1_fu_426_p1 = sub_ln114_1_fu_421_p2;

assign sext_ln115_2_fu_451_p1 = sub_ln114_2_fu_446_p2;

assign sext_ln115_3_fu_476_p1 = sub_ln114_3_fu_471_p2;

assign sext_ln115_4_fu_501_p1 = sub_ln114_4_fu_496_p2;

assign sext_ln115_5_fu_526_p1 = sub_ln114_5_fu_521_p2;

assign sext_ln115_6_fu_551_p1 = sub_ln114_6_fu_546_p2;

assign sext_ln115_7_fu_576_p1 = sub_ln114_7_fu_571_p2;

assign sext_ln115_8_fu_601_p1 = sub_ln114_8_fu_596_p2;

assign sext_ln115_9_fu_626_p1 = sub_ln114_9_fu_621_p2;

assign sext_ln115_fu_401_p1 = sub_ln114_fu_396_p2;

assign shl_ln109_1_fu_255_p3 = {{data_2_val}, {3'd0}};

assign shl_ln109_2_fu_263_p3 = {{data_3_val}, {3'd0}};

assign shl_ln109_3_fu_271_p3 = {{data_4_val}, {3'd0}};

assign shl_ln109_4_fu_279_p3 = {{data_5_val}, {3'd0}};

assign shl_ln109_5_fu_287_p3 = {{data_6_val}, {3'd0}};

assign shl_ln109_6_fu_295_p3 = {{data_7_val}, {3'd0}};

assign shl_ln109_7_fu_303_p3 = {{data_8_val}, {3'd0}};

assign shl_ln109_8_fu_311_p3 = {{data_9_val}, {3'd0}};

assign shl_ln_fu_247_p3 = {{data_1_val}, {3'd0}};

assign sub_ln114_1_fu_421_p2 = ($signed(shl_ln_reg_1111) - $signed(sext_ln111_fu_393_p1));

assign sub_ln114_2_fu_446_p2 = ($signed(shl_ln109_1_reg_1116) - $signed(sext_ln111_fu_393_p1));

assign sub_ln114_3_fu_471_p2 = ($signed(shl_ln109_2_reg_1121) - $signed(sext_ln111_fu_393_p1));

assign sub_ln114_4_fu_496_p2 = ($signed(shl_ln109_3_reg_1126) - $signed(sext_ln111_fu_393_p1));

assign sub_ln114_5_fu_521_p2 = ($signed(shl_ln109_4_reg_1131) - $signed(sext_ln111_fu_393_p1));

assign sub_ln114_6_fu_546_p2 = ($signed(shl_ln109_5_reg_1136) - $signed(sext_ln111_fu_393_p1));

assign sub_ln114_7_fu_571_p2 = ($signed(shl_ln109_6_reg_1141) - $signed(sext_ln111_fu_393_p1));

assign sub_ln114_8_fu_596_p2 = ($signed(shl_ln109_7_reg_1146) - $signed(sext_ln111_fu_393_p1));

assign sub_ln114_9_fu_621_p2 = ($signed(shl_ln109_8_reg_1151) - $signed(sext_ln111_fu_393_p1));

assign sub_ln114_fu_396_p2 = ($signed(sum_cache_reg_1106) - $signed(sext_ln111_fu_393_p1));

assign sub_ln63_fu_855_p2 = (high_3_fu_849_p3 - low_4_fu_843_p3);

assign sub_ln64_1_fu_805_p2 = (32'd0 - zext_ln64_fu_801_p1);

assign sub_ln64_fu_785_p2 = (32'd0 - add_ln64_fu_771_p2);

assign sum_cache_fu_239_p3 = {{data_0_val}, {3'd0}};

assign tmp_1_fu_737_p4 = {{mul_ln73_1_fu_701_p2[26:13]}};

assign tmp_2_fu_777_p3 = add_ln64_fu_771_p2[32'd31];

assign tmp_3_fu_861_p4 = {{sub_ln63_fu_855_p2[31:1]}};

assign tmp_fu_717_p3 = {{trunc_ln1_fu_707_p4}, {7'd0}};

assign trunc_ln1_fu_707_p4 = {{mul_ln73_1_fu_701_p2[29:13]}};

assign zext_ln122_fu_892_p1 = deno_inver_1_reg_184;

assign zext_ln64_1_fu_821_p1 = lshr_ln64_2_fu_811_p4;

assign zext_ln64_fu_801_p1 = lshr_ln64_1_fu_791_p4;

assign zext_ln65_fu_833_p1 = mid_fu_825_p3;

assign zext_ln72_fu_887_p1 = low_4_fu_843_p3;

always @ (posedge ap_clk) begin
    sum_cache_reg_1106[2:0] <= 3'b000;
    shl_ln_reg_1111[2:0] <= 3'b000;
    shl_ln109_1_reg_1116[2:0] <= 3'b000;
    shl_ln109_2_reg_1121[2:0] <= 3'b000;
    shl_ln109_3_reg_1126[2:0] <= 3'b000;
    shl_ln109_4_reg_1131[2:0] <= 3'b000;
    shl_ln109_5_reg_1136[2:0] <= 3'b000;
    shl_ln109_6_reg_1141[2:0] <= 3'b000;
    shl_ln109_7_reg_1146[2:0] <= 3'b000;
    shl_ln109_8_reg_1151[2:0] <= 3'b000;
    conv_i21_i_reg_1246[6:0] <= 7'b0000000;
end

endmodule //myproject_layernorm_1d_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config2_s
