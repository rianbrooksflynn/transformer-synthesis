<pragmas>
<pragma file="" line="0" pragmaType="inline" parentfunction="ap_int_base<13, true>::ap_int_base<12, true>(ap_int_base<12, true> const&)" off="0" region="0" recursive="0"/>
<pragma file="" line="0" pragmaType="inline" parentfunction="ap_int_base<13, true>::ap_int_base(int)" off="0" region="0" recursive="0"/>
<pragma file="" line="0" pragmaType="inline" parentfunction="ap_int<13>::ap_int<13, true>(ap_int_base<13, true> const&)" off="0" region="0" recursive="0"/>
<pragma file="firmware/nnet_utils/nnet_array.h" line="17" pragmaType="pipeline" parentfunction="transpose_2d" off="0" ii="-1" style=""/>
<pragma file="firmware/nnet_utils/nnet_array.h" line="17" pragmaType="pipeline" parentfunction="transpose_2d" off="0" ii="-1" style=""/>
<pragma file="firmware/nnet_utils/nnet_layernorm.h" line="146" pragmaType="pipeline" parentfunction="layernormalize" off="0" ii="-1" rewind="0" style=""/>
<pragma file="firmware/nnet_utils/nnet_layernorm.h" line="149" pragmaType="unroll" parentfunction="layernormalize" factor="-1" skip_exit_check="0"/>
<pragma file="firmware/nnet_utils/nnet_layernorm.h" line="155" pragmaType="unroll" parentfunction="layernormalize" factor="-1" skip_exit_check="0"/>
<pragma file="firmware/nnet_utils/nnet_layernorm.h" line="137" pragmaType="function_instantiate" parentfunction="layernormalize" variable="bias"/>
<pragma file="firmware/nnet_utils/nnet_layernorm.h" line="137" pragmaType="function_instantiate" parentfunction="layernormalize" variable="scale"/>
<pragma file="firmware/nnet_utils/nnet_layernorm.h" line="139" pragmaType="array_partition" parentfunction="layernormalize" dim="1" factor="0" mode="complete" dynamic="0" variable="scale"/>
<pragma file="firmware/nnet_utils/nnet_layernorm.h" line="140" pragmaType="array_partition" parentfunction="layernormalize" dim="1" factor="0" mode="complete" dynamic="0" variable="bias"/>
<pragma file="firmware/nnet_utils/nnet_layernorm.h" line="141" pragmaType="array_partition" parentfunction="layernormalize" dim="1" factor="0" mode="complete" dynamic="0" variable="in_val"/>
<pragma file="firmware/nnet_utils/nnet_layernorm.h" line="142" pragmaType="array_partition" parentfunction="layernormalize" dim="1" factor="0" mode="complete" dynamic="0" variable="outval"/>
<pragma file="" line="0" pragmaType="inline" parentfunction="ap_fixed<16, 6, (ap_q_mode)5, (ap_o_mode)3, 0>::ap_fixed(double)" off="0" region="0" recursive="0"/>
<pragma file="" line="0" pragmaType="inline" parentfunction="ap_int<55>::ap_int<55, true>(ap_int_base<55, true> const&)" off="0" region="0" recursive="0"/>
<pragma file="/opt/Xilinx/Vitis_HLS/2023.2/common/technology/autopilot/etc/ap_common.h" line="515" pragmaType="inline" parentfunction="_ZN8ssdm_intILi55ELb1EEC2EDq55_i" off="0" region="0" recursive="0"/>
<pragma file="/opt/Xilinx/Vitis_HLS/2023.2/common/technology/autopilot/etc/ap_common.h" line="523" pragmaType="inline" parentfunction="_ZN8ssdm_intILi1ELb0EEC2EDq1_j" off="0" region="0" recursive="0"/>
<pragma file="" line="0" pragmaType="inline" parentfunction="ap_int_base<13, true>::ap_int_base<11, false>(ap_int_base<11, false> const&)" off="0" region="0" recursive="0"/>
<pragma file="" line="0" pragmaType="inline" parentfunction="ap_int_base<11, false>::RType<12, true>::minus operator-<11, false, 12, true>(ap_int_base<11, false> const&, ap_int_base<12, true> const&)" off="0" region="0" recursive="0"/>
<pragma file="" line="0" pragmaType="inline" parentfunction="ap_int_base<54, true>& ap_int_base<54, true>::operator=<55, true>(ap_int_base<55, true> const&)" off="0" region="0" recursive="0"/>
<pragma file="/opt/Xilinx/Vitis_HLS/2023.2/common/technology/autopilot/etc/ap_common.h" line="718" pragmaType="inline" parentfunction="doubleToRawBits" off="0" region="0" recursive="0"/>
<pragma file="" line="0" pragmaType="inline" parentfunction="ap_int_base<12, true>::ap_int_base(int)" off="0" region="0" recursive="0"/>
<pragma file="/opt/Xilinx/Vitis_HLS/2023.2/common/technology/autopilot/etc/ap_common.h" line="515" pragmaType="inline" parentfunction="_ZN8ssdm_intILi13ELb1EEC2EDq13_i" off="0" region="0" recursive="0"/>
<pragma file="/opt/Xilinx/Vitis_HLS/2023.2/common/technology/autopilot/etc/ap_common.h" line="515" pragmaType="inline" parentfunction="_ZN8ssdm_intILi12ELb1EEC2EDq12_i" off="0" region="0" recursive="0"/>
<pragma file="firmware/myproject.cpp" line="16" pragmaType="pipeline" parentfunction="myproject" off="0" ii="-1" style=""/>
<pragma file="firmware/myproject.cpp" line="13" pragmaType="array_reshape" parentfunction="myproject" dim="0" factor="0" mode="complete" variable="input_1"/>
<pragma file="firmware/myproject.cpp" line="14" pragmaType="array_partition" parentfunction="myproject" dim="0" factor="0" mode="complete" dynamic="0" variable="layer2_out"/>
<pragma file="firmware/myproject.cpp" line="15" pragmaType="interface" parentfunction="myproject" mode="ap_vld" port="layer2_out" name="" register="0"/>
<pragma file="firmware/myproject.cpp" line="15" pragmaType="interface" parentfunction="myproject" mode="ap_vld" port="input_1" name="" register="0"/>
<pragma file="firmware/myproject.cpp" line="33" pragmaType="array_partition" parentfunction="myproject" dim="0" factor="0" mode="complete" dynamic="0" variable="layer3_out"/>
<pragma file="firmware/myproject.cpp" line="37" pragmaType="array_partition" parentfunction="myproject" dim="0" factor="0" mode="complete" dynamic="0" variable="layer4_out"/>
<pragma file="" line="0" pragmaType="inline" parentfunction="ap_int_base<1, false>::RType<54, true>::minus operator-<1, false, 54, true>(ap_int_base<1, false> const&, ap_int_base<54, true> const&)" off="0" region="0" recursive="0"/>
<pragma file="" line="0" pragmaType="inline" parentfunction="ap_int_base<55, true>::ap_int_base<1, false>(ap_int_base<1, false> const&)" off="0" region="0" recursive="0"/>
<pragma file="" line="0" pragmaType="inline" parentfunction="ap_int_base<55, true>::ap_int_base<54, true>(ap_int_base<54, true> const&)" off="0" region="0" recursive="0"/>
<pragma file="" line="0" pragmaType="inline" parentfunction="ap_int_base<55, true>::ap_int_base(int)" off="0" region="0" recursive="0"/>
<pragma file="" line="0" pragmaType="inline" parentfunction="ap_int_base<54, true>::operator-() const" off="0" region="0" recursive="0"/>
<pragma file="" line="0" pragmaType="inline" parentfunction="report" off="0" region="0" recursive="0"/>
<pragma file="" line="0" pragmaType="inline" parentfunction="ap_int_base<1, false>::ap_int_base(int)" off="0" region="0" recursive="0"/>
<pragma file="" line="0" pragmaType="inline" parentfunction="ap_fixed<19, 6, (ap_q_mode)5, (ap_o_mode)3, 0>::ap_fixed(int)" off="0" region="0" recursive="0"/>
<pragma file="" line="0" pragmaType="inline" parentfunction="ap_fixed<19, 6, (ap_q_mode)5, (ap_o_mode)3, 0>::ap_fixed(double)" off="0" region="0" recursive="0"/>
<pragma file="" line="0" pragmaType="inline" parentfunction="ap_fixed<19, 6, (ap_q_mode)5, (ap_o_mode)3, 0>::ap_fixed<16, 6, true, (ap_q_mode)5, (ap_o_mode)3, 0>(ap_fixed_base<16, 6, true, (ap_q_mode)5, (ap_o_mode)3, 0> const&)" off="0" region="0" recursive="0"/>
<pragma file="" line="0" pragmaType="inline" parentfunction="ap_fixed_base<16, 6, true, (ap_q_mode)5, (ap_o_mode)3, 0>& ap_fixed_base<16, 6, true, (ap_q_mode)5, (ap_o_mode)3, 0>::operator=<66, 23, true, (ap_q_mode)5, (ap_o_mode)3, 0>(ap_fixed_base<66, 23, true, (ap_q_mode)5, (ap_o_mode)3, 0> const&)" off="0" region="0" recursive="0"/>
<pragma file="firmware/nnet_utils/nnet_mult.h" line="72" pragmaType="inline" parentfunction="product" off="0" region="0" recursive="0"/>
<pragma file="" line="0" pragmaType="inline" parentfunction="ap_fixed<19, 6, (ap_q_mode)5, (ap_o_mode)3, 0>::ap_fixed<38, 12, true, (ap_q_mode)5, (ap_o_mode)3, 0>(ap_fixed_base<38, 12, true, (ap_q_mode)5, (ap_o_mode)3, 0> const&)" off="0" region="0" recursive="0"/>
<pragma file="" line="0" pragmaType="inline" parentfunction="ap_fixed_base<19, 6, true, (ap_q_mode)5, (ap_o_mode)3, 0>::RType<19, 6, true>::minus ap_fixed_base<19, 6, true, (ap_q_mode)5, (ap_o_mode)3, 0>::operator-<19, 6, true, (ap_q_mode)5, (ap_o_mode)3, 0>(ap_fixed_base<19, 6, true, (ap_q_mode)5, (ap_o_mode)3, 0> const&) const" off="0" region="0" recursive="0"/>
<pragma file="" line="0" pragmaType="inline" parentfunction="ap_fixed<19, 6, (ap_q_mode)5, (ap_o_mode)3, 0>::ap_fixed<20, 7, true, (ap_q_mode)5, (ap_o_mode)3, 0>(ap_fixed_base<20, 7, true, (ap_q_mode)5, (ap_o_mode)3, 0> const&)" off="0" region="0" recursive="0"/>
<pragma file="" line="0" pragmaType="inline" parentfunction="ap_fixed_base<19, 6, true, (ap_q_mode)5, (ap_o_mode)3, 0>::RType<19, 6, true>::mult ap_fixed_base<19, 6, true, (ap_q_mode)5, (ap_o_mode)3, 0>::operator*<19, 6, true, (ap_q_mode)5, (ap_o_mode)3, 0>(ap_fixed_base<19, 6, true, (ap_q_mode)5, (ap_o_mode)3, 0> const&) const" off="0" region="0" recursive="0"/>
<pragma file="" line="0" pragmaType="inline" parentfunction="ap_fixed_base<19, 6, true, (ap_q_mode)5, (ap_o_mode)3, 0>::RType<19, 6, true>::plus ap_fixed_base<19, 6, true, (ap_q_mode)5, (ap_o_mode)3, 0>::operator+<19, 6, true, (ap_q_mode)5, (ap_o_mode)3, 0>(ap_fixed_base<19, 6, true, (ap_q_mode)5, (ap_o_mode)3, 0> const&) const" off="0" region="0" recursive="0"/>
<pragma file="firmware/nnet_utils/nnet_layernorm.h" line="60" pragmaType="pipeline" parentfunction="lookup_invert_sqr" off="0" ii="-1" style=""/>
<pragma file="firmware/nnet_utils/nnet_layernorm.h" line="63" pragmaType="unroll" parentfunction="lookup_invert_sqr" factor="4" skip_exit_check="0"/>
<pragma file="" line="0" pragmaType="inline" parentfunction="ap_fixed_base<19, 6, true, (ap_q_mode)5, (ap_o_mode)3, 0>::RType<30, 10, true>::mult ap_fixed_base<19, 6, true, (ap_q_mode)5, (ap_o_mode)3, 0>::operator*<30, 10, true, (ap_q_mode)5, (ap_o_mode)3, 0>(ap_fixed_base<30, 10, true, (ap_q_mode)5, (ap_o_mode)3, 0> const&) const" off="0" region="0" recursive="0"/>
<pragma file="" line="0" pragmaType="inline" parentfunction="ap_fixed_base<49, 16, true, (ap_q_mode)5, (ap_o_mode)3, 0>::RType<16, 6, true>::mult ap_fixed_base<49, 16, true, (ap_q_mode)5, (ap_o_mode)3, 0>::operator*<16, 6, true, (ap_q_mode)5, (ap_o_mode)3, 0>(ap_fixed_base<16, 6, true, (ap_q_mode)5, (ap_o_mode)3, 0> const&) const" off="0" region="0" recursive="0"/>
<pragma file="" line="0" pragmaType="inline" parentfunction="ap_fixed_base<65, 22, true, (ap_q_mode)5, (ap_o_mode)3, 0>::RType<16, 6, true>::plus ap_fixed_base<65, 22, true, (ap_q_mode)5, (ap_o_mode)3, 0>::operator+<16, 6, true, (ap_q_mode)5, (ap_o_mode)3, 0>(ap_fixed_base<16, 6, true, (ap_q_mode)5, (ap_o_mode)3, 0> const&) const" off="0" region="0" recursive="0"/>
<pragma file="" line="0" pragmaType="inline" parentfunction="ap_fixed<16, 6, (ap_q_mode)5, (ap_o_mode)3, 0>::ap_fixed<66, 23, true, (ap_q_mode)5, (ap_o_mode)3, 0>(ap_fixed_base<66, 23, true, (ap_q_mode)5, (ap_o_mode)3, 0> const&)" off="0" region="0" recursive="0"/>
<pragma file="" line="0" pragmaType="inline" parentfunction="ap_fixed_base<16, 6, true, (ap_q_mode)5, (ap_o_mode)3, 0>::ap_fixed_base<66, 23, true, (ap_q_mode)5, (ap_o_mode)3, 0>(ap_fixed_base<66, 23, true, (ap_q_mode)5, (ap_o_mode)3, 0> const&)" off="0" region="0" recursive="0"/>
<pragma file="/opt/Xilinx/Vitis_HLS/2023.2/common/technology/autopilot/etc/ap_common.h" line="515" pragmaType="inline" parentfunction="ssdm_int<16, true>::ssdm_int(short)" off="0" region="0" recursive="0"/>
<pragma file="" line="0" pragmaType="inline" parentfunction="ap_fixed_base<66, 23, true, (ap_q_mode)5, (ap_o_mode)3, 0>& ap_fixed_base<66, 23, true, (ap_q_mode)5, (ap_o_mode)3, 0>::operator=<16, 6, true, (ap_q_mode)5, (ap_o_mode)3, 0>(ap_fixed_base<16, 6, true, (ap_q_mode)5, (ap_o_mode)3, 0> const&)" off="0" region="0" recursive="0"/>
<pragma file="" line="0" pragmaType="inline" parentfunction="ap_fixed_base<66, 23, true, (ap_q_mode)5, (ap_o_mode)3, 0>::operator!() const" off="0" region="0" recursive="0"/>
<pragma file="" line="0" pragmaType="inline" parentfunction="ap_fixed_base<66, 23, true, (ap_q_mode)5, (ap_o_mode)3, 0>::ap_fixed_base(int)" off="0" region="0" recursive="0"/>
<pragma file="" line="0" pragmaType="inline" parentfunction="ap_fixed_base<66, 23, true, (ap_q_mode)5, (ap_o_mode)3, 0>::ap_fixed_base<65, 22, true, (ap_q_mode)5, (ap_o_mode)3, 0>(ap_fixed_base<65, 22, true, (ap_q_mode)5, (ap_o_mode)3, 0> const&)" off="0" region="0" recursive="0"/>
<pragma file="" line="0" pragmaType="inline" parentfunction="ap_fixed_base<66, 23, true, (ap_q_mode)5, (ap_o_mode)3, 0>::ap_fixed_base<16, 6, true, (ap_q_mode)5, (ap_o_mode)3, 0>(ap_fixed_base<16, 6, true, (ap_q_mode)5, (ap_o_mode)3, 0> const&)" off="0" region="0" recursive="0"/>
<pragma file="" line="0" pragmaType="inline" parentfunction="ap_fixed<66, 23, (ap_q_mode)5, (ap_o_mode)3, 0>::ap_fixed<66, 23, true, (ap_q_mode)5, (ap_o_mode)3, 0>(ap_fixed_base<66, 23, true, (ap_q_mode)5, (ap_o_mode)3, 0> const&)" off="0" region="0" recursive="0"/>
<pragma file="/opt/Xilinx/Vitis_HLS/2023.2/common/technology/autopilot/etc/ap_common.h" line="515" pragmaType="inline" parentfunction="_ZN8ssdm_intILi66ELb1EEC2EDq66_i" off="0" region="0" recursive="0"/>
<pragma file="" line="0" pragmaType="inline" parentfunction="report" off="0" region="0" recursive="0"/>
<pragma file="" line="0" pragmaType="inline" parentfunction="ap_fixed_base<16, 6, true, (ap_q_mode)5, (ap_o_mode)3, 0>::operator!() const" off="0" region="0" recursive="0"/>
<pragma file="" line="0" pragmaType="inline" parentfunction="ap_fixed_base<66, 23, true, (ap_q_mode)5, (ap_o_mode)3, 0>& ap_fixed_base<66, 23, true, (ap_q_mode)5, (ap_o_mode)3, 0>::operator=<32, 32, true, (ap_q_mode)5, (ap_o_mode)3, 0>(ap_fixed_base<32, 32, true, (ap_q_mode)5, (ap_o_mode)3, 0> const&)" off="0" region="0" recursive="0"/>
<pragma file="" line="0" pragmaType="inline" parentfunction="ap_fixed_base<65, 22, true, (ap_q_mode)5, (ap_o_mode)3, 0>::operator!() const" off="0" region="0" recursive="0"/>
<pragma file="" line="0" pragmaType="inline" parentfunction="ap_fixed_base<65, 22, true, (ap_q_mode)5, (ap_o_mode)3, 0>& ap_fixed_base<65, 22, true, (ap_q_mode)5, (ap_o_mode)3, 0>::operator=<32, 32, true, (ap_q_mode)5, (ap_o_mode)3, 0>(ap_fixed_base<32, 32, true, (ap_q_mode)5, (ap_o_mode)3, 0> const&)" off="0" region="0" recursive="0"/>
<pragma file="" line="0" pragmaType="inline" parentfunction="ap_fixed_base<32, 32, true, (ap_q_mode)5, (ap_o_mode)3, 0>::operator!() const" off="0" region="0" recursive="0"/>
<pragma file="" line="0" pragmaType="inline" parentfunction="ap_fixed_base<65, 22, true, (ap_q_mode)5, (ap_o_mode)3, 0>::ap_fixed_base(int)" off="0" region="0" recursive="0"/>
<pragma file="" line="0" pragmaType="inline" parentfunction="ap_fixed<65, 22, (ap_q_mode)5, (ap_o_mode)3, 0>::ap_fixed<65, 22, true, (ap_q_mode)5, (ap_o_mode)3, 0>(ap_fixed_base<65, 22, true, (ap_q_mode)5, (ap_o_mode)3, 0> const&)" off="0" region="0" recursive="0"/>
<pragma file="" line="0" pragmaType="inline" parentfunction="ap_fixed_base<49, 16, true, (ap_q_mode)5, (ap_o_mode)3, 0>& ap_fixed_base<49, 16, true, (ap_q_mode)5, (ap_o_mode)3, 0>::operator=<32, 32, true, (ap_q_mode)5, (ap_o_mode)3, 0>(ap_fixed_base<32, 32, true, (ap_q_mode)5, (ap_o_mode)3, 0> const&)" off="0" region="0" recursive="0"/>
<pragma file="" line="0" pragmaType="inline" parentfunction="ap_fixed_base<49, 16, true, (ap_q_mode)5, (ap_o_mode)3, 0>::ap_fixed_base(int)" off="0" region="0" recursive="0"/>
<pragma file="" line="0" pragmaType="inline" parentfunction="ap_fixed<49, 16, (ap_q_mode)5, (ap_o_mode)3, 0>::ap_fixed<49, 16, true, (ap_q_mode)5, (ap_o_mode)3, 0>(ap_fixed_base<49, 16, true, (ap_q_mode)5, (ap_o_mode)3, 0> const&)" off="0" region="0" recursive="0"/>
<pragma file="" line="0" pragmaType="inline" parentfunction="ap_fixed_base<27, 7, true, (ap_q_mode)5, (ap_o_mode)3, 0>& ap_fixed_base<27, 7, true, (ap_q_mode)5, (ap_o_mode)3, 0>::operator=<19, 6, true, (ap_q_mode)5, (ap_o_mode)3, 0>(ap_fixed_base<19, 6, true, (ap_q_mode)5, (ap_o_mode)3, 0> const&)" off="0" region="0" recursive="0"/>
<pragma file="" line="0" pragmaType="inline" parentfunction="bool ap_fixed_base<19, 6, true, (ap_q_mode)5, (ap_o_mode)3, 0>::operator<=<30, 10, true, (ap_q_mode)5, (ap_o_mode)3, 0>(ap_fixed_base<30, 10, true, (ap_q_mode)5, (ap_o_mode)3, 0> const&) const" off="0" region="0" recursive="0"/>
<pragma file="" line="0" pragmaType="inline" parentfunction="bool ap_fixed_base<19, 6, true, (ap_q_mode)5, (ap_o_mode)3, 0>::operator>=<30, 10, true, (ap_q_mode)5, (ap_o_mode)3, 0>(ap_fixed_base<30, 10, true, (ap_q_mode)5, (ap_o_mode)3, 0> const&) const" off="0" region="0" recursive="0"/>
<pragma file="" line="0" pragmaType="inline" parentfunction="ap_fixed_base<27, 7, true, (ap_q_mode)5, (ap_o_mode)3, 0>::ap_fixed_base<19, 6, true, (ap_q_mode)5, (ap_o_mode)3, 0>(ap_fixed_base<19, 6, true, (ap_q_mode)5, (ap_o_mode)3, 0> const&)" off="0" region="0" recursive="0"/>
<pragma file="/opt/Xilinx/Vitis_HLS/2023.2/common/technology/autopilot/etc/ap_common.h" line="515" pragmaType="inline" parentfunction="_ZN8ssdm_intILi27ELb1EEC2EDq27_i" off="0" region="0" recursive="0"/>
<pragma file="" line="0" pragmaType="inline" parentfunction="report" off="0" region="0" recursive="0"/>
<pragma file="" line="0" pragmaType="inline" parentfunction="ap_fixed_base<20, 7, true, (ap_q_mode)5, (ap_o_mode)3, 0>& ap_fixed_base<20, 7, true, (ap_q_mode)5, (ap_o_mode)3, 0>::operator=<19, 6, true, (ap_q_mode)5, (ap_o_mode)3, 0>(ap_fixed_base<19, 6, true, (ap_q_mode)5, (ap_o_mode)3, 0> const&)" off="0" region="0" recursive="0"/>
<pragma file="" line="0" pragmaType="inline" parentfunction="ap_fixed_base<19, 6, true, (ap_q_mode)5, (ap_o_mode)3, 0>::operator!() const" off="0" region="0" recursive="0"/>
<pragma file="" line="0" pragmaType="inline" parentfunction="ap_fixed_base<20, 7, true, (ap_q_mode)5, (ap_o_mode)3, 0>::ap_fixed_base(int)" off="0" region="0" recursive="0"/>
<pragma file="" line="0" pragmaType="inline" parentfunction="ap_fixed_base<20, 7, true, (ap_q_mode)5, (ap_o_mode)3, 0>::ap_fixed_base<19, 6, true, (ap_q_mode)5, (ap_o_mode)3, 0>(ap_fixed_base<19, 6, true, (ap_q_mode)5, (ap_o_mode)3, 0> const&)" off="0" region="0" recursive="0"/>
<pragma file="" line="0" pragmaType="inline" parentfunction="ap_fixed<20, 7, (ap_q_mode)5, (ap_o_mode)3, 0>::ap_fixed<20, 7, true, (ap_q_mode)5, (ap_o_mode)3, 0>(ap_fixed_base<20, 7, true, (ap_q_mode)5, (ap_o_mode)3, 0> const&)" off="0" region="0" recursive="0"/>
<pragma file="/opt/Xilinx/Vitis_HLS/2023.2/common/technology/autopilot/etc/ap_common.h" line="515" pragmaType="inline" parentfunction="_ZN8ssdm_intILi20ELb1EEC2EDq20_i" off="0" region="0" recursive="0"/>
<pragma file="" line="0" pragmaType="inline" parentfunction="report" off="0" region="0" recursive="0"/>
<pragma file="" line="0" pragmaType="inline" parentfunction="ap_fixed_base<38, 12, true, (ap_q_mode)5, (ap_o_mode)3, 0>& ap_fixed_base<38, 12, true, (ap_q_mode)5, (ap_o_mode)3, 0>::operator=<32, 32, true, (ap_q_mode)5, (ap_o_mode)3, 0>(ap_fixed_base<32, 32, true, (ap_q_mode)5, (ap_o_mode)3, 0> const&)" off="0" region="0" recursive="0"/>
<pragma file="" line="0" pragmaType="inline" parentfunction="ap_fixed_base<38, 12, true, (ap_q_mode)5, (ap_o_mode)3, 0>::ap_fixed_base(int)" off="0" region="0" recursive="0"/>
<pragma file="" line="0" pragmaType="inline" parentfunction="ap_fixed<38, 12, (ap_q_mode)5, (ap_o_mode)3, 0>::ap_fixed<38, 12, true, (ap_q_mode)5, (ap_o_mode)3, 0>(ap_fixed_base<38, 12, true, (ap_q_mode)5, (ap_o_mode)3, 0> const&)" off="0" region="0" recursive="0"/>
<pragma file="" line="0" pragmaType="inline" parentfunction="ap_fixed_base<19, 6, true, (ap_q_mode)5, (ap_o_mode)3, 0>& ap_fixed_base<19, 6, true, (ap_q_mode)5, (ap_o_mode)3, 0>::operator=<20, 7, true, (ap_q_mode)5, (ap_o_mode)3, 0>(ap_fixed_base<20, 7, true, (ap_q_mode)5, (ap_o_mode)3, 0> const&)" off="0" region="0" recursive="0"/>
<pragma file="" line="0" pragmaType="inline" parentfunction="ap_fixed_base<19, 6, true, (ap_q_mode)5, (ap_o_mode)3, 0>::ap_fixed_base<20, 7, true, (ap_q_mode)5, (ap_o_mode)3, 0>(ap_fixed_base<20, 7, true, (ap_q_mode)5, (ap_o_mode)3, 0> const&)" off="0" region="0" recursive="0"/>
<pragma file="/opt/Xilinx/Vitis_HLS/2023.2/common/technology/autopilot/etc/ap_common.h" line="515" pragmaType="inline" parentfunction="_ZN8ssdm_intILi19ELb1EEC2EDq19_i" off="0" region="0" recursive="0"/>
<pragma file="" line="0" pragmaType="inline" parentfunction="report" off="0" region="0" recursive="0"/>
<pragma file="" line="0" pragmaType="inline" parentfunction="ap_fixed_base<20, 7, true, (ap_q_mode)5, (ap_o_mode)3, 0>::operator!() const" off="0" region="0" recursive="0"/>
<pragma file="" line="0" pragmaType="inline" parentfunction="ap_fixed_base<19, 6, true, (ap_q_mode)5, (ap_o_mode)3, 0>::ap_fixed_base<38, 12, true, (ap_q_mode)5, (ap_o_mode)3, 0>(ap_fixed_base<38, 12, true, (ap_q_mode)5, (ap_o_mode)3, 0> const&)" off="0" region="0" recursive="0"/>
<pragma file="" line="0" pragmaType="inline" parentfunction="ap_fixed_base<19, 6, true, (ap_q_mode)5, (ap_o_mode)3, 0>& ap_fixed_base<19, 6, true, (ap_q_mode)5, (ap_o_mode)3, 0>::operator=<16, 6, true, (ap_q_mode)5, (ap_o_mode)3, 0>(ap_fixed_base<16, 6, true, (ap_q_mode)5, (ap_o_mode)3, 0> const&)" off="0" region="0" recursive="0"/>
<pragma file="" line="0" pragmaType="inline" parentfunction="ap_fixed_base<38, 12, true, (ap_q_mode)5, (ap_o_mode)3, 0>::operator!() const" off="0" region="0" recursive="0"/>
<pragma file="" line="0" pragmaType="inline" parentfunction="ap_fixed_base<19, 6, true, (ap_q_mode)5, (ap_o_mode)3, 0>::ap_fixed_base<16, 6, true, (ap_q_mode)5, (ap_o_mode)3, 0>(ap_fixed_base<16, 6, true, (ap_q_mode)5, (ap_o_mode)3, 0> const&)" off="0" region="0" recursive="0"/>
<pragma file="" line="0" pragmaType="inline" parentfunction="ap_fixed_base<19, 6, true, (ap_q_mode)5, (ap_o_mode)3, 0>& ap_fixed_base<19, 6, true, (ap_q_mode)5, (ap_o_mode)3, 0>::operator=<32, 32, true, (ap_q_mode)5, (ap_o_mode)3, 0>(ap_fixed_base<32, 32, true, (ap_q_mode)5, (ap_o_mode)3, 0> const&)" off="0" region="0" recursive="0"/>
<pragma file="" line="0" pragmaType="inline" parentfunction="ap_fixed_base<19, 6, true, (ap_q_mode)5, (ap_o_mode)3, 0>::ap_fixed_base(int)" off="0" region="0" recursive="0"/>
<pragma file="" line="0" pragmaType="inline" parentfunction="ap_fixed<30, 10, (ap_q_mode)5, (ap_o_mode)3, 0>::ap_fixed(float)" off="0" region="0" recursive="0"/>
<pragma file="" line="0" pragmaType="inline" parentfunction="ap_fixed<30, 10, (ap_q_mode)5, (ap_o_mode)3, 0>::ap_fixed(double)" off="0" region="0" recursive="0"/>
<pragma file="" line="0" pragmaType="inline" parentfunction="ap_fixed_base<30, 10, true, (ap_q_mode)5, (ap_o_mode)3, 0>& ap_fixed_base<30, 10, true, (ap_q_mode)5, (ap_o_mode)3, 0>::operator=<32, 32, true, (ap_q_mode)5, (ap_o_mode)3, 0>(ap_fixed_base<32, 32, true, (ap_q_mode)5, (ap_o_mode)3, 0> const&)" off="0" region="0" recursive="0"/>
<pragma file="" line="0" pragmaType="inline" parentfunction="ap_fixed_base<30, 10, true, (ap_q_mode)5, (ap_o_mode)3, 0>::ap_fixed_base(float)" off="0" region="0" recursive="0"/>
<pragma file="" line="0" pragmaType="inline" parentfunction="ap_fixed_base<30, 10, true, (ap_q_mode)5, (ap_o_mode)3, 0>::ap_fixed_base(int)" off="0" region="0" recursive="0"/>
<pragma file="firmware/nnet_utils/nnet_layernorm.h" line="78" pragmaType="pipeline" parentfunction="layernorm_1d" off="0" ii="1" style=""/>
<pragma file="firmware/nnet_utils/nnet_layernorm.h" line="79" pragmaType="array_partition" parentfunction="layernorm_1d" dim="1" factor="0" mode="complete" dynamic="0" variable="data"/>
<pragma file="firmware/nnet_utils/nnet_layernorm.h" line="80" pragmaType="array_partition" parentfunction="layernorm_1d" dim="1" factor="0" mode="complete" dynamic="0" variable="res"/>
<pragma file="firmware/nnet_utils/nnet_layernorm.h" line="104" pragmaType="array_partition" parentfunction="layernorm_1d" dim="1" factor="0" mode="complete" dynamic="0" variable="data_diff"/>
<pragma file="" line="0" pragmaType="inline" parentfunction="ap_fixed<30, 10, (ap_q_mode)5, (ap_o_mode)3, 0>::ap_fixed(int)" off="0" region="0" recursive="0"/>
<pragma file="" line="0" pragmaType="inline" parentfunction="ap_fixed_base<19, 6, true, (ap_q_mode)5, (ap_o_mode)3, 0>& ap_fixed_base<19, 6, true, (ap_q_mode)5, (ap_o_mode)3, 0>::operator+=<19, 6, true, (ap_q_mode)5, (ap_o_mode)3, 0>(ap_fixed_base<19, 6, true, (ap_q_mode)5, (ap_o_mode)3, 0> const&)" off="0" region="0" recursive="0"/>
<pragma file="" line="0" pragmaType="inline" parentfunction="ap_fixed_base<66, 23, true, (ap_q_mode)5, (ap_o_mode)3, 0>& ap_fixed_base<66, 23, true, (ap_q_mode)5, (ap_o_mode)3, 0>::operator=<65, 22, true, (ap_q_mode)5, (ap_o_mode)3, 0>(ap_fixed_base<65, 22, true, (ap_q_mode)5, (ap_o_mode)3, 0> const&)" off="0" region="0" recursive="0"/>
<pragma file="" line="0" pragmaType="inline" parentfunction="ap_fixed_base<20, 7, true, (ap_q_mode)5, (ap_o_mode)3, 0>& ap_fixed_base<20, 7, true, (ap_q_mode)5, (ap_o_mode)3, 0>::operator=<32, 32, true, (ap_q_mode)5, (ap_o_mode)3, 0>(ap_fixed_base<32, 32, true, (ap_q_mode)5, (ap_o_mode)3, 0> const&)" off="0" region="0" recursive="0"/>
<pragma file="" line="0" pragmaType="inline" parentfunction="report" off="0" region="0" recursive="0"/>
<pragma file="" line="0" pragmaType="inline" parentfunction="ap_int_base<12, true>& ap_int_base<12, true>::operator=<13, true>(ap_int_base<13, true> const&)" off="0" region="0" recursive="0"/>
<pragma file="" line="0" pragmaType="inline" parentfunction="ap_fixed_base<19, 6, true, (ap_q_mode)5, (ap_o_mode)3, 0>& ap_fixed_base<19, 6, true, (ap_q_mode)5, (ap_o_mode)3, 0>::operator=<38, 12, true, (ap_q_mode)5, (ap_o_mode)3, 0>(ap_fixed_base<38, 12, true, (ap_q_mode)5, (ap_o_mode)3, 0> const&)" off="0" region="0" recursive="0"/>
</pragmas>
