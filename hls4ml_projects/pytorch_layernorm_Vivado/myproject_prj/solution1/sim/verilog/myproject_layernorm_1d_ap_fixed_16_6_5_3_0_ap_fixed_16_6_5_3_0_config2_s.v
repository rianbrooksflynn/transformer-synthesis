// ==============================================================
// Generated by Vitis HLS v2023.2
// Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
// Copyright 2022-2023 Advanced Micro Devices, Inc. All Rights Reserved.
// ==============================================================

`timescale 1 ns / 1 ps 

module myproject_layernorm_1d_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config2_s (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        data_0_val,
        data_1_val,
        data_2_val,
        data_3_val,
        data_4_val,
        ap_return_0,
        ap_return_1,
        ap_return_2,
        ap_return_3,
        ap_return_4
);

parameter    ap_ST_fsm_state1 = 7'd1;
parameter    ap_ST_fsm_state2 = 7'd2;
parameter    ap_ST_fsm_state3 = 7'd4;
parameter    ap_ST_fsm_state4 = 7'd8;
parameter    ap_ST_fsm_state5 = 7'd16;
parameter    ap_ST_fsm_state6 = 7'd32;
parameter    ap_ST_fsm_state7 = 7'd64;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
input  [15:0] data_0_val;
input  [15:0] data_1_val;
input  [15:0] data_2_val;
input  [15:0] data_3_val;
input  [15:0] data_4_val;
output  [15:0] ap_return_0;
output  [15:0] ap_return_1;
output  [15:0] ap_return_2;
output  [15:0] ap_return_3;
output  [15:0] ap_return_4;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg[15:0] ap_return_0;
reg[15:0] ap_return_1;
reg[15:0] ap_return_2;
reg[15:0] ap_return_3;
reg[15:0] ap_return_4;

(* fsm_encoding = "none" *) reg   [6:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
wire   [9:0] index_table_address0;
reg    index_table_ce0;
wire   [20:0] index_table_q0;
wire   [9:0] invert_sqr_table_address0;
reg    invert_sqr_table_ce0;
wire   [28:0] invert_sqr_table_q0;
wire  signed [18:0] sub_ln114_fu_267_p2;
reg  signed [18:0] sub_ln114_reg_719;
wire  signed [18:0] sub_ln114_1_fu_273_p2;
reg  signed [18:0] sub_ln114_1_reg_725;
wire  signed [18:0] sub_ln114_2_fu_279_p2;
reg  signed [18:0] sub_ln114_2_reg_731;
wire  signed [18:0] sub_ln114_3_fu_285_p2;
reg  signed [18:0] sub_ln114_3_reg_737;
wire  signed [18:0] sub_ln114_4_fu_291_p2;
reg  signed [18:0] sub_ln114_4_reg_743;
wire   [18:0] add_ln116_fu_410_p2;
reg  signed [18:0] add_ln116_reg_749;
wire    ap_CS_fsm_state2;
wire   [20:0] conv_i21_i_fu_465_p3;
reg   [20:0] conv_i21_i_reg_774;
wire    ap_CS_fsm_state3;
wire   [31:0] mid_fu_543_p3;
reg   [31:0] mid_reg_785;
wire    ap_CS_fsm_state4;
wire    ap_CS_fsm_state5;
wire    ap_CS_fsm_state6;
reg   [28:0] deno_inver_1_reg_144;
wire   [0:0] icmp_ln52_fu_443_p2;
wire   [0:0] icmp_ln55_fu_449_p2;
wire   [63:0] zext_ln65_fu_551_p1;
wire   [63:0] zext_ln72_fu_605_p1;
wire   [0:0] icmp_ln63_fu_589_p2;
reg   [31:0] low_fu_80;
wire   [31:0] low_4_fu_561_p3;
reg   [31:0] high_fu_84;
wire   [31:0] high_3_fu_567_p3;
wire   [28:0] mul_ln122_fu_159_p0;
wire   [38:0] zext_ln122_fu_610_p1;
wire    ap_CS_fsm_state7;
wire   [28:0] mul_ln122_1_fu_163_p0;
wire   [28:0] mul_ln122_2_fu_167_p0;
wire   [28:0] mul_ln122_3_fu_171_p0;
wire   [28:0] mul_ln122_4_fu_175_p0;
wire   [18:0] shl_ln_fu_187_p3;
wire   [18:0] sum_cache_fu_179_p3;
wire   [18:0] shl_ln109_2_fu_203_p3;
wire   [18:0] shl_ln109_3_fu_211_p3;
wire   [18:0] add_ln109_2_fu_225_p2;
wire   [18:0] shl_ln109_1_fu_195_p3;
wire   [18:0] add_ln109_3_fu_231_p2;
wire   [18:0] add_ln109_1_fu_219_p2;
wire  signed [18:0] add_ln109_fu_237_p2;
wire   [11:0] mul_ln73_fu_247_p1;
wire   [30:0] mul_ln73_fu_247_p2;
wire   [17:0] mean_fu_253_p4;
wire  signed [18:0] sext_ln111_fu_263_p1;
wire  signed [18:0] mul_ln115_fu_300_p0;
wire  signed [31:0] sext_ln115_fu_297_p1;
wire  signed [18:0] mul_ln115_fu_300_p1;
wire   [31:0] mul_ln115_fu_300_p2;
wire  signed [18:0] mul_ln115_1_fu_319_p0;
wire  signed [31:0] sext_ln115_1_fu_316_p1;
wire  signed [18:0] mul_ln115_1_fu_319_p1;
wire   [31:0] mul_ln115_1_fu_319_p2;
wire  signed [18:0] mul_ln115_2_fu_338_p0;
wire  signed [31:0] sext_ln115_2_fu_335_p1;
wire  signed [18:0] mul_ln115_2_fu_338_p1;
wire   [31:0] mul_ln115_2_fu_338_p2;
wire  signed [18:0] mul_ln115_3_fu_357_p0;
wire  signed [31:0] sext_ln115_3_fu_354_p1;
wire  signed [18:0] mul_ln115_3_fu_357_p1;
wire   [31:0] mul_ln115_3_fu_357_p2;
wire  signed [18:0] mul_ln115_4_fu_376_p0;
wire  signed [31:0] sext_ln115_4_fu_373_p1;
wire  signed [18:0] mul_ln115_4_fu_376_p1;
wire   [31:0] mul_ln115_4_fu_376_p2;
wire   [18:0] diff_5_fu_306_p4;
wire   [18:0] diff_fu_325_p4;
wire   [18:0] diff_3_fu_363_p4;
wire   [18:0] diff_4_fu_382_p4;
wire   [18:0] add_ln116_2_fu_398_p2;
wire   [18:0] diff_2_fu_344_p4;
wire   [18:0] add_ln116_3_fu_404_p2;
wire   [18:0] add_ln116_1_fu_392_p2;
wire   [11:0] mul_ln73_1_fu_419_p1;
wire   [30:0] mul_ln73_1_fu_419_p2;
wire   [17:0] trunc_ln1_fu_425_p4;
wire   [24:0] tmp_fu_435_p3;
wire   [13:0] tmp_1_fu_455_p4;
wire   [31:0] add_ln64_fu_489_p2;
wire   [31:0] sub_ln64_fu_503_p2;
wire   [30:0] lshr_ln64_1_fu_509_p4;
wire   [31:0] zext_ln64_fu_519_p1;
wire   [30:0] lshr_ln64_2_fu_529_p4;
wire   [0:0] tmp_2_fu_495_p3;
wire   [31:0] sub_ln64_1_fu_523_p2;
wire   [31:0] zext_ln64_1_fu_539_p1;
wire   [0:0] icmp_ln65_fu_556_p2;
wire   [31:0] sub_ln63_fu_573_p2;
wire   [30:0] tmp_3_fu_579_p4;
wire   [38:0] mul_ln122_fu_159_p2;
wire   [38:0] mul_ln122_1_fu_163_p2;
wire   [38:0] mul_ln122_2_fu_167_p2;
wire   [38:0] mul_ln122_3_fu_171_p2;
wire   [38:0] mul_ln122_4_fu_175_p2;
reg   [15:0] ap_return_0_preg;
reg   [15:0] ap_return_1_preg;
reg   [15:0] ap_return_2_preg;
reg   [15:0] ap_return_3_preg;
reg   [15:0] ap_return_4_preg;
reg   [6:0] ap_NS_fsm;
reg    ap_ST_fsm_state1_blk;
wire    ap_ST_fsm_state2_blk;
wire    ap_ST_fsm_state3_blk;
wire    ap_ST_fsm_state4_blk;
wire    ap_ST_fsm_state5_blk;
wire    ap_ST_fsm_state6_blk;
wire    ap_ST_fsm_state7_blk;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 7'd1;
#0 low_fu_80 = 32'd0;
#0 high_fu_84 = 32'd0;
#0 ap_return_0_preg = 16'd0;
#0 ap_return_1_preg = 16'd0;
#0 ap_return_2_preg = 16'd0;
#0 ap_return_3_preg = 16'd0;
#0 ap_return_4_preg = 16'd0;
end

myproject_layernorm_1d_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config2_s_index_table_RObkb #(
    .DataWidth( 21 ),
    .AddressRange( 1024 ),
    .AddressWidth( 10 ))
index_table_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(index_table_address0),
    .ce0(index_table_ce0),
    .q0(index_table_q0)
);

myproject_layernorm_1d_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config2_s_invert_sqr_tabcud #(
    .DataWidth( 29 ),
    .AddressRange( 1024 ),
    .AddressWidth( 10 ))
invert_sqr_table_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(invert_sqr_table_address0),
    .ce0(invert_sqr_table_ce0),
    .q0(invert_sqr_table_q0)
);

myproject_mul_29ns_19s_39_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 29 ),
    .din1_WIDTH( 19 ),
    .dout_WIDTH( 39 ))
mul_29ns_19s_39_1_1_U22(
    .din0(mul_ln122_fu_159_p0),
    .din1(sub_ln114_reg_719),
    .dout(mul_ln122_fu_159_p2)
);

myproject_mul_29ns_19s_39_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 29 ),
    .din1_WIDTH( 19 ),
    .dout_WIDTH( 39 ))
mul_29ns_19s_39_1_1_U23(
    .din0(mul_ln122_1_fu_163_p0),
    .din1(sub_ln114_1_reg_725),
    .dout(mul_ln122_1_fu_163_p2)
);

myproject_mul_29ns_19s_39_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 29 ),
    .din1_WIDTH( 19 ),
    .dout_WIDTH( 39 ))
mul_29ns_19s_39_1_1_U24(
    .din0(mul_ln122_2_fu_167_p0),
    .din1(sub_ln114_2_reg_731),
    .dout(mul_ln122_2_fu_167_p2)
);

myproject_mul_29ns_19s_39_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 29 ),
    .din1_WIDTH( 19 ),
    .dout_WIDTH( 39 ))
mul_29ns_19s_39_1_1_U25(
    .din0(mul_ln122_3_fu_171_p0),
    .din1(sub_ln114_3_reg_737),
    .dout(mul_ln122_3_fu_171_p2)
);

myproject_mul_29ns_19s_39_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 29 ),
    .din1_WIDTH( 19 ),
    .dout_WIDTH( 39 ))
mul_29ns_19s_39_1_1_U26(
    .din0(mul_ln122_4_fu_175_p0),
    .din1(sub_ln114_4_reg_743),
    .dout(mul_ln122_4_fu_175_p2)
);

myproject_mul_19s_12ns_31_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 19 ),
    .din1_WIDTH( 12 ),
    .dout_WIDTH( 31 ))
mul_19s_12ns_31_1_1_U27(
    .din0(add_ln109_fu_237_p2),
    .din1(mul_ln73_fu_247_p1),
    .dout(mul_ln73_fu_247_p2)
);

myproject_mul_19s_19s_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 19 ),
    .din1_WIDTH( 19 ),
    .dout_WIDTH( 32 ))
mul_19s_19s_32_1_1_U28(
    .din0(mul_ln115_fu_300_p0),
    .din1(mul_ln115_fu_300_p1),
    .dout(mul_ln115_fu_300_p2)
);

myproject_mul_19s_19s_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 19 ),
    .din1_WIDTH( 19 ),
    .dout_WIDTH( 32 ))
mul_19s_19s_32_1_1_U29(
    .din0(mul_ln115_1_fu_319_p0),
    .din1(mul_ln115_1_fu_319_p1),
    .dout(mul_ln115_1_fu_319_p2)
);

myproject_mul_19s_19s_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 19 ),
    .din1_WIDTH( 19 ),
    .dout_WIDTH( 32 ))
mul_19s_19s_32_1_1_U30(
    .din0(mul_ln115_2_fu_338_p0),
    .din1(mul_ln115_2_fu_338_p1),
    .dout(mul_ln115_2_fu_338_p2)
);

myproject_mul_19s_19s_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 19 ),
    .din1_WIDTH( 19 ),
    .dout_WIDTH( 32 ))
mul_19s_19s_32_1_1_U31(
    .din0(mul_ln115_3_fu_357_p0),
    .din1(mul_ln115_3_fu_357_p1),
    .dout(mul_ln115_3_fu_357_p2)
);

myproject_mul_19s_19s_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 19 ),
    .din1_WIDTH( 19 ),
    .dout_WIDTH( 32 ))
mul_19s_19s_32_1_1_U32(
    .din0(mul_ln115_4_fu_376_p0),
    .din1(mul_ln115_4_fu_376_p1),
    .dout(mul_ln115_4_fu_376_p2)
);

myproject_mul_19s_12ns_31_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 19 ),
    .din1_WIDTH( 12 ),
    .dout_WIDTH( 31 ))
mul_19s_12ns_31_1_1_U33(
    .din0(add_ln116_reg_749),
    .din1(mul_ln73_1_fu_419_p1),
    .dout(mul_ln73_1_fu_419_p2)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_return_0_preg <= 16'd0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state7)) begin
            ap_return_0_preg <= {{mul_ln122_fu_159_p2[38:23]}};
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_return_1_preg <= 16'd0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state7)) begin
            ap_return_1_preg <= {{mul_ln122_1_fu_163_p2[38:23]}};
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_return_2_preg <= 16'd0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state7)) begin
            ap_return_2_preg <= {{mul_ln122_2_fu_167_p2[38:23]}};
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_return_3_preg <= 16'd0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state7)) begin
            ap_return_3_preg <= {{mul_ln122_3_fu_171_p2[38:23]}};
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_return_4_preg <= 16'd0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state7)) begin
            ap_return_4_preg <= {{mul_ln122_4_fu_175_p2[38:23]}};
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state3) & (icmp_ln55_fu_449_p2 == 1'd1) & (icmp_ln52_fu_443_p2 == 1'd0))) begin
        deno_inver_1_reg_144 <= 29'd1048497;
    end else if (((1'b1 == ap_CS_fsm_state3) & (icmp_ln52_fu_443_p2 == 1'd1))) begin
        deno_inver_1_reg_144 <= 29'd331588800;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        deno_inver_1_reg_144 <= invert_sqr_table_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state3) & (icmp_ln55_fu_449_p2 == 1'd0) & (icmp_ln52_fu_443_p2 == 1'd0))) begin
        high_fu_84 <= 32'd1023;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        high_fu_84 <= high_3_fu_567_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state3) & (icmp_ln55_fu_449_p2 == 1'd0) & (icmp_ln52_fu_443_p2 == 1'd0))) begin
        low_fu_80 <= 32'd0;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        low_fu_80 <= low_4_fu_561_p3;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        add_ln116_reg_749 <= add_ln116_fu_410_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        conv_i21_i_reg_774[20 : 7] <= conv_i21_i_fu_465_p3[20 : 7];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        mid_reg_785 <= mid_fu_543_p3;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state1)) begin
        sub_ln114_1_reg_725 <= sub_ln114_1_fu_273_p2;
        sub_ln114_2_reg_731 <= sub_ln114_2_fu_279_p2;
        sub_ln114_3_reg_737 <= sub_ln114_3_fu_285_p2;
        sub_ln114_4_reg_743 <= sub_ln114_4_fu_291_p2;
        sub_ln114_reg_719 <= sub_ln114_fu_267_p2;
    end
end

always @ (*) begin
    if ((ap_start == 1'b0)) begin
        ap_ST_fsm_state1_blk = 1'b1;
    end else begin
        ap_ST_fsm_state1_blk = 1'b0;
    end
end

assign ap_ST_fsm_state2_blk = 1'b0;

assign ap_ST_fsm_state3_blk = 1'b0;

assign ap_ST_fsm_state4_blk = 1'b0;

assign ap_ST_fsm_state5_blk = 1'b0;

assign ap_ST_fsm_state6_blk = 1'b0;

assign ap_ST_fsm_state7_blk = 1'b0;

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state7) | ((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b0)))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state7)) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state7)) begin
        ap_return_0 = {{mul_ln122_fu_159_p2[38:23]}};
    end else begin
        ap_return_0 = ap_return_0_preg;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state7)) begin
        ap_return_1 = {{mul_ln122_1_fu_163_p2[38:23]}};
    end else begin
        ap_return_1 = ap_return_1_preg;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state7)) begin
        ap_return_2 = {{mul_ln122_2_fu_167_p2[38:23]}};
    end else begin
        ap_return_2 = ap_return_2_preg;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state7)) begin
        ap_return_3 = {{mul_ln122_3_fu_171_p2[38:23]}};
    end else begin
        ap_return_3 = ap_return_3_preg;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state7)) begin
        ap_return_4 = {{mul_ln122_4_fu_175_p2[38:23]}};
    end else begin
        ap_return_4 = ap_return_4_preg;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        index_table_ce0 = 1'b1;
    end else begin
        index_table_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state5)) begin
        invert_sqr_table_ce0 = 1'b1;
    end else begin
        invert_sqr_table_ce0 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            ap_NS_fsm = ap_ST_fsm_state3;
        end
        ap_ST_fsm_state3 : begin
            if (((1'b1 == ap_CS_fsm_state3) & (icmp_ln55_fu_449_p2 == 1'd0) & (icmp_ln52_fu_443_p2 == 1'd0))) begin
                ap_NS_fsm = ap_ST_fsm_state4;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state7;
            end
        end
        ap_ST_fsm_state4 : begin
            ap_NS_fsm = ap_ST_fsm_state5;
        end
        ap_ST_fsm_state5 : begin
            if (((1'b1 == ap_CS_fsm_state5) & (icmp_ln63_fu_589_p2 == 1'd0))) begin
                ap_NS_fsm = ap_ST_fsm_state6;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state4;
            end
        end
        ap_ST_fsm_state6 : begin
            ap_NS_fsm = ap_ST_fsm_state7;
        end
        ap_ST_fsm_state7 : begin
            ap_NS_fsm = ap_ST_fsm_state1;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign add_ln109_1_fu_219_p2 = (shl_ln_fu_187_p3 + sum_cache_fu_179_p3);

assign add_ln109_2_fu_225_p2 = (shl_ln109_2_fu_203_p3 + shl_ln109_3_fu_211_p3);

assign add_ln109_3_fu_231_p2 = (add_ln109_2_fu_225_p2 + shl_ln109_1_fu_195_p3);

assign add_ln109_fu_237_p2 = (add_ln109_3_fu_231_p2 + add_ln109_1_fu_219_p2);

assign add_ln116_1_fu_392_p2 = (diff_5_fu_306_p4 + diff_fu_325_p4);

assign add_ln116_2_fu_398_p2 = (diff_3_fu_363_p4 + diff_4_fu_382_p4);

assign add_ln116_3_fu_404_p2 = (add_ln116_2_fu_398_p2 + diff_2_fu_344_p4);

assign add_ln116_fu_410_p2 = (add_ln116_3_fu_404_p2 + add_ln116_1_fu_392_p2);

assign add_ln64_fu_489_p2 = (low_fu_80 + high_fu_84);

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state3 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_state4 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_state5 = ap_CS_fsm[32'd4];

assign ap_CS_fsm_state6 = ap_CS_fsm[32'd5];

assign ap_CS_fsm_state7 = ap_CS_fsm[32'd6];

assign conv_i21_i_fu_465_p3 = {{tmp_1_fu_455_p4}, {7'd0}};

assign diff_2_fu_344_p4 = {{mul_ln115_2_fu_338_p2[31:13]}};

assign diff_3_fu_363_p4 = {{mul_ln115_3_fu_357_p2[31:13]}};

assign diff_4_fu_382_p4 = {{mul_ln115_4_fu_376_p2[31:13]}};

assign diff_5_fu_306_p4 = {{mul_ln115_fu_300_p2[31:13]}};

assign diff_fu_325_p4 = {{mul_ln115_1_fu_319_p2[31:13]}};

assign high_3_fu_567_p3 = ((icmp_ln65_fu_556_p2[0:0] == 1'b1) ? high_fu_84 : mid_reg_785);

assign icmp_ln52_fu_443_p2 = (($signed(tmp_fu_435_p3) < $signed(25'd11)) ? 1'b1 : 1'b0);

assign icmp_ln55_fu_449_p2 = (($signed(tmp_fu_435_p3) > $signed(25'd1048732)) ? 1'b1 : 1'b0);

assign icmp_ln63_fu_589_p2 = (($signed(tmp_3_fu_579_p4) > $signed(31'd0)) ? 1'b1 : 1'b0);

assign icmp_ln65_fu_556_p2 = ((conv_i21_i_reg_774 > index_table_q0) ? 1'b1 : 1'b0);

assign index_table_address0 = zext_ln65_fu_551_p1;

assign invert_sqr_table_address0 = zext_ln72_fu_605_p1;

assign low_4_fu_561_p3 = ((icmp_ln65_fu_556_p2[0:0] == 1'b1) ? mid_reg_785 : low_fu_80);

assign lshr_ln64_1_fu_509_p4 = {{sub_ln64_fu_503_p2[31:1]}};

assign lshr_ln64_2_fu_529_p4 = {{add_ln64_fu_489_p2[31:1]}};

assign mean_fu_253_p4 = {{mul_ln73_fu_247_p2[30:13]}};

assign mid_fu_543_p3 = ((tmp_2_fu_495_p3[0:0] == 1'b1) ? sub_ln64_1_fu_523_p2 : zext_ln64_1_fu_539_p1);

assign mul_ln115_1_fu_319_p0 = sext_ln115_1_fu_316_p1;

assign mul_ln115_1_fu_319_p1 = sext_ln115_1_fu_316_p1;

assign mul_ln115_2_fu_338_p0 = sext_ln115_2_fu_335_p1;

assign mul_ln115_2_fu_338_p1 = sext_ln115_2_fu_335_p1;

assign mul_ln115_3_fu_357_p0 = sext_ln115_3_fu_354_p1;

assign mul_ln115_3_fu_357_p1 = sext_ln115_3_fu_354_p1;

assign mul_ln115_4_fu_376_p0 = sext_ln115_4_fu_373_p1;

assign mul_ln115_4_fu_376_p1 = sext_ln115_4_fu_373_p1;

assign mul_ln115_fu_300_p0 = sext_ln115_fu_297_p1;

assign mul_ln115_fu_300_p1 = sext_ln115_fu_297_p1;

assign mul_ln122_1_fu_163_p0 = zext_ln122_fu_610_p1;

assign mul_ln122_2_fu_167_p0 = zext_ln122_fu_610_p1;

assign mul_ln122_3_fu_171_p0 = zext_ln122_fu_610_p1;

assign mul_ln122_4_fu_175_p0 = zext_ln122_fu_610_p1;

assign mul_ln122_fu_159_p0 = zext_ln122_fu_610_p1;

assign mul_ln73_1_fu_419_p1 = 31'd1638;

assign mul_ln73_fu_247_p1 = 31'd1638;

assign sext_ln111_fu_263_p1 = $signed(mean_fu_253_p4);

assign sext_ln115_1_fu_316_p1 = sub_ln114_1_reg_725;

assign sext_ln115_2_fu_335_p1 = sub_ln114_2_reg_731;

assign sext_ln115_3_fu_354_p1 = sub_ln114_3_reg_737;

assign sext_ln115_4_fu_373_p1 = sub_ln114_4_reg_743;

assign sext_ln115_fu_297_p1 = sub_ln114_reg_719;

assign shl_ln109_1_fu_195_p3 = {{data_2_val}, {3'd0}};

assign shl_ln109_2_fu_203_p3 = {{data_3_val}, {3'd0}};

assign shl_ln109_3_fu_211_p3 = {{data_4_val}, {3'd0}};

assign shl_ln_fu_187_p3 = {{data_1_val}, {3'd0}};

assign sub_ln114_1_fu_273_p2 = ($signed(shl_ln_fu_187_p3) - $signed(sext_ln111_fu_263_p1));

assign sub_ln114_2_fu_279_p2 = ($signed(shl_ln109_1_fu_195_p3) - $signed(sext_ln111_fu_263_p1));

assign sub_ln114_3_fu_285_p2 = ($signed(shl_ln109_2_fu_203_p3) - $signed(sext_ln111_fu_263_p1));

assign sub_ln114_4_fu_291_p2 = ($signed(shl_ln109_3_fu_211_p3) - $signed(sext_ln111_fu_263_p1));

assign sub_ln114_fu_267_p2 = ($signed(sum_cache_fu_179_p3) - $signed(sext_ln111_fu_263_p1));

assign sub_ln63_fu_573_p2 = (high_3_fu_567_p3 - low_4_fu_561_p3);

assign sub_ln64_1_fu_523_p2 = (32'd0 - zext_ln64_fu_519_p1);

assign sub_ln64_fu_503_p2 = (32'd0 - add_ln64_fu_489_p2);

assign sum_cache_fu_179_p3 = {{data_0_val}, {3'd0}};

assign tmp_1_fu_455_p4 = {{mul_ln73_1_fu_419_p2[26:13]}};

assign tmp_2_fu_495_p3 = add_ln64_fu_489_p2[32'd31];

assign tmp_3_fu_579_p4 = {{sub_ln63_fu_573_p2[31:1]}};

assign tmp_fu_435_p3 = {{trunc_ln1_fu_425_p4}, {7'd0}};

assign trunc_ln1_fu_425_p4 = {{mul_ln73_1_fu_419_p2[30:13]}};

assign zext_ln122_fu_610_p1 = deno_inver_1_reg_144;

assign zext_ln64_1_fu_539_p1 = lshr_ln64_2_fu_529_p4;

assign zext_ln64_fu_519_p1 = lshr_ln64_1_fu_509_p4;

assign zext_ln65_fu_551_p1 = mid_fu_543_p3;

assign zext_ln72_fu_605_p1 = low_4_fu_561_p3;

always @ (posedge ap_clk) begin
    conv_i21_i_reg_774[6:0] <= 7'b0000000;
end

endmodule //myproject_layernorm_1d_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config2_s
