-- ==============================================================
-- Generated by Vitis HLS v2023.2
-- Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
-- Copyright 2022-2023 Advanced Micro Devices, Inc. All Rights Reserved.
-- ==============================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity myproject_layernorm_1d_ap_fixed_16_6_5_3_0_ap_fixed_33_13_5_3_0_config2_s is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    ap_ce : IN STD_LOGIC;
    data_0_val : IN STD_LOGIC_VECTOR (15 downto 0);
    data_1_val : IN STD_LOGIC_VECTOR (15 downto 0);
    data_2_val : IN STD_LOGIC_VECTOR (15 downto 0);
    data_3_val : IN STD_LOGIC_VECTOR (15 downto 0);
    data_4_val : IN STD_LOGIC_VECTOR (15 downto 0);
    data_5_val : IN STD_LOGIC_VECTOR (15 downto 0);
    data_6_val : IN STD_LOGIC_VECTOR (15 downto 0);
    data_7_val : IN STD_LOGIC_VECTOR (15 downto 0);
    data_8_val : IN STD_LOGIC_VECTOR (15 downto 0);
    data_9_val : IN STD_LOGIC_VECTOR (15 downto 0);
    ap_return_0 : OUT STD_LOGIC_VECTOR (32 downto 0);
    ap_return_1 : OUT STD_LOGIC_VECTOR (32 downto 0);
    ap_return_2 : OUT STD_LOGIC_VECTOR (32 downto 0);
    ap_return_3 : OUT STD_LOGIC_VECTOR (32 downto 0);
    ap_return_4 : OUT STD_LOGIC_VECTOR (32 downto 0);
    ap_return_5 : OUT STD_LOGIC_VECTOR (32 downto 0);
    ap_return_6 : OUT STD_LOGIC_VECTOR (32 downto 0);
    ap_return_7 : OUT STD_LOGIC_VECTOR (32 downto 0);
    ap_return_8 : OUT STD_LOGIC_VECTOR (32 downto 0);
    ap_return_9 : OUT STD_LOGIC_VECTOR (32 downto 0) );
end;


architecture behav of myproject_layernorm_1d_ap_fixed_16_6_5_3_0_ap_fixed_33_13_5_3_0_config2_s is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_pp0_stage0 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_boolean_0 : BOOLEAN := false;
    constant ap_const_lv6_0 : STD_LOGIC_VECTOR (5 downto 0) := "000000";
    constant ap_const_lv36_1999 : STD_LOGIC_VECTOR (35 downto 0) := "000000000000000000000001100110011001";
    constant ap_const_lv32_10 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010000";
    constant ap_const_lv32_23 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100011";
    constant ap_const_lv32_25 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100101";
    constant ap_const_lv32_12 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010010";
    constant ap_const_lv32_11 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010001";
    constant ap_const_lv14_0 : STD_LOGIC_VECTOR (13 downto 0) := "00000000000000";
    constant ap_const_lv16_0 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000000";
    constant ap_const_lv19_1 : STD_LOGIC_VECTOR (18 downto 0) := "0000000000000000001";
    constant ap_const_lv32_14 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010100";
    constant ap_const_lv19_0 : STD_LOGIC_VECTOR (18 downto 0) := "0000000000000000000";
    constant ap_const_lv32_E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001110";
    constant ap_const_lv5_0 : STD_LOGIC_VECTOR (4 downto 0) := "00000";
    constant ap_const_lv14_3FFF : STD_LOGIC_VECTOR (13 downto 0) := "11111111111111";

attribute shreg_extract : string;
    signal ap_CS_fsm : STD_LOGIC_VECTOR (0 downto 0) := "1";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_pp0_stage0 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage0 : signal is "none";
    signal ap_enable_reg_pp0_iter0 : STD_LOGIC;
    signal ap_enable_reg_pp0_iter1 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter2 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter3 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter4 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter5 : STD_LOGIC := '0';
    signal ap_idle_pp0 : STD_LOGIC;
    signal ap_block_pp0_stage0_subdone : BOOLEAN;
    signal invert_sqr_table_address0 : STD_LOGIC_VECTOR (13 downto 0);
    signal invert_sqr_table_ce0 : STD_LOGIC;
    signal invert_sqr_table_q0 : STD_LOGIC_VECTOR (8 downto 0);
    signal sum_cache_fu_197_p3 : STD_LOGIC_VECTOR (21 downto 0);
    signal sum_cache_reg_928 : STD_LOGIC_VECTOR (21 downto 0);
    signal ap_block_pp0_stage0_11001 : BOOLEAN;
    signal shl_ln_fu_205_p3 : STD_LOGIC_VECTOR (21 downto 0);
    signal shl_ln_reg_933 : STD_LOGIC_VECTOR (21 downto 0);
    signal shl_ln128_1_fu_213_p3 : STD_LOGIC_VECTOR (21 downto 0);
    signal shl_ln128_1_reg_938 : STD_LOGIC_VECTOR (21 downto 0);
    signal shl_ln128_2_fu_221_p3 : STD_LOGIC_VECTOR (21 downto 0);
    signal shl_ln128_2_reg_943 : STD_LOGIC_VECTOR (21 downto 0);
    signal shl_ln128_3_fu_229_p3 : STD_LOGIC_VECTOR (21 downto 0);
    signal shl_ln128_3_reg_948 : STD_LOGIC_VECTOR (21 downto 0);
    signal shl_ln128_4_fu_237_p3 : STD_LOGIC_VECTOR (21 downto 0);
    signal shl_ln128_4_reg_953 : STD_LOGIC_VECTOR (21 downto 0);
    signal shl_ln128_5_fu_245_p3 : STD_LOGIC_VECTOR (21 downto 0);
    signal shl_ln128_5_reg_958 : STD_LOGIC_VECTOR (21 downto 0);
    signal shl_ln128_6_fu_253_p3 : STD_LOGIC_VECTOR (21 downto 0);
    signal shl_ln128_6_reg_963 : STD_LOGIC_VECTOR (21 downto 0);
    signal shl_ln128_7_fu_261_p3 : STD_LOGIC_VECTOR (21 downto 0);
    signal shl_ln128_7_reg_968 : STD_LOGIC_VECTOR (21 downto 0);
    signal shl_ln128_8_fu_269_p3 : STD_LOGIC_VECTOR (21 downto 0);
    signal shl_ln128_8_reg_973 : STD_LOGIC_VECTOR (21 downto 0);
    signal add_ln128_fu_325_p2 : STD_LOGIC_VECTOR (21 downto 0);
    signal add_ln128_reg_978 : STD_LOGIC_VECTOR (21 downto 0);
    signal sub_ln134_fu_354_p2 : STD_LOGIC_VECTOR (21 downto 0);
    signal sub_ln134_reg_983 : STD_LOGIC_VECTOR (21 downto 0);
    signal sub_ln134_reg_983_pp0_iter2_reg : STD_LOGIC_VECTOR (21 downto 0);
    signal sub_ln134_reg_983_pp0_iter3_reg : STD_LOGIC_VECTOR (21 downto 0);
    signal sub_ln134_reg_983_pp0_iter4_reg : STD_LOGIC_VECTOR (21 downto 0);
    signal sub_ln134_1_fu_359_p2 : STD_LOGIC_VECTOR (21 downto 0);
    signal sub_ln134_1_reg_989 : STD_LOGIC_VECTOR (21 downto 0);
    signal sub_ln134_1_reg_989_pp0_iter2_reg : STD_LOGIC_VECTOR (21 downto 0);
    signal sub_ln134_1_reg_989_pp0_iter3_reg : STD_LOGIC_VECTOR (21 downto 0);
    signal sub_ln134_1_reg_989_pp0_iter4_reg : STD_LOGIC_VECTOR (21 downto 0);
    signal sub_ln134_2_fu_364_p2 : STD_LOGIC_VECTOR (21 downto 0);
    signal sub_ln134_2_reg_995 : STD_LOGIC_VECTOR (21 downto 0);
    signal sub_ln134_2_reg_995_pp0_iter2_reg : STD_LOGIC_VECTOR (21 downto 0);
    signal sub_ln134_2_reg_995_pp0_iter3_reg : STD_LOGIC_VECTOR (21 downto 0);
    signal sub_ln134_2_reg_995_pp0_iter4_reg : STD_LOGIC_VECTOR (21 downto 0);
    signal sub_ln134_3_fu_369_p2 : STD_LOGIC_VECTOR (21 downto 0);
    signal sub_ln134_3_reg_1001 : STD_LOGIC_VECTOR (21 downto 0);
    signal sub_ln134_3_reg_1001_pp0_iter2_reg : STD_LOGIC_VECTOR (21 downto 0);
    signal sub_ln134_3_reg_1001_pp0_iter3_reg : STD_LOGIC_VECTOR (21 downto 0);
    signal sub_ln134_3_reg_1001_pp0_iter4_reg : STD_LOGIC_VECTOR (21 downto 0);
    signal sub_ln134_4_fu_374_p2 : STD_LOGIC_VECTOR (21 downto 0);
    signal sub_ln134_4_reg_1007 : STD_LOGIC_VECTOR (21 downto 0);
    signal sub_ln134_4_reg_1007_pp0_iter2_reg : STD_LOGIC_VECTOR (21 downto 0);
    signal sub_ln134_4_reg_1007_pp0_iter3_reg : STD_LOGIC_VECTOR (21 downto 0);
    signal sub_ln134_4_reg_1007_pp0_iter4_reg : STD_LOGIC_VECTOR (21 downto 0);
    signal sub_ln134_5_fu_379_p2 : STD_LOGIC_VECTOR (21 downto 0);
    signal sub_ln134_5_reg_1013 : STD_LOGIC_VECTOR (21 downto 0);
    signal sub_ln134_5_reg_1013_pp0_iter2_reg : STD_LOGIC_VECTOR (21 downto 0);
    signal sub_ln134_5_reg_1013_pp0_iter3_reg : STD_LOGIC_VECTOR (21 downto 0);
    signal sub_ln134_5_reg_1013_pp0_iter4_reg : STD_LOGIC_VECTOR (21 downto 0);
    signal sub_ln134_6_fu_384_p2 : STD_LOGIC_VECTOR (21 downto 0);
    signal sub_ln134_6_reg_1019 : STD_LOGIC_VECTOR (21 downto 0);
    signal sub_ln134_6_reg_1019_pp0_iter2_reg : STD_LOGIC_VECTOR (21 downto 0);
    signal sub_ln134_6_reg_1019_pp0_iter3_reg : STD_LOGIC_VECTOR (21 downto 0);
    signal sub_ln134_6_reg_1019_pp0_iter4_reg : STD_LOGIC_VECTOR (21 downto 0);
    signal sub_ln134_7_fu_389_p2 : STD_LOGIC_VECTOR (21 downto 0);
    signal sub_ln134_7_reg_1025 : STD_LOGIC_VECTOR (21 downto 0);
    signal sub_ln134_7_reg_1025_pp0_iter2_reg : STD_LOGIC_VECTOR (21 downto 0);
    signal sub_ln134_7_reg_1025_pp0_iter3_reg : STD_LOGIC_VECTOR (21 downto 0);
    signal sub_ln134_7_reg_1025_pp0_iter4_reg : STD_LOGIC_VECTOR (21 downto 0);
    signal sub_ln134_8_fu_394_p2 : STD_LOGIC_VECTOR (21 downto 0);
    signal sub_ln134_8_reg_1031 : STD_LOGIC_VECTOR (21 downto 0);
    signal sub_ln134_8_reg_1031_pp0_iter2_reg : STD_LOGIC_VECTOR (21 downto 0);
    signal sub_ln134_8_reg_1031_pp0_iter3_reg : STD_LOGIC_VECTOR (21 downto 0);
    signal sub_ln134_8_reg_1031_pp0_iter4_reg : STD_LOGIC_VECTOR (21 downto 0);
    signal sub_ln134_9_fu_399_p2 : STD_LOGIC_VECTOR (21 downto 0);
    signal sub_ln134_9_reg_1037 : STD_LOGIC_VECTOR (21 downto 0);
    signal sub_ln134_9_reg_1037_pp0_iter2_reg : STD_LOGIC_VECTOR (21 downto 0);
    signal sub_ln134_9_reg_1037_pp0_iter3_reg : STD_LOGIC_VECTOR (21 downto 0);
    signal sub_ln134_9_reg_1037_pp0_iter4_reg : STD_LOGIC_VECTOR (21 downto 0);
    signal add_ln136_1_fu_554_p2 : STD_LOGIC_VECTOR (21 downto 0);
    signal add_ln136_1_reg_1043 : STD_LOGIC_VECTOR (21 downto 0);
    signal add_ln136_3_fu_566_p2 : STD_LOGIC_VECTOR (21 downto 0);
    signal add_ln136_3_reg_1048 : STD_LOGIC_VECTOR (21 downto 0);
    signal add_ln136_8_fu_590_p2 : STD_LOGIC_VECTOR (21 downto 0);
    signal add_ln136_8_reg_1053 : STD_LOGIC_VECTOR (21 downto 0);
    signal index_fu_675_p3 : STD_LOGIC_VECTOR (18 downto 0);
    signal index_reg_1058 : STD_LOGIC_VECTOR (18 downto 0);
    signal zext_ln144_fu_729_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_block_pp0_stage0 : BOOLEAN;
    signal mul_ln135_fu_157_p0 : STD_LOGIC_VECTOR (21 downto 0);
    signal sext_ln135_fu_404_p1 : STD_LOGIC_VECTOR (37 downto 0);
    signal mul_ln135_fu_157_p1 : STD_LOGIC_VECTOR (21 downto 0);
    signal mul_ln135_1_fu_161_p0 : STD_LOGIC_VECTOR (21 downto 0);
    signal sext_ln135_1_fu_419_p1 : STD_LOGIC_VECTOR (37 downto 0);
    signal mul_ln135_1_fu_161_p1 : STD_LOGIC_VECTOR (21 downto 0);
    signal mul_ln135_2_fu_165_p0 : STD_LOGIC_VECTOR (21 downto 0);
    signal sext_ln135_2_fu_434_p1 : STD_LOGIC_VECTOR (37 downto 0);
    signal mul_ln135_2_fu_165_p1 : STD_LOGIC_VECTOR (21 downto 0);
    signal mul_ln135_3_fu_169_p0 : STD_LOGIC_VECTOR (21 downto 0);
    signal sext_ln135_3_fu_449_p1 : STD_LOGIC_VECTOR (37 downto 0);
    signal mul_ln135_3_fu_169_p1 : STD_LOGIC_VECTOR (21 downto 0);
    signal mul_ln135_4_fu_173_p0 : STD_LOGIC_VECTOR (21 downto 0);
    signal sext_ln135_4_fu_464_p1 : STD_LOGIC_VECTOR (37 downto 0);
    signal mul_ln135_4_fu_173_p1 : STD_LOGIC_VECTOR (21 downto 0);
    signal mul_ln135_5_fu_177_p0 : STD_LOGIC_VECTOR (21 downto 0);
    signal sext_ln135_5_fu_479_p1 : STD_LOGIC_VECTOR (37 downto 0);
    signal mul_ln135_5_fu_177_p1 : STD_LOGIC_VECTOR (21 downto 0);
    signal mul_ln135_6_fu_181_p0 : STD_LOGIC_VECTOR (21 downto 0);
    signal sext_ln135_6_fu_494_p1 : STD_LOGIC_VECTOR (37 downto 0);
    signal mul_ln135_6_fu_181_p1 : STD_LOGIC_VECTOR (21 downto 0);
    signal mul_ln135_7_fu_185_p0 : STD_LOGIC_VECTOR (21 downto 0);
    signal sext_ln135_7_fu_509_p1 : STD_LOGIC_VECTOR (37 downto 0);
    signal mul_ln135_7_fu_185_p1 : STD_LOGIC_VECTOR (21 downto 0);
    signal mul_ln135_8_fu_189_p0 : STD_LOGIC_VECTOR (21 downto 0);
    signal sext_ln135_8_fu_524_p1 : STD_LOGIC_VECTOR (37 downto 0);
    signal mul_ln135_8_fu_189_p1 : STD_LOGIC_VECTOR (21 downto 0);
    signal mul_ln135_9_fu_193_p0 : STD_LOGIC_VECTOR (21 downto 0);
    signal sext_ln135_9_fu_539_p1 : STD_LOGIC_VECTOR (37 downto 0);
    signal mul_ln135_9_fu_193_p1 : STD_LOGIC_VECTOR (21 downto 0);
    signal add_ln128_2_fu_283_p2 : STD_LOGIC_VECTOR (21 downto 0);
    signal add_ln128_3_fu_289_p2 : STD_LOGIC_VECTOR (21 downto 0);
    signal add_ln128_1_fu_277_p2 : STD_LOGIC_VECTOR (21 downto 0);
    signal add_ln128_6_fu_307_p2 : STD_LOGIC_VECTOR (21 downto 0);
    signal add_ln128_7_fu_313_p2 : STD_LOGIC_VECTOR (21 downto 0);
    signal add_ln128_5_fu_301_p2 : STD_LOGIC_VECTOR (21 downto 0);
    signal add_ln128_8_fu_319_p2 : STD_LOGIC_VECTOR (21 downto 0);
    signal add_ln128_4_fu_295_p2 : STD_LOGIC_VECTOR (21 downto 0);
    signal mul_ln73_fu_334_p1 : STD_LOGIC_VECTOR (13 downto 0);
    signal mul_ln73_fu_334_p2 : STD_LOGIC_VECTOR (35 downto 0);
    signal mean_fu_340_p4 : STD_LOGIC_VECTOR (19 downto 0);
    signal sext_ln130_fu_350_p1 : STD_LOGIC_VECTOR (21 downto 0);
    signal mul_ln135_fu_157_p2 : STD_LOGIC_VECTOR (37 downto 0);
    signal mul_ln135_1_fu_161_p2 : STD_LOGIC_VECTOR (37 downto 0);
    signal mul_ln135_2_fu_165_p2 : STD_LOGIC_VECTOR (37 downto 0);
    signal mul_ln135_3_fu_169_p2 : STD_LOGIC_VECTOR (37 downto 0);
    signal mul_ln135_4_fu_173_p2 : STD_LOGIC_VECTOR (37 downto 0);
    signal mul_ln135_5_fu_177_p2 : STD_LOGIC_VECTOR (37 downto 0);
    signal mul_ln135_6_fu_181_p2 : STD_LOGIC_VECTOR (37 downto 0);
    signal mul_ln135_7_fu_185_p2 : STD_LOGIC_VECTOR (37 downto 0);
    signal mul_ln135_8_fu_189_p2 : STD_LOGIC_VECTOR (37 downto 0);
    signal mul_ln135_9_fu_193_p2 : STD_LOGIC_VECTOR (37 downto 0);
    signal diff_10_fu_409_p4 : STD_LOGIC_VECTOR (21 downto 0);
    signal diff_fu_424_p4 : STD_LOGIC_VECTOR (21 downto 0);
    signal diff_3_fu_454_p4 : STD_LOGIC_VECTOR (21 downto 0);
    signal diff_4_fu_469_p4 : STD_LOGIC_VECTOR (21 downto 0);
    signal add_ln136_2_fu_560_p2 : STD_LOGIC_VECTOR (21 downto 0);
    signal diff_2_fu_439_p4 : STD_LOGIC_VECTOR (21 downto 0);
    signal diff_5_fu_484_p4 : STD_LOGIC_VECTOR (21 downto 0);
    signal diff_6_fu_499_p4 : STD_LOGIC_VECTOR (21 downto 0);
    signal diff_8_fu_529_p4 : STD_LOGIC_VECTOR (21 downto 0);
    signal diff_9_fu_544_p4 : STD_LOGIC_VECTOR (21 downto 0);
    signal add_ln136_6_fu_578_p2 : STD_LOGIC_VECTOR (21 downto 0);
    signal diff_7_fu_514_p4 : STD_LOGIC_VECTOR (21 downto 0);
    signal add_ln136_7_fu_584_p2 : STD_LOGIC_VECTOR (21 downto 0);
    signal add_ln136_5_fu_572_p2 : STD_LOGIC_VECTOR (21 downto 0);
    signal add_ln136_4_fu_596_p2 : STD_LOGIC_VECTOR (21 downto 0);
    signal add_ln136_fu_600_p2 : STD_LOGIC_VECTOR (21 downto 0);
    signal mul_ln73_1_fu_609_p1 : STD_LOGIC_VECTOR (13 downto 0);
    signal mul_ln73_1_fu_609_p2 : STD_LOGIC_VECTOR (35 downto 0);
    signal tmp_2_fu_615_p4 : STD_LOGIC_VECTOR (17 downto 0);
    signal tmp_fu_637_p4 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_1_fu_647_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal sext_ln140_fu_625_p1 : STD_LOGIC_VECTOR (18 downto 0);
    signal icmp_ln140_fu_655_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal add_ln140_fu_661_p2 : STD_LOGIC_VECTOR (18 downto 0);
    signal tmp_3_fu_629_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln140_fu_667_p3 : STD_LOGIC_VECTOR (18 downto 0);
    signal sext_ln140_1_fu_683_p1 : STD_LOGIC_VECTOR (20 downto 0);
    signal tmp_4_fu_686_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal index_1_fu_694_p3 : STD_LOGIC_VECTOR (18 downto 0);
    signal tmp_5_fu_705_p4 : STD_LOGIC_VECTOR (4 downto 0);
    signal icmp_ln143_fu_715_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal trunc_ln140_fu_701_p1 : STD_LOGIC_VECTOR (13 downto 0);
    signal index_2_fu_721_p3 : STD_LOGIC_VECTOR (13 downto 0);
    signal mul_ln149_fu_741_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal zext_ln149_fu_734_p1 : STD_LOGIC_VECTOR (30 downto 0);
    signal mul_ln149_fu_741_p2 : STD_LOGIC_VECTOR (30 downto 0);
    signal mul_ln149_1_fu_754_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal mul_ln149_1_fu_754_p2 : STD_LOGIC_VECTOR (30 downto 0);
    signal mul_ln149_2_fu_767_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal mul_ln149_2_fu_767_p2 : STD_LOGIC_VECTOR (30 downto 0);
    signal mul_ln149_3_fu_780_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal mul_ln149_3_fu_780_p2 : STD_LOGIC_VECTOR (30 downto 0);
    signal mul_ln149_4_fu_793_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal mul_ln149_4_fu_793_p2 : STD_LOGIC_VECTOR (30 downto 0);
    signal mul_ln149_5_fu_806_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal mul_ln149_5_fu_806_p2 : STD_LOGIC_VECTOR (30 downto 0);
    signal mul_ln149_6_fu_819_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal mul_ln149_6_fu_819_p2 : STD_LOGIC_VECTOR (30 downto 0);
    signal mul_ln149_7_fu_832_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal mul_ln149_7_fu_832_p2 : STD_LOGIC_VECTOR (30 downto 0);
    signal mul_ln149_8_fu_845_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal mul_ln149_8_fu_845_p2 : STD_LOGIC_VECTOR (30 downto 0);
    signal mul_ln149_9_fu_858_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal mul_ln149_9_fu_858_p2 : STD_LOGIC_VECTOR (30 downto 0);
    signal sext_ln149_1_fu_747_p1 : STD_LOGIC_VECTOR (32 downto 0);
    signal sext_ln149_3_fu_760_p1 : STD_LOGIC_VECTOR (32 downto 0);
    signal sext_ln149_5_fu_773_p1 : STD_LOGIC_VECTOR (32 downto 0);
    signal sext_ln149_7_fu_786_p1 : STD_LOGIC_VECTOR (32 downto 0);
    signal sext_ln149_9_fu_799_p1 : STD_LOGIC_VECTOR (32 downto 0);
    signal sext_ln149_11_fu_812_p1 : STD_LOGIC_VECTOR (32 downto 0);
    signal sext_ln149_13_fu_825_p1 : STD_LOGIC_VECTOR (32 downto 0);
    signal sext_ln149_15_fu_838_p1 : STD_LOGIC_VECTOR (32 downto 0);
    signal sext_ln149_17_fu_851_p1 : STD_LOGIC_VECTOR (32 downto 0);
    signal sext_ln151_fu_864_p1 : STD_LOGIC_VECTOR (32 downto 0);
    signal ap_NS_fsm : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_idle_pp0_0to4 : STD_LOGIC;
    signal ap_reset_idle_pp0 : STD_LOGIC;
    signal ap_enable_pp0 : STD_LOGIC;
    signal ap_ce_reg : STD_LOGIC;

    component myproject_mul_22s_22s_38_1_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (21 downto 0);
        din1 : IN STD_LOGIC_VECTOR (21 downto 0);
        dout : OUT STD_LOGIC_VECTOR (37 downto 0) );
    end component;


    component myproject_mul_22s_14ns_36_1_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (21 downto 0);
        din1 : IN STD_LOGIC_VECTOR (13 downto 0);
        dout : OUT STD_LOGIC_VECTOR (35 downto 0) );
    end component;


    component myproject_mul_22s_9ns_31_1_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (21 downto 0);
        din1 : IN STD_LOGIC_VECTOR (8 downto 0);
        dout : OUT STD_LOGIC_VECTOR (30 downto 0) );
    end component;


    component myproject_layernorm_1d_ap_fixed_16_6_5_3_0_ap_fixed_33_13_5_3_0_config2_s_invert_sqr_tabkb IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (13 downto 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR (8 downto 0) );
    end component;



begin
    invert_sqr_table_U : component myproject_layernorm_1d_ap_fixed_16_6_5_3_0_ap_fixed_33_13_5_3_0_config2_s_invert_sqr_tabkb
    generic map (
        DataWidth => 9,
        AddressRange => 16384,
        AddressWidth => 14)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => invert_sqr_table_address0,
        ce0 => invert_sqr_table_ce0,
        q0 => invert_sqr_table_q0);

    mul_22s_22s_38_1_1_U1 : component myproject_mul_22s_22s_38_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 22,
        din1_WIDTH => 22,
        dout_WIDTH => 38)
    port map (
        din0 => mul_ln135_fu_157_p0,
        din1 => mul_ln135_fu_157_p1,
        dout => mul_ln135_fu_157_p2);

    mul_22s_22s_38_1_1_U2 : component myproject_mul_22s_22s_38_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 22,
        din1_WIDTH => 22,
        dout_WIDTH => 38)
    port map (
        din0 => mul_ln135_1_fu_161_p0,
        din1 => mul_ln135_1_fu_161_p1,
        dout => mul_ln135_1_fu_161_p2);

    mul_22s_22s_38_1_1_U3 : component myproject_mul_22s_22s_38_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 22,
        din1_WIDTH => 22,
        dout_WIDTH => 38)
    port map (
        din0 => mul_ln135_2_fu_165_p0,
        din1 => mul_ln135_2_fu_165_p1,
        dout => mul_ln135_2_fu_165_p2);

    mul_22s_22s_38_1_1_U4 : component myproject_mul_22s_22s_38_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 22,
        din1_WIDTH => 22,
        dout_WIDTH => 38)
    port map (
        din0 => mul_ln135_3_fu_169_p0,
        din1 => mul_ln135_3_fu_169_p1,
        dout => mul_ln135_3_fu_169_p2);

    mul_22s_22s_38_1_1_U5 : component myproject_mul_22s_22s_38_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 22,
        din1_WIDTH => 22,
        dout_WIDTH => 38)
    port map (
        din0 => mul_ln135_4_fu_173_p0,
        din1 => mul_ln135_4_fu_173_p1,
        dout => mul_ln135_4_fu_173_p2);

    mul_22s_22s_38_1_1_U6 : component myproject_mul_22s_22s_38_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 22,
        din1_WIDTH => 22,
        dout_WIDTH => 38)
    port map (
        din0 => mul_ln135_5_fu_177_p0,
        din1 => mul_ln135_5_fu_177_p1,
        dout => mul_ln135_5_fu_177_p2);

    mul_22s_22s_38_1_1_U7 : component myproject_mul_22s_22s_38_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 22,
        din1_WIDTH => 22,
        dout_WIDTH => 38)
    port map (
        din0 => mul_ln135_6_fu_181_p0,
        din1 => mul_ln135_6_fu_181_p1,
        dout => mul_ln135_6_fu_181_p2);

    mul_22s_22s_38_1_1_U8 : component myproject_mul_22s_22s_38_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 22,
        din1_WIDTH => 22,
        dout_WIDTH => 38)
    port map (
        din0 => mul_ln135_7_fu_185_p0,
        din1 => mul_ln135_7_fu_185_p1,
        dout => mul_ln135_7_fu_185_p2);

    mul_22s_22s_38_1_1_U9 : component myproject_mul_22s_22s_38_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 22,
        din1_WIDTH => 22,
        dout_WIDTH => 38)
    port map (
        din0 => mul_ln135_8_fu_189_p0,
        din1 => mul_ln135_8_fu_189_p1,
        dout => mul_ln135_8_fu_189_p2);

    mul_22s_22s_38_1_1_U10 : component myproject_mul_22s_22s_38_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 22,
        din1_WIDTH => 22,
        dout_WIDTH => 38)
    port map (
        din0 => mul_ln135_9_fu_193_p0,
        din1 => mul_ln135_9_fu_193_p1,
        dout => mul_ln135_9_fu_193_p2);

    mul_22s_14ns_36_1_1_U11 : component myproject_mul_22s_14ns_36_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 22,
        din1_WIDTH => 14,
        dout_WIDTH => 36)
    port map (
        din0 => add_ln128_reg_978,
        din1 => mul_ln73_fu_334_p1,
        dout => mul_ln73_fu_334_p2);

    mul_22s_14ns_36_1_1_U12 : component myproject_mul_22s_14ns_36_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 22,
        din1_WIDTH => 14,
        dout_WIDTH => 36)
    port map (
        din0 => add_ln136_fu_600_p2,
        din1 => mul_ln73_1_fu_609_p1,
        dout => mul_ln73_1_fu_609_p2);

    mul_22s_9ns_31_1_1_U13 : component myproject_mul_22s_9ns_31_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 22,
        din1_WIDTH => 9,
        dout_WIDTH => 31)
    port map (
        din0 => sub_ln134_reg_983_pp0_iter4_reg,
        din1 => mul_ln149_fu_741_p1,
        dout => mul_ln149_fu_741_p2);

    mul_22s_9ns_31_1_1_U14 : component myproject_mul_22s_9ns_31_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 22,
        din1_WIDTH => 9,
        dout_WIDTH => 31)
    port map (
        din0 => sub_ln134_1_reg_989_pp0_iter4_reg,
        din1 => mul_ln149_1_fu_754_p1,
        dout => mul_ln149_1_fu_754_p2);

    mul_22s_9ns_31_1_1_U15 : component myproject_mul_22s_9ns_31_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 22,
        din1_WIDTH => 9,
        dout_WIDTH => 31)
    port map (
        din0 => sub_ln134_2_reg_995_pp0_iter4_reg,
        din1 => mul_ln149_2_fu_767_p1,
        dout => mul_ln149_2_fu_767_p2);

    mul_22s_9ns_31_1_1_U16 : component myproject_mul_22s_9ns_31_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 22,
        din1_WIDTH => 9,
        dout_WIDTH => 31)
    port map (
        din0 => sub_ln134_3_reg_1001_pp0_iter4_reg,
        din1 => mul_ln149_3_fu_780_p1,
        dout => mul_ln149_3_fu_780_p2);

    mul_22s_9ns_31_1_1_U17 : component myproject_mul_22s_9ns_31_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 22,
        din1_WIDTH => 9,
        dout_WIDTH => 31)
    port map (
        din0 => sub_ln134_4_reg_1007_pp0_iter4_reg,
        din1 => mul_ln149_4_fu_793_p1,
        dout => mul_ln149_4_fu_793_p2);

    mul_22s_9ns_31_1_1_U18 : component myproject_mul_22s_9ns_31_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 22,
        din1_WIDTH => 9,
        dout_WIDTH => 31)
    port map (
        din0 => sub_ln134_5_reg_1013_pp0_iter4_reg,
        din1 => mul_ln149_5_fu_806_p1,
        dout => mul_ln149_5_fu_806_p2);

    mul_22s_9ns_31_1_1_U19 : component myproject_mul_22s_9ns_31_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 22,
        din1_WIDTH => 9,
        dout_WIDTH => 31)
    port map (
        din0 => sub_ln134_6_reg_1019_pp0_iter4_reg,
        din1 => mul_ln149_6_fu_819_p1,
        dout => mul_ln149_6_fu_819_p2);

    mul_22s_9ns_31_1_1_U20 : component myproject_mul_22s_9ns_31_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 22,
        din1_WIDTH => 9,
        dout_WIDTH => 31)
    port map (
        din0 => sub_ln134_7_reg_1025_pp0_iter4_reg,
        din1 => mul_ln149_7_fu_832_p1,
        dout => mul_ln149_7_fu_832_p2);

    mul_22s_9ns_31_1_1_U21 : component myproject_mul_22s_9ns_31_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 22,
        din1_WIDTH => 9,
        dout_WIDTH => 31)
    port map (
        din0 => sub_ln134_8_reg_1031_pp0_iter4_reg,
        din1 => mul_ln149_8_fu_845_p1,
        dout => mul_ln149_8_fu_845_p2);

    mul_22s_9ns_31_1_1_U22 : component myproject_mul_22s_9ns_31_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 22,
        din1_WIDTH => 9,
        dout_WIDTH => 31)
    port map (
        din0 => sub_ln134_9_reg_1037_pp0_iter4_reg,
        din1 => mul_ln149_9_fu_858_p1,
        dout => mul_ln149_9_fu_858_p2);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                    ap_enable_reg_pp0_iter1 <= ap_start;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter2_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter2 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter3_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter3 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter4_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter4 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter4 <= ap_enable_reg_pp0_iter3;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter5_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter5 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter5 <= ap_enable_reg_pp0_iter4;
                end if; 
            end if;
        end if;
    end process;

    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_ce) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                    add_ln128_reg_978(21 downto 6) <= add_ln128_fu_325_p2(21 downto 6);
                    shl_ln128_1_reg_938(21 downto 6) <= shl_ln128_1_fu_213_p3(21 downto 6);
                    shl_ln128_2_reg_943(21 downto 6) <= shl_ln128_2_fu_221_p3(21 downto 6);
                    shl_ln128_3_reg_948(21 downto 6) <= shl_ln128_3_fu_229_p3(21 downto 6);
                    shl_ln128_4_reg_953(21 downto 6) <= shl_ln128_4_fu_237_p3(21 downto 6);
                    shl_ln128_5_reg_958(21 downto 6) <= shl_ln128_5_fu_245_p3(21 downto 6);
                    shl_ln128_6_reg_963(21 downto 6) <= shl_ln128_6_fu_253_p3(21 downto 6);
                    shl_ln128_7_reg_968(21 downto 6) <= shl_ln128_7_fu_261_p3(21 downto 6);
                    shl_ln128_8_reg_973(21 downto 6) <= shl_ln128_8_fu_269_p3(21 downto 6);
                    shl_ln_reg_933(21 downto 6) <= shl_ln_fu_205_p3(21 downto 6);
                sub_ln134_1_reg_989 <= sub_ln134_1_fu_359_p2;
                sub_ln134_2_reg_995 <= sub_ln134_2_fu_364_p2;
                sub_ln134_3_reg_1001 <= sub_ln134_3_fu_369_p2;
                sub_ln134_4_reg_1007 <= sub_ln134_4_fu_374_p2;
                sub_ln134_5_reg_1013 <= sub_ln134_5_fu_379_p2;
                sub_ln134_6_reg_1019 <= sub_ln134_6_fu_384_p2;
                sub_ln134_7_reg_1025 <= sub_ln134_7_fu_389_p2;
                sub_ln134_8_reg_1031 <= sub_ln134_8_fu_394_p2;
                sub_ln134_9_reg_1037 <= sub_ln134_9_fu_399_p2;
                sub_ln134_reg_983 <= sub_ln134_fu_354_p2;
                    sum_cache_reg_928(21 downto 6) <= sum_cache_fu_197_p3(21 downto 6);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_ce))) then
                add_ln136_1_reg_1043 <= add_ln136_1_fu_554_p2;
                add_ln136_3_reg_1048 <= add_ln136_3_fu_566_p2;
                add_ln136_8_reg_1053 <= add_ln136_8_fu_590_p2;
                index_reg_1058 <= index_fu_675_p3;
                sub_ln134_1_reg_989_pp0_iter2_reg <= sub_ln134_1_reg_989;
                sub_ln134_1_reg_989_pp0_iter3_reg <= sub_ln134_1_reg_989_pp0_iter2_reg;
                sub_ln134_1_reg_989_pp0_iter4_reg <= sub_ln134_1_reg_989_pp0_iter3_reg;
                sub_ln134_2_reg_995_pp0_iter2_reg <= sub_ln134_2_reg_995;
                sub_ln134_2_reg_995_pp0_iter3_reg <= sub_ln134_2_reg_995_pp0_iter2_reg;
                sub_ln134_2_reg_995_pp0_iter4_reg <= sub_ln134_2_reg_995_pp0_iter3_reg;
                sub_ln134_3_reg_1001_pp0_iter2_reg <= sub_ln134_3_reg_1001;
                sub_ln134_3_reg_1001_pp0_iter3_reg <= sub_ln134_3_reg_1001_pp0_iter2_reg;
                sub_ln134_3_reg_1001_pp0_iter4_reg <= sub_ln134_3_reg_1001_pp0_iter3_reg;
                sub_ln134_4_reg_1007_pp0_iter2_reg <= sub_ln134_4_reg_1007;
                sub_ln134_4_reg_1007_pp0_iter3_reg <= sub_ln134_4_reg_1007_pp0_iter2_reg;
                sub_ln134_4_reg_1007_pp0_iter4_reg <= sub_ln134_4_reg_1007_pp0_iter3_reg;
                sub_ln134_5_reg_1013_pp0_iter2_reg <= sub_ln134_5_reg_1013;
                sub_ln134_5_reg_1013_pp0_iter3_reg <= sub_ln134_5_reg_1013_pp0_iter2_reg;
                sub_ln134_5_reg_1013_pp0_iter4_reg <= sub_ln134_5_reg_1013_pp0_iter3_reg;
                sub_ln134_6_reg_1019_pp0_iter2_reg <= sub_ln134_6_reg_1019;
                sub_ln134_6_reg_1019_pp0_iter3_reg <= sub_ln134_6_reg_1019_pp0_iter2_reg;
                sub_ln134_6_reg_1019_pp0_iter4_reg <= sub_ln134_6_reg_1019_pp0_iter3_reg;
                sub_ln134_7_reg_1025_pp0_iter2_reg <= sub_ln134_7_reg_1025;
                sub_ln134_7_reg_1025_pp0_iter3_reg <= sub_ln134_7_reg_1025_pp0_iter2_reg;
                sub_ln134_7_reg_1025_pp0_iter4_reg <= sub_ln134_7_reg_1025_pp0_iter3_reg;
                sub_ln134_8_reg_1031_pp0_iter2_reg <= sub_ln134_8_reg_1031;
                sub_ln134_8_reg_1031_pp0_iter3_reg <= sub_ln134_8_reg_1031_pp0_iter2_reg;
                sub_ln134_8_reg_1031_pp0_iter4_reg <= sub_ln134_8_reg_1031_pp0_iter3_reg;
                sub_ln134_9_reg_1037_pp0_iter2_reg <= sub_ln134_9_reg_1037;
                sub_ln134_9_reg_1037_pp0_iter3_reg <= sub_ln134_9_reg_1037_pp0_iter2_reg;
                sub_ln134_9_reg_1037_pp0_iter4_reg <= sub_ln134_9_reg_1037_pp0_iter3_reg;
                sub_ln134_reg_983_pp0_iter2_reg <= sub_ln134_reg_983;
                sub_ln134_reg_983_pp0_iter3_reg <= sub_ln134_reg_983_pp0_iter2_reg;
                sub_ln134_reg_983_pp0_iter4_reg <= sub_ln134_reg_983_pp0_iter3_reg;
            end if;
        end if;
    end process;
    sum_cache_reg_928(5 downto 0) <= "000000";
    shl_ln_reg_933(5 downto 0) <= "000000";
    shl_ln128_1_reg_938(5 downto 0) <= "000000";
    shl_ln128_2_reg_943(5 downto 0) <= "000000";
    shl_ln128_3_reg_948(5 downto 0) <= "000000";
    shl_ln128_4_reg_953(5 downto 0) <= "000000";
    shl_ln128_5_reg_958(5 downto 0) <= "000000";
    shl_ln128_6_reg_963(5 downto 0) <= "000000";
    shl_ln128_7_reg_968(5 downto 0) <= "000000";
    shl_ln128_8_reg_973(5 downto 0) <= "000000";
    add_ln128_reg_978(5 downto 0) <= "000000";

    ap_NS_fsm_assign_proc : process (ap_CS_fsm, ap_block_pp0_stage0_subdone, ap_reset_idle_pp0)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_pp0_stage0 => 
                ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
            when others =>  
                ap_NS_fsm <= "X";
        end case;
    end process;
    add_ln128_1_fu_277_p2 <= std_logic_vector(unsigned(shl_ln_fu_205_p3) + unsigned(sum_cache_fu_197_p3));
    add_ln128_2_fu_283_p2 <= std_logic_vector(unsigned(shl_ln128_2_fu_221_p3) + unsigned(shl_ln128_3_fu_229_p3));
    add_ln128_3_fu_289_p2 <= std_logic_vector(unsigned(add_ln128_2_fu_283_p2) + unsigned(shl_ln128_1_fu_213_p3));
    add_ln128_4_fu_295_p2 <= std_logic_vector(unsigned(add_ln128_3_fu_289_p2) + unsigned(add_ln128_1_fu_277_p2));
    add_ln128_5_fu_301_p2 <= std_logic_vector(unsigned(shl_ln128_4_fu_237_p3) + unsigned(shl_ln128_5_fu_245_p3));
    add_ln128_6_fu_307_p2 <= std_logic_vector(unsigned(shl_ln128_7_fu_261_p3) + unsigned(shl_ln128_8_fu_269_p3));
    add_ln128_7_fu_313_p2 <= std_logic_vector(unsigned(add_ln128_6_fu_307_p2) + unsigned(shl_ln128_6_fu_253_p3));
    add_ln128_8_fu_319_p2 <= std_logic_vector(unsigned(add_ln128_7_fu_313_p2) + unsigned(add_ln128_5_fu_301_p2));
    add_ln128_fu_325_p2 <= std_logic_vector(unsigned(add_ln128_8_fu_319_p2) + unsigned(add_ln128_4_fu_295_p2));
    add_ln136_1_fu_554_p2 <= std_logic_vector(unsigned(diff_10_fu_409_p4) + unsigned(diff_fu_424_p4));
    add_ln136_2_fu_560_p2 <= std_logic_vector(unsigned(diff_3_fu_454_p4) + unsigned(diff_4_fu_469_p4));
    add_ln136_3_fu_566_p2 <= std_logic_vector(unsigned(add_ln136_2_fu_560_p2) + unsigned(diff_2_fu_439_p4));
    add_ln136_4_fu_596_p2 <= std_logic_vector(unsigned(add_ln136_3_reg_1048) + unsigned(add_ln136_1_reg_1043));
    add_ln136_5_fu_572_p2 <= std_logic_vector(unsigned(diff_5_fu_484_p4) + unsigned(diff_6_fu_499_p4));
    add_ln136_6_fu_578_p2 <= std_logic_vector(unsigned(diff_8_fu_529_p4) + unsigned(diff_9_fu_544_p4));
    add_ln136_7_fu_584_p2 <= std_logic_vector(unsigned(add_ln136_6_fu_578_p2) + unsigned(diff_7_fu_514_p4));
    add_ln136_8_fu_590_p2 <= std_logic_vector(unsigned(add_ln136_7_fu_584_p2) + unsigned(add_ln136_5_fu_572_p2));
    add_ln136_fu_600_p2 <= std_logic_vector(unsigned(add_ln136_8_reg_1053) + unsigned(add_ln136_4_fu_596_p2));
    add_ln140_fu_661_p2 <= std_logic_vector(signed(sext_ln140_fu_625_p1) + signed(ap_const_lv19_1));
    ap_CS_fsm_pp0_stage0 <= ap_CS_fsm(0);
        ap_block_pp0_stage0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage0_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage0_subdone_assign_proc : process(ap_ce)
    begin
                ap_block_pp0_stage0_subdone <= (ap_const_logic_0 = ap_ce);
    end process;


    ap_done_assign_proc : process(ap_enable_reg_pp0_iter5, ap_block_pp0_stage0_subdone)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_enable_reg_pp0_iter5 = ap_const_logic_1))) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_const_logic_0;
        end if; 
    end process;

    ap_enable_pp0 <= (ap_idle_pp0 xor ap_const_logic_1);
    ap_enable_reg_pp0_iter0 <= ap_start;

    ap_idle_assign_proc : process(ap_start, ap_CS_fsm_pp0_stage0, ap_idle_pp0)
    begin
        if (((ap_start = ap_const_logic_0) and (ap_idle_pp0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp0_assign_proc : process(ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter2, ap_enable_reg_pp0_iter3, ap_enable_reg_pp0_iter4, ap_enable_reg_pp0_iter5)
    begin
        if (((ap_enable_reg_pp0_iter5 = ap_const_logic_0) and (ap_enable_reg_pp0_iter4 = ap_const_logic_0) and (ap_enable_reg_pp0_iter3 = ap_const_logic_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_0))) then 
            ap_idle_pp0 <= ap_const_logic_1;
        else 
            ap_idle_pp0 <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp0_0to4_assign_proc : process(ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter2, ap_enable_reg_pp0_iter3, ap_enable_reg_pp0_iter4)
    begin
        if (((ap_enable_reg_pp0_iter4 = ap_const_logic_0) and (ap_enable_reg_pp0_iter3 = ap_const_logic_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_0))) then 
            ap_idle_pp0_0to4 <= ap_const_logic_1;
        else 
            ap_idle_pp0_0to4 <= ap_const_logic_0;
        end if; 
    end process;


    ap_ready_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_subdone)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;


    ap_reset_idle_pp0_assign_proc : process(ap_start, ap_idle_pp0_0to4)
    begin
        if (((ap_idle_pp0_0to4 = ap_const_logic_1) and (ap_start = ap_const_logic_0))) then 
            ap_reset_idle_pp0 <= ap_const_logic_1;
        else 
            ap_reset_idle_pp0 <= ap_const_logic_0;
        end if; 
    end process;

    ap_return_0 <= sext_ln149_1_fu_747_p1;
    ap_return_1 <= sext_ln149_3_fu_760_p1;
    ap_return_2 <= sext_ln149_5_fu_773_p1;
    ap_return_3 <= sext_ln149_7_fu_786_p1;
    ap_return_4 <= sext_ln149_9_fu_799_p1;
    ap_return_5 <= sext_ln149_11_fu_812_p1;
    ap_return_6 <= sext_ln149_13_fu_825_p1;
    ap_return_7 <= sext_ln149_15_fu_838_p1;
    ap_return_8 <= sext_ln149_17_fu_851_p1;
    ap_return_9 <= sext_ln151_fu_864_p1;
    diff_10_fu_409_p4 <= mul_ln135_fu_157_p2(37 downto 16);
    diff_2_fu_439_p4 <= mul_ln135_2_fu_165_p2(37 downto 16);
    diff_3_fu_454_p4 <= mul_ln135_3_fu_169_p2(37 downto 16);
    diff_4_fu_469_p4 <= mul_ln135_4_fu_173_p2(37 downto 16);
    diff_5_fu_484_p4 <= mul_ln135_5_fu_177_p2(37 downto 16);
    diff_6_fu_499_p4 <= mul_ln135_6_fu_181_p2(37 downto 16);
    diff_7_fu_514_p4 <= mul_ln135_7_fu_185_p2(37 downto 16);
    diff_8_fu_529_p4 <= mul_ln135_8_fu_189_p2(37 downto 16);
    diff_9_fu_544_p4 <= mul_ln135_9_fu_193_p2(37 downto 16);
    diff_fu_424_p4 <= mul_ln135_1_fu_161_p2(37 downto 16);
    icmp_ln140_fu_655_p2 <= "1" when (tmp_1_fu_647_p3 = ap_const_lv16_0) else "0";
    icmp_ln143_fu_715_p2 <= "0" when (tmp_5_fu_705_p4 = ap_const_lv5_0) else "1";
    index_1_fu_694_p3 <= 
        ap_const_lv19_0 when (tmp_4_fu_686_p3(0) = '1') else 
        index_reg_1058;
    index_2_fu_721_p3 <= 
        ap_const_lv14_3FFF when (icmp_ln143_fu_715_p2(0) = '1') else 
        trunc_ln140_fu_701_p1;
    index_fu_675_p3 <= 
        select_ln140_fu_667_p3 when (tmp_3_fu_629_p3(0) = '1') else 
        sext_ln140_fu_625_p1;
    invert_sqr_table_address0 <= zext_ln144_fu_729_p1(14 - 1 downto 0);

    invert_sqr_table_ce0_assign_proc : process(ap_enable_reg_pp0_iter4, ap_ce, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (ap_const_logic_1 = ap_ce))) then 
            invert_sqr_table_ce0 <= ap_const_logic_1;
        else 
            invert_sqr_table_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    mean_fu_340_p4 <= mul_ln73_fu_334_p2(35 downto 16);
    mul_ln135_1_fu_161_p0 <= sext_ln135_1_fu_419_p1(22 - 1 downto 0);
    mul_ln135_1_fu_161_p1 <= sext_ln135_1_fu_419_p1(22 - 1 downto 0);
    mul_ln135_2_fu_165_p0 <= sext_ln135_2_fu_434_p1(22 - 1 downto 0);
    mul_ln135_2_fu_165_p1 <= sext_ln135_2_fu_434_p1(22 - 1 downto 0);
    mul_ln135_3_fu_169_p0 <= sext_ln135_3_fu_449_p1(22 - 1 downto 0);
    mul_ln135_3_fu_169_p1 <= sext_ln135_3_fu_449_p1(22 - 1 downto 0);
    mul_ln135_4_fu_173_p0 <= sext_ln135_4_fu_464_p1(22 - 1 downto 0);
    mul_ln135_4_fu_173_p1 <= sext_ln135_4_fu_464_p1(22 - 1 downto 0);
    mul_ln135_5_fu_177_p0 <= sext_ln135_5_fu_479_p1(22 - 1 downto 0);
    mul_ln135_5_fu_177_p1 <= sext_ln135_5_fu_479_p1(22 - 1 downto 0);
    mul_ln135_6_fu_181_p0 <= sext_ln135_6_fu_494_p1(22 - 1 downto 0);
    mul_ln135_6_fu_181_p1 <= sext_ln135_6_fu_494_p1(22 - 1 downto 0);
    mul_ln135_7_fu_185_p0 <= sext_ln135_7_fu_509_p1(22 - 1 downto 0);
    mul_ln135_7_fu_185_p1 <= sext_ln135_7_fu_509_p1(22 - 1 downto 0);
    mul_ln135_8_fu_189_p0 <= sext_ln135_8_fu_524_p1(22 - 1 downto 0);
    mul_ln135_8_fu_189_p1 <= sext_ln135_8_fu_524_p1(22 - 1 downto 0);
    mul_ln135_9_fu_193_p0 <= sext_ln135_9_fu_539_p1(22 - 1 downto 0);
    mul_ln135_9_fu_193_p1 <= sext_ln135_9_fu_539_p1(22 - 1 downto 0);
    mul_ln135_fu_157_p0 <= sext_ln135_fu_404_p1(22 - 1 downto 0);
    mul_ln135_fu_157_p1 <= sext_ln135_fu_404_p1(22 - 1 downto 0);
    mul_ln149_1_fu_754_p1 <= zext_ln149_fu_734_p1(9 - 1 downto 0);
    mul_ln149_2_fu_767_p1 <= zext_ln149_fu_734_p1(9 - 1 downto 0);
    mul_ln149_3_fu_780_p1 <= zext_ln149_fu_734_p1(9 - 1 downto 0);
    mul_ln149_4_fu_793_p1 <= zext_ln149_fu_734_p1(9 - 1 downto 0);
    mul_ln149_5_fu_806_p1 <= zext_ln149_fu_734_p1(9 - 1 downto 0);
    mul_ln149_6_fu_819_p1 <= zext_ln149_fu_734_p1(9 - 1 downto 0);
    mul_ln149_7_fu_832_p1 <= zext_ln149_fu_734_p1(9 - 1 downto 0);
    mul_ln149_8_fu_845_p1 <= zext_ln149_fu_734_p1(9 - 1 downto 0);
    mul_ln149_9_fu_858_p1 <= zext_ln149_fu_734_p1(9 - 1 downto 0);
    mul_ln149_fu_741_p1 <= zext_ln149_fu_734_p1(9 - 1 downto 0);
    mul_ln73_1_fu_609_p1 <= ap_const_lv36_1999(14 - 1 downto 0);
    mul_ln73_fu_334_p1 <= ap_const_lv36_1999(14 - 1 downto 0);
    select_ln140_fu_667_p3 <= 
        sext_ln140_fu_625_p1 when (icmp_ln140_fu_655_p2(0) = '1') else 
        add_ln140_fu_661_p2;
        sext_ln130_fu_350_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(mean_fu_340_p4),22));

        sext_ln135_1_fu_419_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(sub_ln134_1_reg_989),38));

        sext_ln135_2_fu_434_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(sub_ln134_2_reg_995),38));

        sext_ln135_3_fu_449_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(sub_ln134_3_reg_1001),38));

        sext_ln135_4_fu_464_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(sub_ln134_4_reg_1007),38));

        sext_ln135_5_fu_479_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(sub_ln134_5_reg_1013),38));

        sext_ln135_6_fu_494_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(sub_ln134_6_reg_1019),38));

        sext_ln135_7_fu_509_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(sub_ln134_7_reg_1025),38));

        sext_ln135_8_fu_524_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(sub_ln134_8_reg_1031),38));

        sext_ln135_9_fu_539_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(sub_ln134_9_reg_1037),38));

        sext_ln135_fu_404_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(sub_ln134_reg_983),38));

        sext_ln140_1_fu_683_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(index_reg_1058),21));

        sext_ln140_fu_625_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_2_fu_615_p4),19));

        sext_ln149_11_fu_812_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(mul_ln149_5_fu_806_p2),33));

        sext_ln149_13_fu_825_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(mul_ln149_6_fu_819_p2),33));

        sext_ln149_15_fu_838_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(mul_ln149_7_fu_832_p2),33));

        sext_ln149_17_fu_851_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(mul_ln149_8_fu_845_p2),33));

        sext_ln149_1_fu_747_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(mul_ln149_fu_741_p2),33));

        sext_ln149_3_fu_760_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(mul_ln149_1_fu_754_p2),33));

        sext_ln149_5_fu_773_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(mul_ln149_2_fu_767_p2),33));

        sext_ln149_7_fu_786_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(mul_ln149_3_fu_780_p2),33));

        sext_ln149_9_fu_799_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(mul_ln149_4_fu_793_p2),33));

        sext_ln151_fu_864_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(mul_ln149_9_fu_858_p2),33));

    shl_ln128_1_fu_213_p3 <= (data_2_val & ap_const_lv6_0);
    shl_ln128_2_fu_221_p3 <= (data_3_val & ap_const_lv6_0);
    shl_ln128_3_fu_229_p3 <= (data_4_val & ap_const_lv6_0);
    shl_ln128_4_fu_237_p3 <= (data_5_val & ap_const_lv6_0);
    shl_ln128_5_fu_245_p3 <= (data_6_val & ap_const_lv6_0);
    shl_ln128_6_fu_253_p3 <= (data_7_val & ap_const_lv6_0);
    shl_ln128_7_fu_261_p3 <= (data_8_val & ap_const_lv6_0);
    shl_ln128_8_fu_269_p3 <= (data_9_val & ap_const_lv6_0);
    shl_ln_fu_205_p3 <= (data_1_val & ap_const_lv6_0);
    sub_ln134_1_fu_359_p2 <= std_logic_vector(unsigned(shl_ln_reg_933) - unsigned(sext_ln130_fu_350_p1));
    sub_ln134_2_fu_364_p2 <= std_logic_vector(unsigned(shl_ln128_1_reg_938) - unsigned(sext_ln130_fu_350_p1));
    sub_ln134_3_fu_369_p2 <= std_logic_vector(unsigned(shl_ln128_2_reg_943) - unsigned(sext_ln130_fu_350_p1));
    sub_ln134_4_fu_374_p2 <= std_logic_vector(unsigned(shl_ln128_3_reg_948) - unsigned(sext_ln130_fu_350_p1));
    sub_ln134_5_fu_379_p2 <= std_logic_vector(unsigned(shl_ln128_4_reg_953) - unsigned(sext_ln130_fu_350_p1));
    sub_ln134_6_fu_384_p2 <= std_logic_vector(unsigned(shl_ln128_5_reg_958) - unsigned(sext_ln130_fu_350_p1));
    sub_ln134_7_fu_389_p2 <= std_logic_vector(unsigned(shl_ln128_6_reg_963) - unsigned(sext_ln130_fu_350_p1));
    sub_ln134_8_fu_394_p2 <= std_logic_vector(unsigned(shl_ln128_7_reg_968) - unsigned(sext_ln130_fu_350_p1));
    sub_ln134_9_fu_399_p2 <= std_logic_vector(unsigned(shl_ln128_8_reg_973) - unsigned(sext_ln130_fu_350_p1));
    sub_ln134_fu_354_p2 <= std_logic_vector(unsigned(sum_cache_reg_928) - unsigned(sext_ln130_fu_350_p1));
    sum_cache_fu_197_p3 <= (data_0_val & ap_const_lv6_0);
    tmp_1_fu_647_p3 <= (tmp_fu_637_p4 & ap_const_lv14_0);
    tmp_2_fu_615_p4 <= mul_ln73_1_fu_609_p2(35 downto 18);
    tmp_3_fu_629_p3 <= mul_ln73_1_fu_609_p2(35 downto 35);
    tmp_4_fu_686_p3 <= sext_ln140_1_fu_683_p1(20 downto 20);
    tmp_5_fu_705_p4 <= index_1_fu_694_p3(18 downto 14);
    tmp_fu_637_p4 <= mul_ln73_1_fu_609_p2(17 downto 16);
    trunc_ln140_fu_701_p1 <= index_1_fu_694_p3(14 - 1 downto 0);
    zext_ln144_fu_729_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(index_2_fu_721_p3),64));
    zext_ln149_fu_734_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(invert_sqr_table_q0),31));
end behav;
