// ==============================================================
// Generated by Vitis HLS v2023.2
// Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
// Copyright 2022-2023 Advanced Micro Devices, Inc. All Rights Reserved.
// ==============================================================

`timescale 1 ns / 1 ps 

module myproject_layernorm_1d_ap_fixed_16_6_5_3_0_ap_fixed_33_13_5_3_0_config2_s (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        ap_ce,
        data_0_val,
        data_1_val,
        data_2_val,
        data_3_val,
        data_4_val,
        data_5_val,
        data_6_val,
        data_7_val,
        data_8_val,
        data_9_val,
        ap_return_0,
        ap_return_1,
        ap_return_2,
        ap_return_3,
        ap_return_4,
        ap_return_5,
        ap_return_6,
        ap_return_7,
        ap_return_8,
        ap_return_9
);

parameter    ap_ST_fsm_pp0_stage0 = 1'd1;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
input   ap_ce;
input  [15:0] data_0_val;
input  [15:0] data_1_val;
input  [15:0] data_2_val;
input  [15:0] data_3_val;
input  [15:0] data_4_val;
input  [15:0] data_5_val;
input  [15:0] data_6_val;
input  [15:0] data_7_val;
input  [15:0] data_8_val;
input  [15:0] data_9_val;
output  [32:0] ap_return_0;
output  [32:0] ap_return_1;
output  [32:0] ap_return_2;
output  [32:0] ap_return_3;
output  [32:0] ap_return_4;
output  [32:0] ap_return_5;
output  [32:0] ap_return_6;
output  [32:0] ap_return_7;
output  [32:0] ap_return_8;
output  [32:0] ap_return_9;

reg ap_done;
reg ap_idle;
reg ap_ready;

(* fsm_encoding = "none" *) reg   [0:0] ap_CS_fsm;
wire    ap_CS_fsm_pp0_stage0;
wire    ap_enable_reg_pp0_iter0;
reg    ap_enable_reg_pp0_iter1;
reg    ap_enable_reg_pp0_iter2;
reg    ap_enable_reg_pp0_iter3;
reg    ap_enable_reg_pp0_iter4;
reg    ap_enable_reg_pp0_iter5;
reg    ap_idle_pp0;
reg    ap_block_pp0_stage0_subdone;
wire   [13:0] invert_sqr_table_address0;
reg    invert_sqr_table_ce0;
wire   [8:0] invert_sqr_table_q0;
wire   [21:0] sum_cache_fu_197_p3;
reg   [21:0] sum_cache_reg_928;
wire    ap_block_pp0_stage0_11001;
wire   [21:0] shl_ln_fu_205_p3;
reg   [21:0] shl_ln_reg_933;
wire   [21:0] shl_ln128_1_fu_213_p3;
reg   [21:0] shl_ln128_1_reg_938;
wire   [21:0] shl_ln128_2_fu_221_p3;
reg   [21:0] shl_ln128_2_reg_943;
wire   [21:0] shl_ln128_3_fu_229_p3;
reg   [21:0] shl_ln128_3_reg_948;
wire   [21:0] shl_ln128_4_fu_237_p3;
reg   [21:0] shl_ln128_4_reg_953;
wire   [21:0] shl_ln128_5_fu_245_p3;
reg   [21:0] shl_ln128_5_reg_958;
wire   [21:0] shl_ln128_6_fu_253_p3;
reg   [21:0] shl_ln128_6_reg_963;
wire   [21:0] shl_ln128_7_fu_261_p3;
reg   [21:0] shl_ln128_7_reg_968;
wire   [21:0] shl_ln128_8_fu_269_p3;
reg   [21:0] shl_ln128_8_reg_973;
wire   [21:0] add_ln128_fu_325_p2;
reg  signed [21:0] add_ln128_reg_978;
wire  signed [21:0] sub_ln134_fu_354_p2;
reg  signed [21:0] sub_ln134_reg_983;
reg  signed [21:0] sub_ln134_reg_983_pp0_iter2_reg;
reg  signed [21:0] sub_ln134_reg_983_pp0_iter3_reg;
reg  signed [21:0] sub_ln134_reg_983_pp0_iter4_reg;
wire  signed [21:0] sub_ln134_1_fu_359_p2;
reg  signed [21:0] sub_ln134_1_reg_989;
reg  signed [21:0] sub_ln134_1_reg_989_pp0_iter2_reg;
reg  signed [21:0] sub_ln134_1_reg_989_pp0_iter3_reg;
reg  signed [21:0] sub_ln134_1_reg_989_pp0_iter4_reg;
wire  signed [21:0] sub_ln134_2_fu_364_p2;
reg  signed [21:0] sub_ln134_2_reg_995;
reg  signed [21:0] sub_ln134_2_reg_995_pp0_iter2_reg;
reg  signed [21:0] sub_ln134_2_reg_995_pp0_iter3_reg;
reg  signed [21:0] sub_ln134_2_reg_995_pp0_iter4_reg;
wire  signed [21:0] sub_ln134_3_fu_369_p2;
reg  signed [21:0] sub_ln134_3_reg_1001;
reg  signed [21:0] sub_ln134_3_reg_1001_pp0_iter2_reg;
reg  signed [21:0] sub_ln134_3_reg_1001_pp0_iter3_reg;
reg  signed [21:0] sub_ln134_3_reg_1001_pp0_iter4_reg;
wire  signed [21:0] sub_ln134_4_fu_374_p2;
reg  signed [21:0] sub_ln134_4_reg_1007;
reg  signed [21:0] sub_ln134_4_reg_1007_pp0_iter2_reg;
reg  signed [21:0] sub_ln134_4_reg_1007_pp0_iter3_reg;
reg  signed [21:0] sub_ln134_4_reg_1007_pp0_iter4_reg;
wire  signed [21:0] sub_ln134_5_fu_379_p2;
reg  signed [21:0] sub_ln134_5_reg_1013;
reg  signed [21:0] sub_ln134_5_reg_1013_pp0_iter2_reg;
reg  signed [21:0] sub_ln134_5_reg_1013_pp0_iter3_reg;
reg  signed [21:0] sub_ln134_5_reg_1013_pp0_iter4_reg;
wire  signed [21:0] sub_ln134_6_fu_384_p2;
reg  signed [21:0] sub_ln134_6_reg_1019;
reg  signed [21:0] sub_ln134_6_reg_1019_pp0_iter2_reg;
reg  signed [21:0] sub_ln134_6_reg_1019_pp0_iter3_reg;
reg  signed [21:0] sub_ln134_6_reg_1019_pp0_iter4_reg;
wire  signed [21:0] sub_ln134_7_fu_389_p2;
reg  signed [21:0] sub_ln134_7_reg_1025;
reg  signed [21:0] sub_ln134_7_reg_1025_pp0_iter2_reg;
reg  signed [21:0] sub_ln134_7_reg_1025_pp0_iter3_reg;
reg  signed [21:0] sub_ln134_7_reg_1025_pp0_iter4_reg;
wire  signed [21:0] sub_ln134_8_fu_394_p2;
reg  signed [21:0] sub_ln134_8_reg_1031;
reg  signed [21:0] sub_ln134_8_reg_1031_pp0_iter2_reg;
reg  signed [21:0] sub_ln134_8_reg_1031_pp0_iter3_reg;
reg  signed [21:0] sub_ln134_8_reg_1031_pp0_iter4_reg;
wire  signed [21:0] sub_ln134_9_fu_399_p2;
reg  signed [21:0] sub_ln134_9_reg_1037;
reg  signed [21:0] sub_ln134_9_reg_1037_pp0_iter2_reg;
reg  signed [21:0] sub_ln134_9_reg_1037_pp0_iter3_reg;
reg  signed [21:0] sub_ln134_9_reg_1037_pp0_iter4_reg;
wire   [21:0] add_ln136_1_fu_554_p2;
reg   [21:0] add_ln136_1_reg_1043;
wire   [21:0] add_ln136_3_fu_566_p2;
reg   [21:0] add_ln136_3_reg_1048;
wire   [21:0] add_ln136_8_fu_590_p2;
reg   [21:0] add_ln136_8_reg_1053;
wire  signed [18:0] index_fu_675_p3;
reg  signed [18:0] index_reg_1058;
wire   [63:0] zext_ln144_fu_729_p1;
wire    ap_block_pp0_stage0;
wire  signed [21:0] mul_ln135_fu_157_p0;
wire  signed [37:0] sext_ln135_fu_404_p1;
wire  signed [21:0] mul_ln135_fu_157_p1;
wire  signed [21:0] mul_ln135_1_fu_161_p0;
wire  signed [37:0] sext_ln135_1_fu_419_p1;
wire  signed [21:0] mul_ln135_1_fu_161_p1;
wire  signed [21:0] mul_ln135_2_fu_165_p0;
wire  signed [37:0] sext_ln135_2_fu_434_p1;
wire  signed [21:0] mul_ln135_2_fu_165_p1;
wire  signed [21:0] mul_ln135_3_fu_169_p0;
wire  signed [37:0] sext_ln135_3_fu_449_p1;
wire  signed [21:0] mul_ln135_3_fu_169_p1;
wire  signed [21:0] mul_ln135_4_fu_173_p0;
wire  signed [37:0] sext_ln135_4_fu_464_p1;
wire  signed [21:0] mul_ln135_4_fu_173_p1;
wire  signed [21:0] mul_ln135_5_fu_177_p0;
wire  signed [37:0] sext_ln135_5_fu_479_p1;
wire  signed [21:0] mul_ln135_5_fu_177_p1;
wire  signed [21:0] mul_ln135_6_fu_181_p0;
wire  signed [37:0] sext_ln135_6_fu_494_p1;
wire  signed [21:0] mul_ln135_6_fu_181_p1;
wire  signed [21:0] mul_ln135_7_fu_185_p0;
wire  signed [37:0] sext_ln135_7_fu_509_p1;
wire  signed [21:0] mul_ln135_7_fu_185_p1;
wire  signed [21:0] mul_ln135_8_fu_189_p0;
wire  signed [37:0] sext_ln135_8_fu_524_p1;
wire  signed [21:0] mul_ln135_8_fu_189_p1;
wire  signed [21:0] mul_ln135_9_fu_193_p0;
wire  signed [37:0] sext_ln135_9_fu_539_p1;
wire  signed [21:0] mul_ln135_9_fu_193_p1;
wire   [21:0] add_ln128_2_fu_283_p2;
wire   [21:0] add_ln128_3_fu_289_p2;
wire   [21:0] add_ln128_1_fu_277_p2;
wire   [21:0] add_ln128_6_fu_307_p2;
wire   [21:0] add_ln128_7_fu_313_p2;
wire   [21:0] add_ln128_5_fu_301_p2;
wire   [21:0] add_ln128_8_fu_319_p2;
wire   [21:0] add_ln128_4_fu_295_p2;
wire   [13:0] mul_ln73_fu_334_p1;
wire   [35:0] mul_ln73_fu_334_p2;
wire   [19:0] mean_fu_340_p4;
wire  signed [21:0] sext_ln130_fu_350_p1;
wire   [37:0] mul_ln135_fu_157_p2;
wire   [37:0] mul_ln135_1_fu_161_p2;
wire   [37:0] mul_ln135_2_fu_165_p2;
wire   [37:0] mul_ln135_3_fu_169_p2;
wire   [37:0] mul_ln135_4_fu_173_p2;
wire   [37:0] mul_ln135_5_fu_177_p2;
wire   [37:0] mul_ln135_6_fu_181_p2;
wire   [37:0] mul_ln135_7_fu_185_p2;
wire   [37:0] mul_ln135_8_fu_189_p2;
wire   [37:0] mul_ln135_9_fu_193_p2;
wire   [21:0] diff_10_fu_409_p4;
wire   [21:0] diff_fu_424_p4;
wire   [21:0] diff_3_fu_454_p4;
wire   [21:0] diff_4_fu_469_p4;
wire   [21:0] add_ln136_2_fu_560_p2;
wire   [21:0] diff_2_fu_439_p4;
wire   [21:0] diff_5_fu_484_p4;
wire   [21:0] diff_6_fu_499_p4;
wire   [21:0] diff_8_fu_529_p4;
wire   [21:0] diff_9_fu_544_p4;
wire   [21:0] add_ln136_6_fu_578_p2;
wire   [21:0] diff_7_fu_514_p4;
wire   [21:0] add_ln136_7_fu_584_p2;
wire   [21:0] add_ln136_5_fu_572_p2;
wire   [21:0] add_ln136_4_fu_596_p2;
wire  signed [21:0] add_ln136_fu_600_p2;
wire   [13:0] mul_ln73_1_fu_609_p1;
wire   [35:0] mul_ln73_1_fu_609_p2;
wire   [17:0] tmp_2_fu_615_p4;
wire   [1:0] tmp_fu_637_p4;
wire   [15:0] tmp_1_fu_647_p3;
wire  signed [18:0] sext_ln140_fu_625_p1;
wire   [0:0] icmp_ln140_fu_655_p2;
wire   [18:0] add_ln140_fu_661_p2;
wire   [0:0] tmp_3_fu_629_p3;
wire   [18:0] select_ln140_fu_667_p3;
wire  signed [20:0] sext_ln140_1_fu_683_p1;
wire   [0:0] tmp_4_fu_686_p3;
wire   [18:0] index_1_fu_694_p3;
wire   [4:0] tmp_5_fu_705_p4;
wire   [0:0] icmp_ln143_fu_715_p2;
wire   [13:0] trunc_ln140_fu_701_p1;
wire   [13:0] index_2_fu_721_p3;
wire   [8:0] mul_ln149_fu_741_p1;
wire   [30:0] zext_ln149_fu_734_p1;
wire   [30:0] mul_ln149_fu_741_p2;
wire   [8:0] mul_ln149_1_fu_754_p1;
wire   [30:0] mul_ln149_1_fu_754_p2;
wire   [8:0] mul_ln149_2_fu_767_p1;
wire   [30:0] mul_ln149_2_fu_767_p2;
wire   [8:0] mul_ln149_3_fu_780_p1;
wire   [30:0] mul_ln149_3_fu_780_p2;
wire   [8:0] mul_ln149_4_fu_793_p1;
wire   [30:0] mul_ln149_4_fu_793_p2;
wire   [8:0] mul_ln149_5_fu_806_p1;
wire   [30:0] mul_ln149_5_fu_806_p2;
wire   [8:0] mul_ln149_6_fu_819_p1;
wire   [30:0] mul_ln149_6_fu_819_p2;
wire   [8:0] mul_ln149_7_fu_832_p1;
wire   [30:0] mul_ln149_7_fu_832_p2;
wire   [8:0] mul_ln149_8_fu_845_p1;
wire   [30:0] mul_ln149_8_fu_845_p2;
wire   [8:0] mul_ln149_9_fu_858_p1;
wire   [30:0] mul_ln149_9_fu_858_p2;
wire  signed [32:0] sext_ln149_1_fu_747_p1;
wire  signed [32:0] sext_ln149_3_fu_760_p1;
wire  signed [32:0] sext_ln149_5_fu_773_p1;
wire  signed [32:0] sext_ln149_7_fu_786_p1;
wire  signed [32:0] sext_ln149_9_fu_799_p1;
wire  signed [32:0] sext_ln149_11_fu_812_p1;
wire  signed [32:0] sext_ln149_13_fu_825_p1;
wire  signed [32:0] sext_ln149_15_fu_838_p1;
wire  signed [32:0] sext_ln149_17_fu_851_p1;
wire  signed [32:0] sext_ln151_fu_864_p1;
reg   [0:0] ap_NS_fsm;
reg    ap_idle_pp0_0to4;
reg    ap_reset_idle_pp0;
wire    ap_enable_pp0;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 1'd1;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter2 = 1'b0;
#0 ap_enable_reg_pp0_iter3 = 1'b0;
#0 ap_enable_reg_pp0_iter4 = 1'b0;
#0 ap_enable_reg_pp0_iter5 = 1'b0;
end

myproject_layernorm_1d_ap_fixed_16_6_5_3_0_ap_fixed_33_13_5_3_0_config2_s_invert_sqr_tabkb #(
    .DataWidth( 9 ),
    .AddressRange( 16384 ),
    .AddressWidth( 14 ))
invert_sqr_table_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(invert_sqr_table_address0),
    .ce0(invert_sqr_table_ce0),
    .q0(invert_sqr_table_q0)
);

myproject_mul_22s_22s_38_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 22 ),
    .din1_WIDTH( 22 ),
    .dout_WIDTH( 38 ))
mul_22s_22s_38_1_1_U1(
    .din0(mul_ln135_fu_157_p0),
    .din1(mul_ln135_fu_157_p1),
    .dout(mul_ln135_fu_157_p2)
);

myproject_mul_22s_22s_38_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 22 ),
    .din1_WIDTH( 22 ),
    .dout_WIDTH( 38 ))
mul_22s_22s_38_1_1_U2(
    .din0(mul_ln135_1_fu_161_p0),
    .din1(mul_ln135_1_fu_161_p1),
    .dout(mul_ln135_1_fu_161_p2)
);

myproject_mul_22s_22s_38_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 22 ),
    .din1_WIDTH( 22 ),
    .dout_WIDTH( 38 ))
mul_22s_22s_38_1_1_U3(
    .din0(mul_ln135_2_fu_165_p0),
    .din1(mul_ln135_2_fu_165_p1),
    .dout(mul_ln135_2_fu_165_p2)
);

myproject_mul_22s_22s_38_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 22 ),
    .din1_WIDTH( 22 ),
    .dout_WIDTH( 38 ))
mul_22s_22s_38_1_1_U4(
    .din0(mul_ln135_3_fu_169_p0),
    .din1(mul_ln135_3_fu_169_p1),
    .dout(mul_ln135_3_fu_169_p2)
);

myproject_mul_22s_22s_38_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 22 ),
    .din1_WIDTH( 22 ),
    .dout_WIDTH( 38 ))
mul_22s_22s_38_1_1_U5(
    .din0(mul_ln135_4_fu_173_p0),
    .din1(mul_ln135_4_fu_173_p1),
    .dout(mul_ln135_4_fu_173_p2)
);

myproject_mul_22s_22s_38_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 22 ),
    .din1_WIDTH( 22 ),
    .dout_WIDTH( 38 ))
mul_22s_22s_38_1_1_U6(
    .din0(mul_ln135_5_fu_177_p0),
    .din1(mul_ln135_5_fu_177_p1),
    .dout(mul_ln135_5_fu_177_p2)
);

myproject_mul_22s_22s_38_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 22 ),
    .din1_WIDTH( 22 ),
    .dout_WIDTH( 38 ))
mul_22s_22s_38_1_1_U7(
    .din0(mul_ln135_6_fu_181_p0),
    .din1(mul_ln135_6_fu_181_p1),
    .dout(mul_ln135_6_fu_181_p2)
);

myproject_mul_22s_22s_38_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 22 ),
    .din1_WIDTH( 22 ),
    .dout_WIDTH( 38 ))
mul_22s_22s_38_1_1_U8(
    .din0(mul_ln135_7_fu_185_p0),
    .din1(mul_ln135_7_fu_185_p1),
    .dout(mul_ln135_7_fu_185_p2)
);

myproject_mul_22s_22s_38_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 22 ),
    .din1_WIDTH( 22 ),
    .dout_WIDTH( 38 ))
mul_22s_22s_38_1_1_U9(
    .din0(mul_ln135_8_fu_189_p0),
    .din1(mul_ln135_8_fu_189_p1),
    .dout(mul_ln135_8_fu_189_p2)
);

myproject_mul_22s_22s_38_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 22 ),
    .din1_WIDTH( 22 ),
    .dout_WIDTH( 38 ))
mul_22s_22s_38_1_1_U10(
    .din0(mul_ln135_9_fu_193_p0),
    .din1(mul_ln135_9_fu_193_p1),
    .dout(mul_ln135_9_fu_193_p2)
);

myproject_mul_22s_14ns_36_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 22 ),
    .din1_WIDTH( 14 ),
    .dout_WIDTH( 36 ))
mul_22s_14ns_36_1_1_U11(
    .din0(add_ln128_reg_978),
    .din1(mul_ln73_fu_334_p1),
    .dout(mul_ln73_fu_334_p2)
);

myproject_mul_22s_14ns_36_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 22 ),
    .din1_WIDTH( 14 ),
    .dout_WIDTH( 36 ))
mul_22s_14ns_36_1_1_U12(
    .din0(add_ln136_fu_600_p2),
    .din1(mul_ln73_1_fu_609_p1),
    .dout(mul_ln73_1_fu_609_p2)
);

myproject_mul_22s_9ns_31_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 22 ),
    .din1_WIDTH( 9 ),
    .dout_WIDTH( 31 ))
mul_22s_9ns_31_1_1_U13(
    .din0(sub_ln134_reg_983_pp0_iter4_reg),
    .din1(mul_ln149_fu_741_p1),
    .dout(mul_ln149_fu_741_p2)
);

myproject_mul_22s_9ns_31_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 22 ),
    .din1_WIDTH( 9 ),
    .dout_WIDTH( 31 ))
mul_22s_9ns_31_1_1_U14(
    .din0(sub_ln134_1_reg_989_pp0_iter4_reg),
    .din1(mul_ln149_1_fu_754_p1),
    .dout(mul_ln149_1_fu_754_p2)
);

myproject_mul_22s_9ns_31_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 22 ),
    .din1_WIDTH( 9 ),
    .dout_WIDTH( 31 ))
mul_22s_9ns_31_1_1_U15(
    .din0(sub_ln134_2_reg_995_pp0_iter4_reg),
    .din1(mul_ln149_2_fu_767_p1),
    .dout(mul_ln149_2_fu_767_p2)
);

myproject_mul_22s_9ns_31_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 22 ),
    .din1_WIDTH( 9 ),
    .dout_WIDTH( 31 ))
mul_22s_9ns_31_1_1_U16(
    .din0(sub_ln134_3_reg_1001_pp0_iter4_reg),
    .din1(mul_ln149_3_fu_780_p1),
    .dout(mul_ln149_3_fu_780_p2)
);

myproject_mul_22s_9ns_31_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 22 ),
    .din1_WIDTH( 9 ),
    .dout_WIDTH( 31 ))
mul_22s_9ns_31_1_1_U17(
    .din0(sub_ln134_4_reg_1007_pp0_iter4_reg),
    .din1(mul_ln149_4_fu_793_p1),
    .dout(mul_ln149_4_fu_793_p2)
);

myproject_mul_22s_9ns_31_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 22 ),
    .din1_WIDTH( 9 ),
    .dout_WIDTH( 31 ))
mul_22s_9ns_31_1_1_U18(
    .din0(sub_ln134_5_reg_1013_pp0_iter4_reg),
    .din1(mul_ln149_5_fu_806_p1),
    .dout(mul_ln149_5_fu_806_p2)
);

myproject_mul_22s_9ns_31_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 22 ),
    .din1_WIDTH( 9 ),
    .dout_WIDTH( 31 ))
mul_22s_9ns_31_1_1_U19(
    .din0(sub_ln134_6_reg_1019_pp0_iter4_reg),
    .din1(mul_ln149_6_fu_819_p1),
    .dout(mul_ln149_6_fu_819_p2)
);

myproject_mul_22s_9ns_31_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 22 ),
    .din1_WIDTH( 9 ),
    .dout_WIDTH( 31 ))
mul_22s_9ns_31_1_1_U20(
    .din0(sub_ln134_7_reg_1025_pp0_iter4_reg),
    .din1(mul_ln149_7_fu_832_p1),
    .dout(mul_ln149_7_fu_832_p2)
);

myproject_mul_22s_9ns_31_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 22 ),
    .din1_WIDTH( 9 ),
    .dout_WIDTH( 31 ))
mul_22s_9ns_31_1_1_U21(
    .din0(sub_ln134_8_reg_1031_pp0_iter4_reg),
    .din1(mul_ln149_8_fu_845_p1),
    .dout(mul_ln149_8_fu_845_p2)
);

myproject_mul_22s_9ns_31_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 22 ),
    .din1_WIDTH( 9 ),
    .dout_WIDTH( 31 ))
mul_22s_9ns_31_1_1_U22(
    .din0(sub_ln134_9_reg_1037_pp0_iter4_reg),
    .din1(mul_ln149_9_fu_858_p1),
    .dout(mul_ln149_9_fu_858_p2)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            ap_enable_reg_pp0_iter1 <= ap_start;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter2 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter3 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter4 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter4 <= ap_enable_reg_pp0_iter3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter5 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter5 <= ap_enable_reg_pp0_iter4;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_ce) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        add_ln128_reg_978[21 : 6] <= add_ln128_fu_325_p2[21 : 6];
        shl_ln128_1_reg_938[21 : 6] <= shl_ln128_1_fu_213_p3[21 : 6];
        shl_ln128_2_reg_943[21 : 6] <= shl_ln128_2_fu_221_p3[21 : 6];
        shl_ln128_3_reg_948[21 : 6] <= shl_ln128_3_fu_229_p3[21 : 6];
        shl_ln128_4_reg_953[21 : 6] <= shl_ln128_4_fu_237_p3[21 : 6];
        shl_ln128_5_reg_958[21 : 6] <= shl_ln128_5_fu_245_p3[21 : 6];
        shl_ln128_6_reg_963[21 : 6] <= shl_ln128_6_fu_253_p3[21 : 6];
        shl_ln128_7_reg_968[21 : 6] <= shl_ln128_7_fu_261_p3[21 : 6];
        shl_ln128_8_reg_973[21 : 6] <= shl_ln128_8_fu_269_p3[21 : 6];
        shl_ln_reg_933[21 : 6] <= shl_ln_fu_205_p3[21 : 6];
        sub_ln134_1_reg_989 <= sub_ln134_1_fu_359_p2;
        sub_ln134_2_reg_995 <= sub_ln134_2_fu_364_p2;
        sub_ln134_3_reg_1001 <= sub_ln134_3_fu_369_p2;
        sub_ln134_4_reg_1007 <= sub_ln134_4_fu_374_p2;
        sub_ln134_5_reg_1013 <= sub_ln134_5_fu_379_p2;
        sub_ln134_6_reg_1019 <= sub_ln134_6_fu_384_p2;
        sub_ln134_7_reg_1025 <= sub_ln134_7_fu_389_p2;
        sub_ln134_8_reg_1031 <= sub_ln134_8_fu_394_p2;
        sub_ln134_9_reg_1037 <= sub_ln134_9_fu_399_p2;
        sub_ln134_reg_983 <= sub_ln134_fu_354_p2;
        sum_cache_reg_928[21 : 6] <= sum_cache_fu_197_p3[21 : 6];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_ce))) begin
        add_ln136_1_reg_1043 <= add_ln136_1_fu_554_p2;
        add_ln136_3_reg_1048 <= add_ln136_3_fu_566_p2;
        add_ln136_8_reg_1053 <= add_ln136_8_fu_590_p2;
        index_reg_1058 <= index_fu_675_p3;
        sub_ln134_1_reg_989_pp0_iter2_reg <= sub_ln134_1_reg_989;
        sub_ln134_1_reg_989_pp0_iter3_reg <= sub_ln134_1_reg_989_pp0_iter2_reg;
        sub_ln134_1_reg_989_pp0_iter4_reg <= sub_ln134_1_reg_989_pp0_iter3_reg;
        sub_ln134_2_reg_995_pp0_iter2_reg <= sub_ln134_2_reg_995;
        sub_ln134_2_reg_995_pp0_iter3_reg <= sub_ln134_2_reg_995_pp0_iter2_reg;
        sub_ln134_2_reg_995_pp0_iter4_reg <= sub_ln134_2_reg_995_pp0_iter3_reg;
        sub_ln134_3_reg_1001_pp0_iter2_reg <= sub_ln134_3_reg_1001;
        sub_ln134_3_reg_1001_pp0_iter3_reg <= sub_ln134_3_reg_1001_pp0_iter2_reg;
        sub_ln134_3_reg_1001_pp0_iter4_reg <= sub_ln134_3_reg_1001_pp0_iter3_reg;
        sub_ln134_4_reg_1007_pp0_iter2_reg <= sub_ln134_4_reg_1007;
        sub_ln134_4_reg_1007_pp0_iter3_reg <= sub_ln134_4_reg_1007_pp0_iter2_reg;
        sub_ln134_4_reg_1007_pp0_iter4_reg <= sub_ln134_4_reg_1007_pp0_iter3_reg;
        sub_ln134_5_reg_1013_pp0_iter2_reg <= sub_ln134_5_reg_1013;
        sub_ln134_5_reg_1013_pp0_iter3_reg <= sub_ln134_5_reg_1013_pp0_iter2_reg;
        sub_ln134_5_reg_1013_pp0_iter4_reg <= sub_ln134_5_reg_1013_pp0_iter3_reg;
        sub_ln134_6_reg_1019_pp0_iter2_reg <= sub_ln134_6_reg_1019;
        sub_ln134_6_reg_1019_pp0_iter3_reg <= sub_ln134_6_reg_1019_pp0_iter2_reg;
        sub_ln134_6_reg_1019_pp0_iter4_reg <= sub_ln134_6_reg_1019_pp0_iter3_reg;
        sub_ln134_7_reg_1025_pp0_iter2_reg <= sub_ln134_7_reg_1025;
        sub_ln134_7_reg_1025_pp0_iter3_reg <= sub_ln134_7_reg_1025_pp0_iter2_reg;
        sub_ln134_7_reg_1025_pp0_iter4_reg <= sub_ln134_7_reg_1025_pp0_iter3_reg;
        sub_ln134_8_reg_1031_pp0_iter2_reg <= sub_ln134_8_reg_1031;
        sub_ln134_8_reg_1031_pp0_iter3_reg <= sub_ln134_8_reg_1031_pp0_iter2_reg;
        sub_ln134_8_reg_1031_pp0_iter4_reg <= sub_ln134_8_reg_1031_pp0_iter3_reg;
        sub_ln134_9_reg_1037_pp0_iter2_reg <= sub_ln134_9_reg_1037;
        sub_ln134_9_reg_1037_pp0_iter3_reg <= sub_ln134_9_reg_1037_pp0_iter2_reg;
        sub_ln134_9_reg_1037_pp0_iter4_reg <= sub_ln134_9_reg_1037_pp0_iter3_reg;
        sub_ln134_reg_983_pp0_iter2_reg <= sub_ln134_reg_983;
        sub_ln134_reg_983_pp0_iter3_reg <= sub_ln134_reg_983_pp0_iter2_reg;
        sub_ln134_reg_983_pp0_iter4_reg <= sub_ln134_reg_983_pp0_iter3_reg;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter5 == 1'b1))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (ap_idle_pp0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter5 == 1'b0) & (ap_enable_reg_pp0_iter4 == 1'b0) & (ap_enable_reg_pp0_iter3 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter4 == 1'b0) & (ap_enable_reg_pp0_iter3 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0_0to4 = 1'b1;
    end else begin
        ap_idle_pp0_0to4 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if (((ap_idle_pp0_0to4 == 1'b1) & (ap_start == 1'b0))) begin
        ap_reset_idle_pp0 = 1'b1;
    end else begin
        ap_reset_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter4 == 1'b1) & (1'b1 == ap_ce))) begin
        invert_sqr_table_ce0 = 1'b1;
    end else begin
        invert_sqr_table_ce0 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_pp0_stage0 : begin
            ap_NS_fsm = ap_ST_fsm_pp0_stage0;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign add_ln128_1_fu_277_p2 = (shl_ln_fu_205_p3 + sum_cache_fu_197_p3);

assign add_ln128_2_fu_283_p2 = (shl_ln128_2_fu_221_p3 + shl_ln128_3_fu_229_p3);

assign add_ln128_3_fu_289_p2 = (add_ln128_2_fu_283_p2 + shl_ln128_1_fu_213_p3);

assign add_ln128_4_fu_295_p2 = (add_ln128_3_fu_289_p2 + add_ln128_1_fu_277_p2);

assign add_ln128_5_fu_301_p2 = (shl_ln128_4_fu_237_p3 + shl_ln128_5_fu_245_p3);

assign add_ln128_6_fu_307_p2 = (shl_ln128_7_fu_261_p3 + shl_ln128_8_fu_269_p3);

assign add_ln128_7_fu_313_p2 = (add_ln128_6_fu_307_p2 + shl_ln128_6_fu_253_p3);

assign add_ln128_8_fu_319_p2 = (add_ln128_7_fu_313_p2 + add_ln128_5_fu_301_p2);

assign add_ln128_fu_325_p2 = (add_ln128_8_fu_319_p2 + add_ln128_4_fu_295_p2);

assign add_ln136_1_fu_554_p2 = (diff_10_fu_409_p4 + diff_fu_424_p4);

assign add_ln136_2_fu_560_p2 = (diff_3_fu_454_p4 + diff_4_fu_469_p4);

assign add_ln136_3_fu_566_p2 = (add_ln136_2_fu_560_p2 + diff_2_fu_439_p4);

assign add_ln136_4_fu_596_p2 = (add_ln136_3_reg_1048 + add_ln136_1_reg_1043);

assign add_ln136_5_fu_572_p2 = (diff_5_fu_484_p4 + diff_6_fu_499_p4);

assign add_ln136_6_fu_578_p2 = (diff_8_fu_529_p4 + diff_9_fu_544_p4);

assign add_ln136_7_fu_584_p2 = (add_ln136_6_fu_578_p2 + diff_7_fu_514_p4);

assign add_ln136_8_fu_590_p2 = (add_ln136_7_fu_584_p2 + add_ln136_5_fu_572_p2);

assign add_ln136_fu_600_p2 = (add_ln136_8_reg_1053 + add_ln136_4_fu_596_p2);

assign add_ln140_fu_661_p2 = ($signed(sext_ln140_fu_625_p1) + $signed(19'd1));

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd0];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_11001 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage0_subdone = (1'b0 == ap_ce);
end

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_enable_reg_pp0_iter0 = ap_start;

assign ap_return_0 = sext_ln149_1_fu_747_p1;

assign ap_return_1 = sext_ln149_3_fu_760_p1;

assign ap_return_2 = sext_ln149_5_fu_773_p1;

assign ap_return_3 = sext_ln149_7_fu_786_p1;

assign ap_return_4 = sext_ln149_9_fu_799_p1;

assign ap_return_5 = sext_ln149_11_fu_812_p1;

assign ap_return_6 = sext_ln149_13_fu_825_p1;

assign ap_return_7 = sext_ln149_15_fu_838_p1;

assign ap_return_8 = sext_ln149_17_fu_851_p1;

assign ap_return_9 = sext_ln151_fu_864_p1;

assign diff_10_fu_409_p4 = {{mul_ln135_fu_157_p2[37:16]}};

assign diff_2_fu_439_p4 = {{mul_ln135_2_fu_165_p2[37:16]}};

assign diff_3_fu_454_p4 = {{mul_ln135_3_fu_169_p2[37:16]}};

assign diff_4_fu_469_p4 = {{mul_ln135_4_fu_173_p2[37:16]}};

assign diff_5_fu_484_p4 = {{mul_ln135_5_fu_177_p2[37:16]}};

assign diff_6_fu_499_p4 = {{mul_ln135_6_fu_181_p2[37:16]}};

assign diff_7_fu_514_p4 = {{mul_ln135_7_fu_185_p2[37:16]}};

assign diff_8_fu_529_p4 = {{mul_ln135_8_fu_189_p2[37:16]}};

assign diff_9_fu_544_p4 = {{mul_ln135_9_fu_193_p2[37:16]}};

assign diff_fu_424_p4 = {{mul_ln135_1_fu_161_p2[37:16]}};

assign icmp_ln140_fu_655_p2 = ((tmp_1_fu_647_p3 == 16'd0) ? 1'b1 : 1'b0);

assign icmp_ln143_fu_715_p2 = ((tmp_5_fu_705_p4 != 5'd0) ? 1'b1 : 1'b0);

assign index_1_fu_694_p3 = ((tmp_4_fu_686_p3[0:0] == 1'b1) ? 19'd0 : index_reg_1058);

assign index_2_fu_721_p3 = ((icmp_ln143_fu_715_p2[0:0] == 1'b1) ? 14'd16383 : trunc_ln140_fu_701_p1);

assign index_fu_675_p3 = ((tmp_3_fu_629_p3[0:0] == 1'b1) ? select_ln140_fu_667_p3 : sext_ln140_fu_625_p1);

assign invert_sqr_table_address0 = zext_ln144_fu_729_p1;

assign mean_fu_340_p4 = {{mul_ln73_fu_334_p2[35:16]}};

assign mul_ln135_1_fu_161_p0 = sext_ln135_1_fu_419_p1;

assign mul_ln135_1_fu_161_p1 = sext_ln135_1_fu_419_p1;

assign mul_ln135_2_fu_165_p0 = sext_ln135_2_fu_434_p1;

assign mul_ln135_2_fu_165_p1 = sext_ln135_2_fu_434_p1;

assign mul_ln135_3_fu_169_p0 = sext_ln135_3_fu_449_p1;

assign mul_ln135_3_fu_169_p1 = sext_ln135_3_fu_449_p1;

assign mul_ln135_4_fu_173_p0 = sext_ln135_4_fu_464_p1;

assign mul_ln135_4_fu_173_p1 = sext_ln135_4_fu_464_p1;

assign mul_ln135_5_fu_177_p0 = sext_ln135_5_fu_479_p1;

assign mul_ln135_5_fu_177_p1 = sext_ln135_5_fu_479_p1;

assign mul_ln135_6_fu_181_p0 = sext_ln135_6_fu_494_p1;

assign mul_ln135_6_fu_181_p1 = sext_ln135_6_fu_494_p1;

assign mul_ln135_7_fu_185_p0 = sext_ln135_7_fu_509_p1;

assign mul_ln135_7_fu_185_p1 = sext_ln135_7_fu_509_p1;

assign mul_ln135_8_fu_189_p0 = sext_ln135_8_fu_524_p1;

assign mul_ln135_8_fu_189_p1 = sext_ln135_8_fu_524_p1;

assign mul_ln135_9_fu_193_p0 = sext_ln135_9_fu_539_p1;

assign mul_ln135_9_fu_193_p1 = sext_ln135_9_fu_539_p1;

assign mul_ln135_fu_157_p0 = sext_ln135_fu_404_p1;

assign mul_ln135_fu_157_p1 = sext_ln135_fu_404_p1;

assign mul_ln149_1_fu_754_p1 = zext_ln149_fu_734_p1;

assign mul_ln149_2_fu_767_p1 = zext_ln149_fu_734_p1;

assign mul_ln149_3_fu_780_p1 = zext_ln149_fu_734_p1;

assign mul_ln149_4_fu_793_p1 = zext_ln149_fu_734_p1;

assign mul_ln149_5_fu_806_p1 = zext_ln149_fu_734_p1;

assign mul_ln149_6_fu_819_p1 = zext_ln149_fu_734_p1;

assign mul_ln149_7_fu_832_p1 = zext_ln149_fu_734_p1;

assign mul_ln149_8_fu_845_p1 = zext_ln149_fu_734_p1;

assign mul_ln149_9_fu_858_p1 = zext_ln149_fu_734_p1;

assign mul_ln149_fu_741_p1 = zext_ln149_fu_734_p1;

assign mul_ln73_1_fu_609_p1 = 36'd6553;

assign mul_ln73_fu_334_p1 = 36'd6553;

assign select_ln140_fu_667_p3 = ((icmp_ln140_fu_655_p2[0:0] == 1'b1) ? sext_ln140_fu_625_p1 : add_ln140_fu_661_p2);

assign sext_ln130_fu_350_p1 = $signed(mean_fu_340_p4);

assign sext_ln135_1_fu_419_p1 = sub_ln134_1_reg_989;

assign sext_ln135_2_fu_434_p1 = sub_ln134_2_reg_995;

assign sext_ln135_3_fu_449_p1 = sub_ln134_3_reg_1001;

assign sext_ln135_4_fu_464_p1 = sub_ln134_4_reg_1007;

assign sext_ln135_5_fu_479_p1 = sub_ln134_5_reg_1013;

assign sext_ln135_6_fu_494_p1 = sub_ln134_6_reg_1019;

assign sext_ln135_7_fu_509_p1 = sub_ln134_7_reg_1025;

assign sext_ln135_8_fu_524_p1 = sub_ln134_8_reg_1031;

assign sext_ln135_9_fu_539_p1 = sub_ln134_9_reg_1037;

assign sext_ln135_fu_404_p1 = sub_ln134_reg_983;

assign sext_ln140_1_fu_683_p1 = index_reg_1058;

assign sext_ln140_fu_625_p1 = $signed(tmp_2_fu_615_p4);

assign sext_ln149_11_fu_812_p1 = $signed(mul_ln149_5_fu_806_p2);

assign sext_ln149_13_fu_825_p1 = $signed(mul_ln149_6_fu_819_p2);

assign sext_ln149_15_fu_838_p1 = $signed(mul_ln149_7_fu_832_p2);

assign sext_ln149_17_fu_851_p1 = $signed(mul_ln149_8_fu_845_p2);

assign sext_ln149_1_fu_747_p1 = $signed(mul_ln149_fu_741_p2);

assign sext_ln149_3_fu_760_p1 = $signed(mul_ln149_1_fu_754_p2);

assign sext_ln149_5_fu_773_p1 = $signed(mul_ln149_2_fu_767_p2);

assign sext_ln149_7_fu_786_p1 = $signed(mul_ln149_3_fu_780_p2);

assign sext_ln149_9_fu_799_p1 = $signed(mul_ln149_4_fu_793_p2);

assign sext_ln151_fu_864_p1 = $signed(mul_ln149_9_fu_858_p2);

assign shl_ln128_1_fu_213_p3 = {{data_2_val}, {6'd0}};

assign shl_ln128_2_fu_221_p3 = {{data_3_val}, {6'd0}};

assign shl_ln128_3_fu_229_p3 = {{data_4_val}, {6'd0}};

assign shl_ln128_4_fu_237_p3 = {{data_5_val}, {6'd0}};

assign shl_ln128_5_fu_245_p3 = {{data_6_val}, {6'd0}};

assign shl_ln128_6_fu_253_p3 = {{data_7_val}, {6'd0}};

assign shl_ln128_7_fu_261_p3 = {{data_8_val}, {6'd0}};

assign shl_ln128_8_fu_269_p3 = {{data_9_val}, {6'd0}};

assign shl_ln_fu_205_p3 = {{data_1_val}, {6'd0}};

assign sub_ln134_1_fu_359_p2 = ($signed(shl_ln_reg_933) - $signed(sext_ln130_fu_350_p1));

assign sub_ln134_2_fu_364_p2 = ($signed(shl_ln128_1_reg_938) - $signed(sext_ln130_fu_350_p1));

assign sub_ln134_3_fu_369_p2 = ($signed(shl_ln128_2_reg_943) - $signed(sext_ln130_fu_350_p1));

assign sub_ln134_4_fu_374_p2 = ($signed(shl_ln128_3_reg_948) - $signed(sext_ln130_fu_350_p1));

assign sub_ln134_5_fu_379_p2 = ($signed(shl_ln128_4_reg_953) - $signed(sext_ln130_fu_350_p1));

assign sub_ln134_6_fu_384_p2 = ($signed(shl_ln128_5_reg_958) - $signed(sext_ln130_fu_350_p1));

assign sub_ln134_7_fu_389_p2 = ($signed(shl_ln128_6_reg_963) - $signed(sext_ln130_fu_350_p1));

assign sub_ln134_8_fu_394_p2 = ($signed(shl_ln128_7_reg_968) - $signed(sext_ln130_fu_350_p1));

assign sub_ln134_9_fu_399_p2 = ($signed(shl_ln128_8_reg_973) - $signed(sext_ln130_fu_350_p1));

assign sub_ln134_fu_354_p2 = ($signed(sum_cache_reg_928) - $signed(sext_ln130_fu_350_p1));

assign sum_cache_fu_197_p3 = {{data_0_val}, {6'd0}};

assign tmp_1_fu_647_p3 = {{tmp_fu_637_p4}, {14'd0}};

assign tmp_2_fu_615_p4 = {{mul_ln73_1_fu_609_p2[35:18]}};

assign tmp_3_fu_629_p3 = mul_ln73_1_fu_609_p2[32'd35];

assign tmp_4_fu_686_p3 = sext_ln140_1_fu_683_p1[32'd20];

assign tmp_5_fu_705_p4 = {{index_1_fu_694_p3[18:14]}};

assign tmp_fu_637_p4 = {{mul_ln73_1_fu_609_p2[17:16]}};

assign trunc_ln140_fu_701_p1 = index_1_fu_694_p3[13:0];

assign zext_ln144_fu_729_p1 = index_2_fu_721_p3;

assign zext_ln149_fu_734_p1 = invert_sqr_table_q0;

always @ (posedge ap_clk) begin
    sum_cache_reg_928[5:0] <= 6'b000000;
    shl_ln_reg_933[5:0] <= 6'b000000;
    shl_ln128_1_reg_938[5:0] <= 6'b000000;
    shl_ln128_2_reg_943[5:0] <= 6'b000000;
    shl_ln128_3_reg_948[5:0] <= 6'b000000;
    shl_ln128_4_reg_953[5:0] <= 6'b000000;
    shl_ln128_5_reg_958[5:0] <= 6'b000000;
    shl_ln128_6_reg_963[5:0] <= 6'b000000;
    shl_ln128_7_reg_968[5:0] <= 6'b000000;
    shl_ln128_8_reg_973[5:0] <= 6'b000000;
    add_ln128_reg_978[5:0] <= 6'b000000;
end

endmodule //myproject_layernorm_1d_ap_fixed_16_6_5_3_0_ap_fixed_33_13_5_3_0_config2_s
