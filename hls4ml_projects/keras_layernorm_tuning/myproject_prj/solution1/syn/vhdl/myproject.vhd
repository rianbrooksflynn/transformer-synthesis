-- ==============================================================
-- Generated by Vitis HLS v2023.2
-- Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
-- Copyright 2022-2023 Advanced Micro Devices, Inc. All Rights Reserved.
-- ==============================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity myproject is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    layer_normalization_input_ap_vld : IN STD_LOGIC;
    layer_normalization_input : IN STD_LOGIC_VECTOR (1279 downto 0);
    layer2_out_0 : OUT STD_LOGIC_VECTOR (32 downto 0);
    layer2_out_0_ap_vld : OUT STD_LOGIC;
    layer2_out_1 : OUT STD_LOGIC_VECTOR (32 downto 0);
    layer2_out_1_ap_vld : OUT STD_LOGIC;
    layer2_out_2 : OUT STD_LOGIC_VECTOR (32 downto 0);
    layer2_out_2_ap_vld : OUT STD_LOGIC;
    layer2_out_3 : OUT STD_LOGIC_VECTOR (32 downto 0);
    layer2_out_3_ap_vld : OUT STD_LOGIC;
    layer2_out_4 : OUT STD_LOGIC_VECTOR (32 downto 0);
    layer2_out_4_ap_vld : OUT STD_LOGIC;
    layer2_out_5 : OUT STD_LOGIC_VECTOR (32 downto 0);
    layer2_out_5_ap_vld : OUT STD_LOGIC;
    layer2_out_6 : OUT STD_LOGIC_VECTOR (32 downto 0);
    layer2_out_6_ap_vld : OUT STD_LOGIC;
    layer2_out_7 : OUT STD_LOGIC_VECTOR (32 downto 0);
    layer2_out_7_ap_vld : OUT STD_LOGIC;
    layer2_out_8 : OUT STD_LOGIC_VECTOR (32 downto 0);
    layer2_out_8_ap_vld : OUT STD_LOGIC;
    layer2_out_9 : OUT STD_LOGIC_VECTOR (32 downto 0);
    layer2_out_9_ap_vld : OUT STD_LOGIC;
    layer2_out_10 : OUT STD_LOGIC_VECTOR (32 downto 0);
    layer2_out_10_ap_vld : OUT STD_LOGIC;
    layer2_out_11 : OUT STD_LOGIC_VECTOR (32 downto 0);
    layer2_out_11_ap_vld : OUT STD_LOGIC;
    layer2_out_12 : OUT STD_LOGIC_VECTOR (32 downto 0);
    layer2_out_12_ap_vld : OUT STD_LOGIC;
    layer2_out_13 : OUT STD_LOGIC_VECTOR (32 downto 0);
    layer2_out_13_ap_vld : OUT STD_LOGIC;
    layer2_out_14 : OUT STD_LOGIC_VECTOR (32 downto 0);
    layer2_out_14_ap_vld : OUT STD_LOGIC;
    layer2_out_15 : OUT STD_LOGIC_VECTOR (32 downto 0);
    layer2_out_15_ap_vld : OUT STD_LOGIC;
    layer2_out_16 : OUT STD_LOGIC_VECTOR (32 downto 0);
    layer2_out_16_ap_vld : OUT STD_LOGIC;
    layer2_out_17 : OUT STD_LOGIC_VECTOR (32 downto 0);
    layer2_out_17_ap_vld : OUT STD_LOGIC;
    layer2_out_18 : OUT STD_LOGIC_VECTOR (32 downto 0);
    layer2_out_18_ap_vld : OUT STD_LOGIC;
    layer2_out_19 : OUT STD_LOGIC_VECTOR (32 downto 0);
    layer2_out_19_ap_vld : OUT STD_LOGIC;
    layer2_out_20 : OUT STD_LOGIC_VECTOR (32 downto 0);
    layer2_out_20_ap_vld : OUT STD_LOGIC;
    layer2_out_21 : OUT STD_LOGIC_VECTOR (32 downto 0);
    layer2_out_21_ap_vld : OUT STD_LOGIC;
    layer2_out_22 : OUT STD_LOGIC_VECTOR (32 downto 0);
    layer2_out_22_ap_vld : OUT STD_LOGIC;
    layer2_out_23 : OUT STD_LOGIC_VECTOR (32 downto 0);
    layer2_out_23_ap_vld : OUT STD_LOGIC;
    layer2_out_24 : OUT STD_LOGIC_VECTOR (32 downto 0);
    layer2_out_24_ap_vld : OUT STD_LOGIC;
    layer2_out_25 : OUT STD_LOGIC_VECTOR (32 downto 0);
    layer2_out_25_ap_vld : OUT STD_LOGIC;
    layer2_out_26 : OUT STD_LOGIC_VECTOR (32 downto 0);
    layer2_out_26_ap_vld : OUT STD_LOGIC;
    layer2_out_27 : OUT STD_LOGIC_VECTOR (32 downto 0);
    layer2_out_27_ap_vld : OUT STD_LOGIC;
    layer2_out_28 : OUT STD_LOGIC_VECTOR (32 downto 0);
    layer2_out_28_ap_vld : OUT STD_LOGIC;
    layer2_out_29 : OUT STD_LOGIC_VECTOR (32 downto 0);
    layer2_out_29_ap_vld : OUT STD_LOGIC;
    layer2_out_30 : OUT STD_LOGIC_VECTOR (32 downto 0);
    layer2_out_30_ap_vld : OUT STD_LOGIC;
    layer2_out_31 : OUT STD_LOGIC_VECTOR (32 downto 0);
    layer2_out_31_ap_vld : OUT STD_LOGIC;
    layer2_out_32 : OUT STD_LOGIC_VECTOR (32 downto 0);
    layer2_out_32_ap_vld : OUT STD_LOGIC;
    layer2_out_33 : OUT STD_LOGIC_VECTOR (32 downto 0);
    layer2_out_33_ap_vld : OUT STD_LOGIC;
    layer2_out_34 : OUT STD_LOGIC_VECTOR (32 downto 0);
    layer2_out_34_ap_vld : OUT STD_LOGIC;
    layer2_out_35 : OUT STD_LOGIC_VECTOR (32 downto 0);
    layer2_out_35_ap_vld : OUT STD_LOGIC;
    layer2_out_36 : OUT STD_LOGIC_VECTOR (32 downto 0);
    layer2_out_36_ap_vld : OUT STD_LOGIC;
    layer2_out_37 : OUT STD_LOGIC_VECTOR (32 downto 0);
    layer2_out_37_ap_vld : OUT STD_LOGIC;
    layer2_out_38 : OUT STD_LOGIC_VECTOR (32 downto 0);
    layer2_out_38_ap_vld : OUT STD_LOGIC;
    layer2_out_39 : OUT STD_LOGIC_VECTOR (32 downto 0);
    layer2_out_39_ap_vld : OUT STD_LOGIC;
    layer2_out_40 : OUT STD_LOGIC_VECTOR (32 downto 0);
    layer2_out_40_ap_vld : OUT STD_LOGIC;
    layer2_out_41 : OUT STD_LOGIC_VECTOR (32 downto 0);
    layer2_out_41_ap_vld : OUT STD_LOGIC;
    layer2_out_42 : OUT STD_LOGIC_VECTOR (32 downto 0);
    layer2_out_42_ap_vld : OUT STD_LOGIC;
    layer2_out_43 : OUT STD_LOGIC_VECTOR (32 downto 0);
    layer2_out_43_ap_vld : OUT STD_LOGIC;
    layer2_out_44 : OUT STD_LOGIC_VECTOR (32 downto 0);
    layer2_out_44_ap_vld : OUT STD_LOGIC;
    layer2_out_45 : OUT STD_LOGIC_VECTOR (32 downto 0);
    layer2_out_45_ap_vld : OUT STD_LOGIC;
    layer2_out_46 : OUT STD_LOGIC_VECTOR (32 downto 0);
    layer2_out_46_ap_vld : OUT STD_LOGIC;
    layer2_out_47 : OUT STD_LOGIC_VECTOR (32 downto 0);
    layer2_out_47_ap_vld : OUT STD_LOGIC;
    layer2_out_48 : OUT STD_LOGIC_VECTOR (32 downto 0);
    layer2_out_48_ap_vld : OUT STD_LOGIC;
    layer2_out_49 : OUT STD_LOGIC_VECTOR (32 downto 0);
    layer2_out_49_ap_vld : OUT STD_LOGIC;
    layer2_out_50 : OUT STD_LOGIC_VECTOR (32 downto 0);
    layer2_out_50_ap_vld : OUT STD_LOGIC;
    layer2_out_51 : OUT STD_LOGIC_VECTOR (32 downto 0);
    layer2_out_51_ap_vld : OUT STD_LOGIC;
    layer2_out_52 : OUT STD_LOGIC_VECTOR (32 downto 0);
    layer2_out_52_ap_vld : OUT STD_LOGIC;
    layer2_out_53 : OUT STD_LOGIC_VECTOR (32 downto 0);
    layer2_out_53_ap_vld : OUT STD_LOGIC;
    layer2_out_54 : OUT STD_LOGIC_VECTOR (32 downto 0);
    layer2_out_54_ap_vld : OUT STD_LOGIC;
    layer2_out_55 : OUT STD_LOGIC_VECTOR (32 downto 0);
    layer2_out_55_ap_vld : OUT STD_LOGIC;
    layer2_out_56 : OUT STD_LOGIC_VECTOR (32 downto 0);
    layer2_out_56_ap_vld : OUT STD_LOGIC;
    layer2_out_57 : OUT STD_LOGIC_VECTOR (32 downto 0);
    layer2_out_57_ap_vld : OUT STD_LOGIC;
    layer2_out_58 : OUT STD_LOGIC_VECTOR (32 downto 0);
    layer2_out_58_ap_vld : OUT STD_LOGIC;
    layer2_out_59 : OUT STD_LOGIC_VECTOR (32 downto 0);
    layer2_out_59_ap_vld : OUT STD_LOGIC;
    layer2_out_60 : OUT STD_LOGIC_VECTOR (32 downto 0);
    layer2_out_60_ap_vld : OUT STD_LOGIC;
    layer2_out_61 : OUT STD_LOGIC_VECTOR (32 downto 0);
    layer2_out_61_ap_vld : OUT STD_LOGIC;
    layer2_out_62 : OUT STD_LOGIC_VECTOR (32 downto 0);
    layer2_out_62_ap_vld : OUT STD_LOGIC;
    layer2_out_63 : OUT STD_LOGIC_VECTOR (32 downto 0);
    layer2_out_63_ap_vld : OUT STD_LOGIC;
    layer2_out_64 : OUT STD_LOGIC_VECTOR (32 downto 0);
    layer2_out_64_ap_vld : OUT STD_LOGIC;
    layer2_out_65 : OUT STD_LOGIC_VECTOR (32 downto 0);
    layer2_out_65_ap_vld : OUT STD_LOGIC;
    layer2_out_66 : OUT STD_LOGIC_VECTOR (32 downto 0);
    layer2_out_66_ap_vld : OUT STD_LOGIC;
    layer2_out_67 : OUT STD_LOGIC_VECTOR (32 downto 0);
    layer2_out_67_ap_vld : OUT STD_LOGIC;
    layer2_out_68 : OUT STD_LOGIC_VECTOR (32 downto 0);
    layer2_out_68_ap_vld : OUT STD_LOGIC;
    layer2_out_69 : OUT STD_LOGIC_VECTOR (32 downto 0);
    layer2_out_69_ap_vld : OUT STD_LOGIC;
    layer2_out_70 : OUT STD_LOGIC_VECTOR (32 downto 0);
    layer2_out_70_ap_vld : OUT STD_LOGIC;
    layer2_out_71 : OUT STD_LOGIC_VECTOR (32 downto 0);
    layer2_out_71_ap_vld : OUT STD_LOGIC;
    layer2_out_72 : OUT STD_LOGIC_VECTOR (32 downto 0);
    layer2_out_72_ap_vld : OUT STD_LOGIC;
    layer2_out_73 : OUT STD_LOGIC_VECTOR (32 downto 0);
    layer2_out_73_ap_vld : OUT STD_LOGIC;
    layer2_out_74 : OUT STD_LOGIC_VECTOR (32 downto 0);
    layer2_out_74_ap_vld : OUT STD_LOGIC;
    layer2_out_75 : OUT STD_LOGIC_VECTOR (32 downto 0);
    layer2_out_75_ap_vld : OUT STD_LOGIC;
    layer2_out_76 : OUT STD_LOGIC_VECTOR (32 downto 0);
    layer2_out_76_ap_vld : OUT STD_LOGIC;
    layer2_out_77 : OUT STD_LOGIC_VECTOR (32 downto 0);
    layer2_out_77_ap_vld : OUT STD_LOGIC;
    layer2_out_78 : OUT STD_LOGIC_VECTOR (32 downto 0);
    layer2_out_78_ap_vld : OUT STD_LOGIC;
    layer2_out_79 : OUT STD_LOGIC_VECTOR (32 downto 0);
    layer2_out_79_ap_vld : OUT STD_LOGIC );
end;


architecture behav of myproject is 
    attribute CORE_GENERATION_INFO : STRING;
    attribute CORE_GENERATION_INFO of behav : architecture is
    "myproject_myproject,hls_ip_2023_2,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xcvu13p-flga2577-2-e,HLS_INPUT_CLOCK=5.000000,HLS_INPUT_ARCH=pipeline,HLS_SYN_CLOCK=4.252000,HLS_SYN_LAT=8,HLS_SYN_TPT=1,HLS_SYN_MEM=20,HLS_SYN_DSP=0,HLS_SYN_FF=13519,HLS_SYN_LUT=35204,HLS_VERSION=2023_2}";
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_pp0_stage0 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_boolean_0 : BOOLEAN := false;
    constant ap_const_lv1280_lc_1 : STD_LOGIC_VECTOR (1279 downto

    signal ap_CS_fsm : STD_LOGIC_VECTOR (0 downto 0) := "1";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_pp0_stage0 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage0 : signal is "none";
    signal ap_enable_reg_pp0_iter0 : STD_LOGIC;
    signal ap_enable_reg_pp0_iter1 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter2 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter3 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter4 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter5 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter6 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter7 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter8 : STD_LOGIC := '0';
    signal ap_idle_pp0 : STD_LOGIC;
    signal layer_normalization_input_ap_vld_in_sig : STD_LOGIC;
    signal ap_block_state1_pp0_stage0_iter0 : BOOLEAN;
    signal ap_block_pp0_stage0_subdone : BOOLEAN;
    signal layer_normalization_input_preg : STD_LOGIC_VECTOR (1279 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    signal layer_normalization_input_in_sig : STD_LOGIC_VECTOR (1279 downto 0);
    signal layer_normalization_input_ap_vld_preg : STD_LOGIC := '0';
    signal layer_normalization_input_blk_n : STD_LOGIC;
    signal ap_block_pp0_stage0 : BOOLEAN;
    signal grp_layernormalize_ap_fixed_16_6_5_3_0_ap_fixed_33_13_5_3_0_config2_s_fu_754_ap_start : STD_LOGIC;
    signal grp_layernormalize_ap_fixed_16_6_5_3_0_ap_fixed_33_13_5_3_0_config2_s_fu_754_ap_done : STD_LOGIC;
    signal grp_layernormalize_ap_fixed_16_6_5_3_0_ap_fixed_33_13_5_3_0_config2_s_fu_754_ap_idle : STD_LOGIC;
    signal grp_layernormalize_ap_fixed_16_6_5_3_0_ap_fixed_33_13_5_3_0_config2_s_fu_754_ap_ready : STD_LOGIC;
    signal grp_layernormalize_ap_fixed_16_6_5_3_0_ap_fixed_33_13_5_3_0_config2_s_fu_754_ap_ce : STD_LOGIC;
    signal grp_layernormalize_ap_fixed_16_6_5_3_0_ap_fixed_33_13_5_3_0_config2_s_fu_754_ap_return_0 : STD_LOGIC_VECTOR (32 downto 0);
    signal grp_layernormalize_ap_fixed_16_6_5_3_0_ap_fixed_33_13_5_3_0_config2_s_fu_754_ap_return_1 : STD_LOGIC_VECTOR (32 downto 0);
    signal grp_layernormalize_ap_fixed_16_6_5_3_0_ap_fixed_33_13_5_3_0_config2_s_fu_754_ap_return_2 : STD_LOGIC_VECTOR (32 downto 0);
    signal grp_layernormalize_ap_fixed_16_6_5_3_0_ap_fixed_33_13_5_3_0_config2_s_fu_754_ap_return_3 : STD_LOGIC_VECTOR (32 downto 0);
    signal grp_layernormalize_ap_fixed_16_6_5_3_0_ap_fixed_33_13_5_3_0_config2_s_fu_754_ap_return_4 : STD_LOGIC_VECTOR (32 downto 0);
    signal grp_layernormalize_ap_fixed_16_6_5_3_0_ap_fixed_33_13_5_3_0_config2_s_fu_754_ap_return_5 : STD_LOGIC_VECTOR (32 downto 0);
    signal grp_layernormalize_ap_fixed_16_6_5_3_0_ap_fixed_33_13_5_3_0_config2_s_fu_754_ap_return_6 : STD_LOGIC_VECTOR (32 downto 0);
    signal grp_layernormalize_ap_fixed_16_6_5_3_0_ap_fixed_33_13_5_3_0_config2_s_fu_754_ap_return_7 : STD_LOGIC_VECTOR (32 downto 0);
    signal grp_layernormalize_ap_fixed_16_6_5_3_0_ap_fixed_33_13_5_3_0_config2_s_fu_754_ap_return_8 : STD_LOGIC_VECTOR (32 downto 0);
    signal grp_layernormalize_ap_fixed_16_6_5_3_0_ap_fixed_33_13_5_3_0_config2_s_fu_754_ap_return_9 : STD_LOGIC_VECTOR (32 downto 0);
    signal grp_layernormalize_ap_fixed_16_6_5_3_0_ap_fixed_33_13_5_3_0_config2_s_fu_754_ap_return_10 : STD_LOGIC_VECTOR (32 downto 0);
    signal grp_layernormalize_ap_fixed_16_6_5_3_0_ap_fixed_33_13_5_3_0_config2_s_fu_754_ap_return_11 : STD_LOGIC_VECTOR (32 downto 0);
    signal grp_layernormalize_ap_fixed_16_6_5_3_0_ap_fixed_33_13_5_3_0_config2_s_fu_754_ap_return_12 : STD_LOGIC_VECTOR (32 downto 0);
    signal grp_layernormalize_ap_fixed_16_6_5_3_0_ap_fixed_33_13_5_3_0_config2_s_fu_754_ap_return_13 : STD_LOGIC_VECTOR (32 downto 0);
    signal grp_layernormalize_ap_fixed_16_6_5_3_0_ap_fixed_33_13_5_3_0_config2_s_fu_754_ap_return_14 : STD_LOGIC_VECTOR (32 downto 0);
    signal grp_layernormalize_ap_fixed_16_6_5_3_0_ap_fixed_33_13_5_3_0_config2_s_fu_754_ap_return_15 : STD_LOGIC_VECTOR (32 downto 0);
    signal grp_layernormalize_ap_fixed_16_6_5_3_0_ap_fixed_33_13_5_3_0_config2_s_fu_754_ap_return_16 : STD_LOGIC_VECTOR (32 downto 0);
    signal grp_layernormalize_ap_fixed_16_6_5_3_0_ap_fixed_33_13_5_3_0_config2_s_fu_754_ap_return_17 : STD_LOGIC_VECTOR (32 downto 0);
    signal grp_layernormalize_ap_fixed_16_6_5_3_0_ap_fixed_33_13_5_3_0_config2_s_fu_754_ap_return_18 : STD_LOGIC_VECTOR (32 downto 0);
    signal grp_layernormalize_ap_fixed_16_6_5_3_0_ap_fixed_33_13_5_3_0_config2_s_fu_754_ap_return_19 : STD_LOGIC_VECTOR (32 downto 0);
    signal grp_layernormalize_ap_fixed_16_6_5_3_0_ap_fixed_33_13_5_3_0_config2_s_fu_754_ap_return_20 : STD_LOGIC_VECTOR (32 downto 0);
    signal grp_layernormalize_ap_fixed_16_6_5_3_0_ap_fixed_33_13_5_3_0_config2_s_fu_754_ap_return_21 : STD_LOGIC_VECTOR (32 downto 0);
    signal grp_layernormalize_ap_fixed_16_6_5_3_0_ap_fixed_33_13_5_3_0_config2_s_fu_754_ap_return_22 : STD_LOGIC_VECTOR (32 downto 0);
    signal grp_layernormalize_ap_fixed_16_6_5_3_0_ap_fixed_33_13_5_3_0_config2_s_fu_754_ap_return_23 : STD_LOGIC_VECTOR (32 downto 0);
    signal grp_layernormalize_ap_fixed_16_6_5_3_0_ap_fixed_33_13_5_3_0_config2_s_fu_754_ap_return_24 : STD_LOGIC_VECTOR (32 downto 0);
    signal grp_layernormalize_ap_fixed_16_6_5_3_0_ap_fixed_33_13_5_3_0_config2_s_fu_754_ap_return_25 : STD_LOGIC_VECTOR (32 downto 0);
    signal grp_layernormalize_ap_fixed_16_6_5_3_0_ap_fixed_33_13_5_3_0_config2_s_fu_754_ap_return_26 : STD_LOGIC_VECTOR (32 downto 0);
    signal grp_layernormalize_ap_fixed_16_6_5_3_0_ap_fixed_33_13_5_3_0_config2_s_fu_754_ap_return_27 : STD_LOGIC_VECTOR (32 downto 0);
    signal grp_layernormalize_ap_fixed_16_6_5_3_0_ap_fixed_33_13_5_3_0_config2_s_fu_754_ap_return_28 : STD_LOGIC_VECTOR (32 downto 0);
    signal grp_layernormalize_ap_fixed_16_6_5_3_0_ap_fixed_33_13_5_3_0_config2_s_fu_754_ap_return_29 : STD_LOGIC_VECTOR (32 downto 0);
    signal grp_layernormalize_ap_fixed_16_6_5_3_0_ap_fixed_33_13_5_3_0_config2_s_fu_754_ap_return_30 : STD_LOGIC_VECTOR (32 downto 0);
    signal grp_layernormalize_ap_fixed_16_6_5_3_0_ap_fixed_33_13_5_3_0_config2_s_fu_754_ap_return_31 : STD_LOGIC_VECTOR (32 downto 0);
    signal grp_layernormalize_ap_fixed_16_6_5_3_0_ap_fixed_33_13_5_3_0_config2_s_fu_754_ap_return_32 : STD_LOGIC_VECTOR (32 downto 0);
    signal grp_layernormalize_ap_fixed_16_6_5_3_0_ap_fixed_33_13_5_3_0_config2_s_fu_754_ap_return_33 : STD_LOGIC_VECTOR (32 downto 0);
    signal grp_layernormalize_ap_fixed_16_6_5_3_0_ap_fixed_33_13_5_3_0_config2_s_fu_754_ap_return_34 : STD_LOGIC_VECTOR (32 downto 0);
    signal grp_layernormalize_ap_fixed_16_6_5_3_0_ap_fixed_33_13_5_3_0_config2_s_fu_754_ap_return_35 : STD_LOGIC_VECTOR (32 downto 0);
    signal grp_layernormalize_ap_fixed_16_6_5_3_0_ap_fixed_33_13_5_3_0_config2_s_fu_754_ap_return_36 : STD_LOGIC_VECTOR (32 downto 0);
    signal grp_layernormalize_ap_fixed_16_6_5_3_0_ap_fixed_33_13_5_3_0_config2_s_fu_754_ap_return_37 : STD_LOGIC_VECTOR (32 downto 0);
    signal grp_layernormalize_ap_fixed_16_6_5_3_0_ap_fixed_33_13_5_3_0_config2_s_fu_754_ap_return_38 : STD_LOGIC_VECTOR (32 downto 0);
    signal grp_layernormalize_ap_fixed_16_6_5_3_0_ap_fixed_33_13_5_3_0_config2_s_fu_754_ap_return_39 : STD_LOGIC_VECTOR (32 downto 0);
    signal grp_layernormalize_ap_fixed_16_6_5_3_0_ap_fixed_33_13_5_3_0_config2_s_fu_754_ap_return_40 : STD_LOGIC_VECTOR (32 downto 0);
    signal grp_layernormalize_ap_fixed_16_6_5_3_0_ap_fixed_33_13_5_3_0_config2_s_fu_754_ap_return_41 : STD_LOGIC_VECTOR (32 downto 0);
    signal grp_layernormalize_ap_fixed_16_6_5_3_0_ap_fixed_33_13_5_3_0_config2_s_fu_754_ap_return_42 : STD_LOGIC_VECTOR (32 downto 0);
    signal grp_layernormalize_ap_fixed_16_6_5_3_0_ap_fixed_33_13_5_3_0_config2_s_fu_754_ap_return_43 : STD_LOGIC_VECTOR (32 downto 0);
    signal grp_layernormalize_ap_fixed_16_6_5_3_0_ap_fixed_33_13_5_3_0_config2_s_fu_754_ap_return_44 : STD_LOGIC_VECTOR (32 downto 0);
    signal grp_layernormalize_ap_fixed_16_6_5_3_0_ap_fixed_33_13_5_3_0_config2_s_fu_754_ap_return_45 : STD_LOGIC_VECTOR (32 downto 0);
    signal grp_layernormalize_ap_fixed_16_6_5_3_0_ap_fixed_33_13_5_3_0_config2_s_fu_754_ap_return_46 : STD_LOGIC_VECTOR (32 downto 0);
    signal grp_layernormalize_ap_fixed_16_6_5_3_0_ap_fixed_33_13_5_3_0_config2_s_fu_754_ap_return_47 : STD_LOGIC_VECTOR (32 downto 0);
    signal grp_layernormalize_ap_fixed_16_6_5_3_0_ap_fixed_33_13_5_3_0_config2_s_fu_754_ap_return_48 : STD_LOGIC_VECTOR (32 downto 0);
    signal grp_layernormalize_ap_fixed_16_6_5_3_0_ap_fixed_33_13_5_3_0_config2_s_fu_754_ap_return_49 : STD_LOGIC_VECTOR (32 downto 0);
    signal grp_layernormalize_ap_fixed_16_6_5_3_0_ap_fixed_33_13_5_3_0_config2_s_fu_754_ap_return_50 : STD_LOGIC_VECTOR (32 downto 0);
    signal grp_layernormalize_ap_fixed_16_6_5_3_0_ap_fixed_33_13_5_3_0_config2_s_fu_754_ap_return_51 : STD_LOGIC_VECTOR (32 downto 0);
    signal grp_layernormalize_ap_fixed_16_6_5_3_0_ap_fixed_33_13_5_3_0_config2_s_fu_754_ap_return_52 : STD_LOGIC_VECTOR (32 downto 0);
    signal grp_layernormalize_ap_fixed_16_6_5_3_0_ap_fixed_33_13_5_3_0_config2_s_fu_754_ap_return_53 : STD_LOGIC_VECTOR (32 downto 0);
    signal grp_layernormalize_ap_fixed_16_6_5_3_0_ap_fixed_33_13_5_3_0_config2_s_fu_754_ap_return_54 : STD_LOGIC_VECTOR (32 downto 0);
    signal grp_layernormalize_ap_fixed_16_6_5_3_0_ap_fixed_33_13_5_3_0_config2_s_fu_754_ap_return_55 : STD_LOGIC_VECTOR (32 downto 0);
    signal grp_layernormalize_ap_fixed_16_6_5_3_0_ap_fixed_33_13_5_3_0_config2_s_fu_754_ap_return_56 : STD_LOGIC_VECTOR (32 downto 0);
    signal grp_layernormalize_ap_fixed_16_6_5_3_0_ap_fixed_33_13_5_3_0_config2_s_fu_754_ap_return_57 : STD_LOGIC_VECTOR (32 downto 0);
    signal grp_layernormalize_ap_fixed_16_6_5_3_0_ap_fixed_33_13_5_3_0_config2_s_fu_754_ap_return_58 : STD_LOGIC_VECTOR (32 downto 0);
    signal grp_layernormalize_ap_fixed_16_6_5_3_0_ap_fixed_33_13_5_3_0_config2_s_fu_754_ap_return_59 : STD_LOGIC_VECTOR (32 downto 0);
    signal grp_layernormalize_ap_fixed_16_6_5_3_0_ap_fixed_33_13_5_3_0_config2_s_fu_754_ap_return_60 : STD_LOGIC_VECTOR (32 downto 0);
    signal grp_layernormalize_ap_fixed_16_6_5_3_0_ap_fixed_33_13_5_3_0_config2_s_fu_754_ap_return_61 : STD_LOGIC_VECTOR (32 downto 0);
    signal grp_layernormalize_ap_fixed_16_6_5_3_0_ap_fixed_33_13_5_3_0_config2_s_fu_754_ap_return_62 : STD_LOGIC_VECTOR (32 downto 0);
    signal grp_layernormalize_ap_fixed_16_6_5_3_0_ap_fixed_33_13_5_3_0_config2_s_fu_754_ap_return_63 : STD_LOGIC_VECTOR (32 downto 0);
    signal grp_layernormalize_ap_fixed_16_6_5_3_0_ap_fixed_33_13_5_3_0_config2_s_fu_754_ap_return_64 : STD_LOGIC_VECTOR (32 downto 0);
    signal grp_layernormalize_ap_fixed_16_6_5_3_0_ap_fixed_33_13_5_3_0_config2_s_fu_754_ap_return_65 : STD_LOGIC_VECTOR (32 downto 0);
    signal grp_layernormalize_ap_fixed_16_6_5_3_0_ap_fixed_33_13_5_3_0_config2_s_fu_754_ap_return_66 : STD_LOGIC_VECTOR (32 downto 0);
    signal grp_layernormalize_ap_fixed_16_6_5_3_0_ap_fixed_33_13_5_3_0_config2_s_fu_754_ap_return_67 : STD_LOGIC_VECTOR (32 downto 0);
    signal grp_layernormalize_ap_fixed_16_6_5_3_0_ap_fixed_33_13_5_3_0_config2_s_fu_754_ap_return_68 : STD_LOGIC_VECTOR (32 downto 0);
    signal grp_layernormalize_ap_fixed_16_6_5_3_0_ap_fixed_33_13_5_3_0_config2_s_fu_754_ap_return_69 : STD_LOGIC_VECTOR (32 downto 0);
    signal grp_layernormalize_ap_fixed_16_6_5_3_0_ap_fixed_33_13_5_3_0_config2_s_fu_754_ap_return_70 : STD_LOGIC_VECTOR (32 downto 0);
    signal grp_layernormalize_ap_fixed_16_6_5_3_0_ap_fixed_33_13_5_3_0_config2_s_fu_754_ap_return_71 : STD_LOGIC_VECTOR (32 downto 0);
    signal grp_layernormalize_ap_fixed_16_6_5_3_0_ap_fixed_33_13_5_3_0_config2_s_fu_754_ap_return_72 : STD_LOGIC_VECTOR (32 downto 0);
    signal grp_layernormalize_ap_fixed_16_6_5_3_0_ap_fixed_33_13_5_3_0_config2_s_fu_754_ap_return_73 : STD_LOGIC_VECTOR (32 downto 0);
    signal grp_layernormalize_ap_fixed_16_6_5_3_0_ap_fixed_33_13_5_3_0_config2_s_fu_754_ap_return_74 : STD_LOGIC_VECTOR (32 downto 0);
    signal grp_layernormalize_ap_fixed_16_6_5_3_0_ap_fixed_33_13_5_3_0_config2_s_fu_754_ap_return_75 : STD_LOGIC_VECTOR (32 downto 0);
    signal grp_layernormalize_ap_fixed_16_6_5_3_0_ap_fixed_33_13_5_3_0_config2_s_fu_754_ap_return_76 : STD_LOGIC_VECTOR (32 downto 0);
    signal grp_layernormalize_ap_fixed_16_6_5_3_0_ap_fixed_33_13_5_3_0_config2_s_fu_754_ap_return_77 : STD_LOGIC_VECTOR (32 downto 0);
    signal grp_layernormalize_ap_fixed_16_6_5_3_0_ap_fixed_33_13_5_3_0_config2_s_fu_754_ap_return_78 : STD_LOGIC_VECTOR (32 downto 0);
    signal grp_layernormalize_ap_fixed_16_6_5_3_0_ap_fixed_33_13_5_3_0_config2_s_fu_754_ap_return_79 : STD_LOGIC_VECTOR (32 downto 0);
    signal ap_block_state1_pp0_stage0_iter0_ignore_call165 : BOOLEAN;
    signal ap_block_pp0_stage0_11001_ignoreCallOp11 : BOOLEAN;
    signal ap_block_pp0_stage0_11001 : BOOLEAN;
    signal ap_block_pp0_stage0_01001 : BOOLEAN;
    signal ap_NS_fsm : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_idle_pp0_0to7 : STD_LOGIC;
    signal ap_reset_idle_pp0 : STD_LOGIC;
    signal ap_enable_pp0 : STD_LOGIC;
    signal ap_ce_reg : STD_LOGIC;

    component myproject_layernormalize_ap_fixed_16_6_5_3_0_ap_fixed_33_13_5_3_0_config2_s IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        ap_ce : IN STD_LOGIC;
        data_val : IN STD_LOGIC_VECTOR (1279 downto 0);
        ap_return_0 : OUT STD_LOGIC_VECTOR (32 downto 0);
        ap_return_1 : OUT STD_LOGIC_VECTOR (32 downto 0);
        ap_return_2 : OUT STD_LOGIC_VECTOR (32 downto 0);
        ap_return_3 : OUT STD_LOGIC_VECTOR (32 downto 0);
        ap_return_4 : OUT STD_LOGIC_VECTOR (32 downto 0);
        ap_return_5 : OUT STD_LOGIC_VECTOR (32 downto 0);
        ap_return_6 : OUT STD_LOGIC_VECTOR (32 downto 0);
        ap_return_7 : OUT STD_LOGIC_VECTOR (32 downto 0);
        ap_return_8 : OUT STD_LOGIC_VECTOR (32 downto 0);
        ap_return_9 : OUT STD_LOGIC_VECTOR (32 downto 0);
        ap_return_10 : OUT STD_LOGIC_VECTOR (32 downto 0);
        ap_return_11 : OUT STD_LOGIC_VECTOR (32 downto 0);
        ap_return_12 : OUT STD_LOGIC_VECTOR (32 downto 0);
        ap_return_13 : OUT STD_LOGIC_VECTOR (32 downto 0);
        ap_return_14 : OUT STD_LOGIC_VECTOR (32 downto 0);
        ap_return_15 : OUT STD_LOGIC_VECTOR (32 downto 0);
        ap_return_16 : OUT STD_LOGIC_VECTOR (32 downto 0);
        ap_return_17 : OUT STD_LOGIC_VECTOR (32 downto 0);
        ap_return_18 : OUT STD_LOGIC_VECTOR (32 downto 0);
        ap_return_19 : OUT STD_LOGIC_VECTOR (32 downto 0);
        ap_return_20 : OUT STD_LOGIC_VECTOR (32 downto 0);
        ap_return_21 : OUT STD_LOGIC_VECTOR (32 downto 0);
        ap_return_22 : OUT STD_LOGIC_VECTOR (32 downto 0);
        ap_return_23 : OUT STD_LOGIC_VECTOR (32 downto 0);
        ap_return_24 : OUT STD_LOGIC_VECTOR (32 downto 0);
        ap_return_25 : OUT STD_LOGIC_VECTOR (32 downto 0);
        ap_return_26 : OUT STD_LOGIC_VECTOR (32 downto 0);
        ap_return_27 : OUT STD_LOGIC_VECTOR (32 downto 0);
        ap_return_28 : OUT STD_LOGIC_VECTOR (32 downto 0);
        ap_return_29 : OUT STD_LOGIC_VECTOR (32 downto 0);
        ap_return_30 : OUT STD_LOGIC_VECTOR (32 downto 0);
        ap_return_31 : OUT STD_LOGIC_VECTOR (32 downto 0);
        ap_return_32 : OUT STD_LOGIC_VECTOR (32 downto 0);
        ap_return_33 : OUT STD_LOGIC_VECTOR (32 downto 0);
        ap_return_34 : OUT STD_LOGIC_VECTOR (32 downto 0);
        ap_return_35 : OUT STD_LOGIC_VECTOR (32 downto 0);
        ap_return_36 : OUT STD_LOGIC_VECTOR (32 downto 0);
        ap_return_37 : OUT STD_LOGIC_VECTOR (32 downto 0);
        ap_return_38 : OUT STD_LOGIC_VECTOR (32 downto 0);
        ap_return_39 : OUT STD_LOGIC_VECTOR (32 downto 0);
        ap_return_40 : OUT STD_LOGIC_VECTOR (32 downto 0);
        ap_return_41 : OUT STD_LOGIC_VECTOR (32 downto 0);
        ap_return_42 : OUT STD_LOGIC_VECTOR (32 downto 0);
        ap_return_43 : OUT STD_LOGIC_VECTOR (32 downto 0);
        ap_return_44 : OUT STD_LOGIC_VECTOR (32 downto 0);
        ap_return_45 : OUT STD_LOGIC_VECTOR (32 downto 0);
        ap_return_46 : OUT STD_LOGIC_VECTOR (32 downto 0);
        ap_return_47 : OUT STD_LOGIC_VECTOR (32 downto 0);
        ap_return_48 : OUT STD_LOGIC_VECTOR (32 downto 0);
        ap_return_49 : OUT STD_LOGIC_VECTOR (32 downto 0);
        ap_return_50 : OUT STD_LOGIC_VECTOR (32 downto 0);
        ap_return_51 : OUT STD_LOGIC_VECTOR (32 downto 0);
        ap_return_52 : OUT STD_LOGIC_VECTOR (32 downto 0);
        ap_return_53 : OUT STD_LOGIC_VECTOR (32 downto 0);
        ap_return_54 : OUT STD_LOGIC_VECTOR (32 downto 0);
        ap_return_55 : OUT STD_LOGIC_VECTOR (32 downto 0);
        ap_return_56 : OUT STD_LOGIC_VECTOR (32 downto 0);
        ap_return_57 : OUT STD_LOGIC_VECTOR (32 downto 0);
        ap_return_58 : OUT STD_LOGIC_VECTOR (32 downto 0);
        ap_return_59 : OUT STD_LOGIC_VECTOR (32 downto 0);
        ap_return_60 : OUT STD_LOGIC_VECTOR (32 downto 0);
        ap_return_61 : OUT STD_LOGIC_VECTOR (32 downto 0);
        ap_return_62 : OUT STD_LOGIC_VECTOR (32 downto 0);
        ap_return_63 : OUT STD_LOGIC_VECTOR (32 downto 0);
        ap_return_64 : OUT STD_LOGIC_VECTOR (32 downto 0);
        ap_return_65 : OUT STD_LOGIC_VECTOR (32 downto 0);
        ap_return_66 : OUT STD_LOGIC_VECTOR (32 downto 0);
        ap_return_67 : OUT STD_LOGIC_VECTOR (32 downto 0);
        ap_return_68 : OUT STD_LOGIC_VECTOR (32 downto 0);
        ap_return_69 : OUT STD_LOGIC_VECTOR (32 downto 0);
        ap_return_70 : OUT STD_LOGIC_VECTOR (32 downto 0);
        ap_return_71 : OUT STD_LOGIC_VECTOR (32 downto 0);
        ap_return_72 : OUT STD_LOGIC_VECTOR (32 downto 0);
        ap_return_73 : OUT STD_LOGIC_VECTOR (32 downto 0);
        ap_return_74 : OUT STD_LOGIC_VECTOR (32 downto 0);
        ap_return_75 : OUT STD_LOGIC_VECTOR (32 downto 0);
        ap_return_76 : OUT STD_LOGIC_VECTOR (32 downto 0);
        ap_return_77 : OUT STD_LOGIC_VECTOR (32 downto 0);
        ap_return_78 : OUT STD_LOGIC_VECTOR (32 downto 0);
        ap_return_79 : OUT STD_LOGIC_VECTOR (32 downto 0) );
    end component;



begin
    grp_layernormalize_ap_fixed_16_6_5_3_0_ap_fixed_33_13_5_3_0_config2_s_fu_754 : component myproject_layernormalize_ap_fixed_16_6_5_3_0_ap_fixed_33_13_5_3_0_config2_s
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_layernormalize_ap_fixed_16_6_5_3_0_ap_fixed_33_13_5_3_0_config2_s_fu_754_ap_start,
        ap_done => grp_layernormalize_ap_fixed_16_6_5_3_0_ap_fixed_33_13_5_3_0_config2_s_fu_754_ap_done,
        ap_idle => grp_layernormalize_ap_fixed_16_6_5_3_0_ap_fixed_33_13_5_3_0_config2_s_fu_754_ap_idle,
        ap_ready => grp_layernormalize_ap_fixed_16_6_5_3_0_ap_fixed_33_13_5_3_0_config2_s_fu_754_ap_ready,
        ap_ce => grp_layernormalize_ap_fixed_16_6_5_3_0_ap_fixed_33_13_5_3_0_config2_s_fu_754_ap_ce,
        data_val => layer_normalization_input_in_sig,
        ap_return_0 => grp_layernormalize_ap_fixed_16_6_5_3_0_ap_fixed_33_13_5_3_0_config2_s_fu_754_ap_return_0,
        ap_return_1 => grp_layernormalize_ap_fixed_16_6_5_3_0_ap_fixed_33_13_5_3_0_config2_s_fu_754_ap_return_1,
        ap_return_2 => grp_layernormalize_ap_fixed_16_6_5_3_0_ap_fixed_33_13_5_3_0_config2_s_fu_754_ap_return_2,
        ap_return_3 => grp_layernormalize_ap_fixed_16_6_5_3_0_ap_fixed_33_13_5_3_0_config2_s_fu_754_ap_return_3,
        ap_return_4 => grp_layernormalize_ap_fixed_16_6_5_3_0_ap_fixed_33_13_5_3_0_config2_s_fu_754_ap_return_4,
        ap_return_5 => grp_layernormalize_ap_fixed_16_6_5_3_0_ap_fixed_33_13_5_3_0_config2_s_fu_754_ap_return_5,
        ap_return_6 => grp_layernormalize_ap_fixed_16_6_5_3_0_ap_fixed_33_13_5_3_0_config2_s_fu_754_ap_return_6,
        ap_return_7 => grp_layernormalize_ap_fixed_16_6_5_3_0_ap_fixed_33_13_5_3_0_config2_s_fu_754_ap_return_7,
        ap_return_8 => grp_layernormalize_ap_fixed_16_6_5_3_0_ap_fixed_33_13_5_3_0_config2_s_fu_754_ap_return_8,
        ap_return_9 => grp_layernormalize_ap_fixed_16_6_5_3_0_ap_fixed_33_13_5_3_0_config2_s_fu_754_ap_return_9,
        ap_return_10 => grp_layernormalize_ap_fixed_16_6_5_3_0_ap_fixed_33_13_5_3_0_config2_s_fu_754_ap_return_10,
        ap_return_11 => grp_layernormalize_ap_fixed_16_6_5_3_0_ap_fixed_33_13_5_3_0_config2_s_fu_754_ap_return_11,
        ap_return_12 => grp_layernormalize_ap_fixed_16_6_5_3_0_ap_fixed_33_13_5_3_0_config2_s_fu_754_ap_return_12,
        ap_return_13 => grp_layernormalize_ap_fixed_16_6_5_3_0_ap_fixed_33_13_5_3_0_config2_s_fu_754_ap_return_13,
        ap_return_14 => grp_layernormalize_ap_fixed_16_6_5_3_0_ap_fixed_33_13_5_3_0_config2_s_fu_754_ap_return_14,
        ap_return_15 => grp_layernormalize_ap_fixed_16_6_5_3_0_ap_fixed_33_13_5_3_0_config2_s_fu_754_ap_return_15,
        ap_return_16 => grp_layernormalize_ap_fixed_16_6_5_3_0_ap_fixed_33_13_5_3_0_config2_s_fu_754_ap_return_16,
        ap_return_17 => grp_layernormalize_ap_fixed_16_6_5_3_0_ap_fixed_33_13_5_3_0_config2_s_fu_754_ap_return_17,
        ap_return_18 => grp_layernormalize_ap_fixed_16_6_5_3_0_ap_fixed_33_13_5_3_0_config2_s_fu_754_ap_return_18,
        ap_return_19 => grp_layernormalize_ap_fixed_16_6_5_3_0_ap_fixed_33_13_5_3_0_config2_s_fu_754_ap_return_19,
        ap_return_20 => grp_layernormalize_ap_fixed_16_6_5_3_0_ap_fixed_33_13_5_3_0_config2_s_fu_754_ap_return_20,
        ap_return_21 => grp_layernormalize_ap_fixed_16_6_5_3_0_ap_fixed_33_13_5_3_0_config2_s_fu_754_ap_return_21,
        ap_return_22 => grp_layernormalize_ap_fixed_16_6_5_3_0_ap_fixed_33_13_5_3_0_config2_s_fu_754_ap_return_22,
        ap_return_23 => grp_layernormalize_ap_fixed_16_6_5_3_0_ap_fixed_33_13_5_3_0_config2_s_fu_754_ap_return_23,
        ap_return_24 => grp_layernormalize_ap_fixed_16_6_5_3_0_ap_fixed_33_13_5_3_0_config2_s_fu_754_ap_return_24,
        ap_return_25 => grp_layernormalize_ap_fixed_16_6_5_3_0_ap_fixed_33_13_5_3_0_config2_s_fu_754_ap_return_25,
        ap_return_26 => grp_layernormalize_ap_fixed_16_6_5_3_0_ap_fixed_33_13_5_3_0_config2_s_fu_754_ap_return_26,
        ap_return_27 => grp_layernormalize_ap_fixed_16_6_5_3_0_ap_fixed_33_13_5_3_0_config2_s_fu_754_ap_return_27,
        ap_return_28 => grp_layernormalize_ap_fixed_16_6_5_3_0_ap_fixed_33_13_5_3_0_config2_s_fu_754_ap_return_28,
        ap_return_29 => grp_layernormalize_ap_fixed_16_6_5_3_0_ap_fixed_33_13_5_3_0_config2_s_fu_754_ap_return_29,
        ap_return_30 => grp_layernormalize_ap_fixed_16_6_5_3_0_ap_fixed_33_13_5_3_0_config2_s_fu_754_ap_return_30,
        ap_return_31 => grp_layernormalize_ap_fixed_16_6_5_3_0_ap_fixed_33_13_5_3_0_config2_s_fu_754_ap_return_31,
        ap_return_32 => grp_layernormalize_ap_fixed_16_6_5_3_0_ap_fixed_33_13_5_3_0_config2_s_fu_754_ap_return_32,
        ap_return_33 => grp_layernormalize_ap_fixed_16_6_5_3_0_ap_fixed_33_13_5_3_0_config2_s_fu_754_ap_return_33,
        ap_return_34 => grp_layernormalize_ap_fixed_16_6_5_3_0_ap_fixed_33_13_5_3_0_config2_s_fu_754_ap_return_34,
        ap_return_35 => grp_layernormalize_ap_fixed_16_6_5_3_0_ap_fixed_33_13_5_3_0_config2_s_fu_754_ap_return_35,
        ap_return_36 => grp_layernormalize_ap_fixed_16_6_5_3_0_ap_fixed_33_13_5_3_0_config2_s_fu_754_ap_return_36,
        ap_return_37 => grp_layernormalize_ap_fixed_16_6_5_3_0_ap_fixed_33_13_5_3_0_config2_s_fu_754_ap_return_37,
        ap_return_38 => grp_layernormalize_ap_fixed_16_6_5_3_0_ap_fixed_33_13_5_3_0_config2_s_fu_754_ap_return_38,
        ap_return_39 => grp_layernormalize_ap_fixed_16_6_5_3_0_ap_fixed_33_13_5_3_0_config2_s_fu_754_ap_return_39,
        ap_return_40 => grp_layernormalize_ap_fixed_16_6_5_3_0_ap_fixed_33_13_5_3_0_config2_s_fu_754_ap_return_40,
        ap_return_41 => grp_layernormalize_ap_fixed_16_6_5_3_0_ap_fixed_33_13_5_3_0_config2_s_fu_754_ap_return_41,
        ap_return_42 => grp_layernormalize_ap_fixed_16_6_5_3_0_ap_fixed_33_13_5_3_0_config2_s_fu_754_ap_return_42,
        ap_return_43 => grp_layernormalize_ap_fixed_16_6_5_3_0_ap_fixed_33_13_5_3_0_config2_s_fu_754_ap_return_43,
        ap_return_44 => grp_layernormalize_ap_fixed_16_6_5_3_0_ap_fixed_33_13_5_3_0_config2_s_fu_754_ap_return_44,
        ap_return_45 => grp_layernormalize_ap_fixed_16_6_5_3_0_ap_fixed_33_13_5_3_0_config2_s_fu_754_ap_return_45,
        ap_return_46 => grp_layernormalize_ap_fixed_16_6_5_3_0_ap_fixed_33_13_5_3_0_config2_s_fu_754_ap_return_46,
        ap_return_47 => grp_layernormalize_ap_fixed_16_6_5_3_0_ap_fixed_33_13_5_3_0_config2_s_fu_754_ap_return_47,
        ap_return_48 => grp_layernormalize_ap_fixed_16_6_5_3_0_ap_fixed_33_13_5_3_0_config2_s_fu_754_ap_return_48,
        ap_return_49 => grp_layernormalize_ap_fixed_16_6_5_3_0_ap_fixed_33_13_5_3_0_config2_s_fu_754_ap_return_49,
        ap_return_50 => grp_layernormalize_ap_fixed_16_6_5_3_0_ap_fixed_33_13_5_3_0_config2_s_fu_754_ap_return_50,
        ap_return_51 => grp_layernormalize_ap_fixed_16_6_5_3_0_ap_fixed_33_13_5_3_0_config2_s_fu_754_ap_return_51,
        ap_return_52 => grp_layernormalize_ap_fixed_16_6_5_3_0_ap_fixed_33_13_5_3_0_config2_s_fu_754_ap_return_52,
        ap_return_53 => grp_layernormalize_ap_fixed_16_6_5_3_0_ap_fixed_33_13_5_3_0_config2_s_fu_754_ap_return_53,
        ap_return_54 => grp_layernormalize_ap_fixed_16_6_5_3_0_ap_fixed_33_13_5_3_0_config2_s_fu_754_ap_return_54,
        ap_return_55 => grp_layernormalize_ap_fixed_16_6_5_3_0_ap_fixed_33_13_5_3_0_config2_s_fu_754_ap_return_55,
        ap_return_56 => grp_layernormalize_ap_fixed_16_6_5_3_0_ap_fixed_33_13_5_3_0_config2_s_fu_754_ap_return_56,
        ap_return_57 => grp_layernormalize_ap_fixed_16_6_5_3_0_ap_fixed_33_13_5_3_0_config2_s_fu_754_ap_return_57,
        ap_return_58 => grp_layernormalize_ap_fixed_16_6_5_3_0_ap_fixed_33_13_5_3_0_config2_s_fu_754_ap_return_58,
        ap_return_59 => grp_layernormalize_ap_fixed_16_6_5_3_0_ap_fixed_33_13_5_3_0_config2_s_fu_754_ap_return_59,
        ap_return_60 => grp_layernormalize_ap_fixed_16_6_5_3_0_ap_fixed_33_13_5_3_0_config2_s_fu_754_ap_return_60,
        ap_return_61 => grp_layernormalize_ap_fixed_16_6_5_3_0_ap_fixed_33_13_5_3_0_config2_s_fu_754_ap_return_61,
        ap_return_62 => grp_layernormalize_ap_fixed_16_6_5_3_0_ap_fixed_33_13_5_3_0_config2_s_fu_754_ap_return_62,
        ap_return_63 => grp_layernormalize_ap_fixed_16_6_5_3_0_ap_fixed_33_13_5_3_0_config2_s_fu_754_ap_return_63,
        ap_return_64 => grp_layernormalize_ap_fixed_16_6_5_3_0_ap_fixed_33_13_5_3_0_config2_s_fu_754_ap_return_64,
        ap_return_65 => grp_layernormalize_ap_fixed_16_6_5_3_0_ap_fixed_33_13_5_3_0_config2_s_fu_754_ap_return_65,
        ap_return_66 => grp_layernormalize_ap_fixed_16_6_5_3_0_ap_fixed_33_13_5_3_0_config2_s_fu_754_ap_return_66,
        ap_return_67 => grp_layernormalize_ap_fixed_16_6_5_3_0_ap_fixed_33_13_5_3_0_config2_s_fu_754_ap_return_67,
        ap_return_68 => grp_layernormalize_ap_fixed_16_6_5_3_0_ap_fixed_33_13_5_3_0_config2_s_fu_754_ap_return_68,
        ap_return_69 => grp_layernormalize_ap_fixed_16_6_5_3_0_ap_fixed_33_13_5_3_0_config2_s_fu_754_ap_return_69,
        ap_return_70 => grp_layernormalize_ap_fixed_16_6_5_3_0_ap_fixed_33_13_5_3_0_config2_s_fu_754_ap_return_70,
        ap_return_71 => grp_layernormalize_ap_fixed_16_6_5_3_0_ap_fixed_33_13_5_3_0_config2_s_fu_754_ap_return_71,
        ap_return_72 => grp_layernormalize_ap_fixed_16_6_5_3_0_ap_fixed_33_13_5_3_0_config2_s_fu_754_ap_return_72,
        ap_return_73 => grp_layernormalize_ap_fixed_16_6_5_3_0_ap_fixed_33_13_5_3_0_config2_s_fu_754_ap_return_73,
        ap_return_74 => grp_layernormalize_ap_fixed_16_6_5_3_0_ap_fixed_33_13_5_3_0_config2_s_fu_754_ap_return_74,
        ap_return_75 => grp_layernormalize_ap_fixed_16_6_5_3_0_ap_fixed_33_13_5_3_0_config2_s_fu_754_ap_return_75,
        ap_return_76 => grp_layernormalize_ap_fixed_16_6_5_3_0_ap_fixed_33_13_5_3_0_config2_s_fu_754_ap_return_76,
        ap_return_77 => grp_layernormalize_ap_fixed_16_6_5_3_0_ap_fixed_33_13_5_3_0_config2_s_fu_754_ap_return_77,
        ap_return_78 => grp_layernormalize_ap_fixed_16_6_5_3_0_ap_fixed_33_13_5_3_0_config2_s_fu_754_ap_return_78,
        ap_return_79 => grp_layernormalize_ap_fixed_16_6_5_3_0_ap_fixed_33_13_5_3_0_config2_s_fu_754_ap_return_79);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                    ap_enable_reg_pp0_iter1 <= ap_start;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter2_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter2 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter3_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter3 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter4_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter4 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter4 <= ap_enable_reg_pp0_iter3;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter5_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter5 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter5 <= ap_enable_reg_pp0_iter4;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter6_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter6 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter6 <= ap_enable_reg_pp0_iter5;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter7_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter7 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter7 <= ap_enable_reg_pp0_iter6;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter8_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter8 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter8 <= ap_enable_reg_pp0_iter7;
                end if; 
            end if;
        end if;
    end process;


    layer_normalization_input_ap_vld_preg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                layer_normalization_input_ap_vld_preg <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                    layer_normalization_input_ap_vld_preg <= ap_const_logic_0;
                elsif ((not(((ap_start = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) and (layer_normalization_input_ap_vld = ap_const_logic_1))) then 
                    layer_normalization_input_ap_vld_preg <= layer_normalization_input_ap_vld;
                end if; 
            end if;
        end if;
    end process;


    layer_normalization_input_preg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                layer_normalization_input_preg <= ap_const_lv1280_lc_1;
            else
                if ((not(((ap_start = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) and (layer_normalization_input_ap_vld = ap_const_logic_1))) then 
                    layer_normalization_input_preg <= layer_normalization_input;
                end if; 
            end if;
        end if;
    end process;


    ap_NS_fsm_assign_proc : process (ap_CS_fsm, ap_block_pp0_stage0_subdone, ap_reset_idle_pp0)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_pp0_stage0 => 
                ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
            when others =>  
                ap_NS_fsm <= "X";
        end case;
    end process;
    ap_CS_fsm_pp0_stage0 <= ap_CS_fsm(0);
        ap_block_pp0_stage0 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage0_01001_assign_proc : process(ap_start, ap_block_state1_pp0_stage0_iter0)
    begin
                ap_block_pp0_stage0_01001 <= ((ap_start = ap_const_logic_1) and (ap_const_boolean_1 = ap_block_state1_pp0_stage0_iter0));
    end process;


    ap_block_pp0_stage0_11001_assign_proc : process(ap_start, ap_block_state1_pp0_stage0_iter0)
    begin
                ap_block_pp0_stage0_11001 <= ((ap_start = ap_const_logic_1) and (ap_const_boolean_1 = ap_block_state1_pp0_stage0_iter0));
    end process;


    ap_block_pp0_stage0_11001_ignoreCallOp11_assign_proc : process(ap_start, ap_block_state1_pp0_stage0_iter0_ignore_call165)
    begin
                ap_block_pp0_stage0_11001_ignoreCallOp11 <= ((ap_start = ap_const_logic_1) and (ap_const_boolean_1 = ap_block_state1_pp0_stage0_iter0_ignore_call165));
    end process;


    ap_block_pp0_stage0_subdone_assign_proc : process(ap_start, ap_block_state1_pp0_stage0_iter0)
    begin
                ap_block_pp0_stage0_subdone <= ((ap_start = ap_const_logic_1) and (ap_const_boolean_1 = ap_block_state1_pp0_stage0_iter0));
    end process;


    ap_block_state1_pp0_stage0_iter0_assign_proc : process(layer_normalization_input_ap_vld_in_sig)
    begin
                ap_block_state1_pp0_stage0_iter0 <= (layer_normalization_input_ap_vld_in_sig = ap_const_logic_0);
    end process;


    ap_block_state1_pp0_stage0_iter0_ignore_call165_assign_proc : process(layer_normalization_input_ap_vld_in_sig)
    begin
                ap_block_state1_pp0_stage0_iter0_ignore_call165 <= (layer_normalization_input_ap_vld_in_sig = ap_const_logic_0);
    end process;


    ap_done_assign_proc : process(ap_enable_reg_pp0_iter8, ap_block_pp0_stage0_subdone)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_enable_reg_pp0_iter8 = ap_const_logic_1))) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_const_logic_0;
        end if; 
    end process;

    ap_enable_pp0 <= (ap_idle_pp0 xor ap_const_logic_1);
    ap_enable_reg_pp0_iter0 <= ap_start;

    ap_idle_assign_proc : process(ap_start, ap_CS_fsm_pp0_stage0, ap_idle_pp0)
    begin
        if (((ap_start = ap_const_logic_0) and (ap_idle_pp0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp0_assign_proc : process(ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter2, ap_enable_reg_pp0_iter3, ap_enable_reg_pp0_iter4, ap_enable_reg_pp0_iter5, ap_enable_reg_pp0_iter6, ap_enable_reg_pp0_iter7, ap_enable_reg_pp0_iter8)
    begin
        if (((ap_enable_reg_pp0_iter8 = ap_const_logic_0) and (ap_enable_reg_pp0_iter7 = ap_const_logic_0) and (ap_enable_reg_pp0_iter6 = ap_const_logic_0) and (ap_enable_reg_pp0_iter5 = ap_const_logic_0) and (ap_enable_reg_pp0_iter4 = ap_const_logic_0) and (ap_enable_reg_pp0_iter3 = ap_const_logic_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_0))) then 
            ap_idle_pp0 <= ap_const_logic_1;
        else 
            ap_idle_pp0 <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp0_0to7_assign_proc : process(ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter2, ap_enable_reg_pp0_iter3, ap_enable_reg_pp0_iter4, ap_enable_reg_pp0_iter5, ap_enable_reg_pp0_iter6, ap_enable_reg_pp0_iter7)
    begin
        if (((ap_enable_reg_pp0_iter7 = ap_const_logic_0) and (ap_enable_reg_pp0_iter6 = ap_const_logic_0) and (ap_enable_reg_pp0_iter5 = ap_const_logic_0) and (ap_enable_reg_pp0_iter4 = ap_const_logic_0) and (ap_enable_reg_pp0_iter3 = ap_const_logic_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_0))) then 
            ap_idle_pp0_0to7 <= ap_const_logic_1;
        else 
            ap_idle_pp0_0to7 <= ap_const_logic_0;
        end if; 
    end process;


    ap_ready_assign_proc : process(ap_start, ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_subdone)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;


    ap_reset_idle_pp0_assign_proc : process(ap_start, ap_idle_pp0_0to7)
    begin
        if (((ap_start = ap_const_logic_0) and (ap_idle_pp0_0to7 = ap_const_logic_1))) then 
            ap_reset_idle_pp0 <= ap_const_logic_1;
        else 
            ap_reset_idle_pp0 <= ap_const_logic_0;
        end if; 
    end process;


    grp_layernormalize_ap_fixed_16_6_5_3_0_ap_fixed_33_13_5_3_0_config2_s_fu_754_ap_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001_ignoreCallOp11)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001_ignoreCallOp11) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            grp_layernormalize_ap_fixed_16_6_5_3_0_ap_fixed_33_13_5_3_0_config2_s_fu_754_ap_ce <= ap_const_logic_1;
        else 
            grp_layernormalize_ap_fixed_16_6_5_3_0_ap_fixed_33_13_5_3_0_config2_s_fu_754_ap_ce <= ap_const_logic_0;
        end if; 
    end process;


    grp_layernormalize_ap_fixed_16_6_5_3_0_ap_fixed_33_13_5_3_0_config2_s_fu_754_ap_start_assign_proc : process(ap_start, ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            grp_layernormalize_ap_fixed_16_6_5_3_0_ap_fixed_33_13_5_3_0_config2_s_fu_754_ap_start <= ap_const_logic_1;
        else 
            grp_layernormalize_ap_fixed_16_6_5_3_0_ap_fixed_33_13_5_3_0_config2_s_fu_754_ap_start <= ap_const_logic_0;
        end if; 
    end process;

    layer2_out_0 <= grp_layernormalize_ap_fixed_16_6_5_3_0_ap_fixed_33_13_5_3_0_config2_s_fu_754_ap_return_0;

    layer2_out_0_ap_vld_assign_proc : process(ap_enable_reg_pp0_iter8, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter8 = ap_const_logic_1))) then 
            layer2_out_0_ap_vld <= ap_const_logic_1;
        else 
            layer2_out_0_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    layer2_out_1 <= grp_layernormalize_ap_fixed_16_6_5_3_0_ap_fixed_33_13_5_3_0_config2_s_fu_754_ap_return_1;
    layer2_out_10 <= grp_layernormalize_ap_fixed_16_6_5_3_0_ap_fixed_33_13_5_3_0_config2_s_fu_754_ap_return_10;

    layer2_out_10_ap_vld_assign_proc : process(ap_enable_reg_pp0_iter8, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter8 = ap_const_logic_1))) then 
            layer2_out_10_ap_vld <= ap_const_logic_1;
        else 
            layer2_out_10_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    layer2_out_11 <= grp_layernormalize_ap_fixed_16_6_5_3_0_ap_fixed_33_13_5_3_0_config2_s_fu_754_ap_return_11;

    layer2_out_11_ap_vld_assign_proc : process(ap_enable_reg_pp0_iter8, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter8 = ap_const_logic_1))) then 
            layer2_out_11_ap_vld <= ap_const_logic_1;
        else 
            layer2_out_11_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    layer2_out_12 <= grp_layernormalize_ap_fixed_16_6_5_3_0_ap_fixed_33_13_5_3_0_config2_s_fu_754_ap_return_12;

    layer2_out_12_ap_vld_assign_proc : process(ap_enable_reg_pp0_iter8, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter8 = ap_const_logic_1))) then 
            layer2_out_12_ap_vld <= ap_const_logic_1;
        else 
            layer2_out_12_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    layer2_out_13 <= grp_layernormalize_ap_fixed_16_6_5_3_0_ap_fixed_33_13_5_3_0_config2_s_fu_754_ap_return_13;

    layer2_out_13_ap_vld_assign_proc : process(ap_enable_reg_pp0_iter8, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter8 = ap_const_logic_1))) then 
            layer2_out_13_ap_vld <= ap_const_logic_1;
        else 
            layer2_out_13_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    layer2_out_14 <= grp_layernormalize_ap_fixed_16_6_5_3_0_ap_fixed_33_13_5_3_0_config2_s_fu_754_ap_return_14;

    layer2_out_14_ap_vld_assign_proc : process(ap_enable_reg_pp0_iter8, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter8 = ap_const_logic_1))) then 
            layer2_out_14_ap_vld <= ap_const_logic_1;
        else 
            layer2_out_14_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    layer2_out_15 <= grp_layernormalize_ap_fixed_16_6_5_3_0_ap_fixed_33_13_5_3_0_config2_s_fu_754_ap_return_15;

    layer2_out_15_ap_vld_assign_proc : process(ap_enable_reg_pp0_iter8, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter8 = ap_const_logic_1))) then 
            layer2_out_15_ap_vld <= ap_const_logic_1;
        else 
            layer2_out_15_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    layer2_out_16 <= grp_layernormalize_ap_fixed_16_6_5_3_0_ap_fixed_33_13_5_3_0_config2_s_fu_754_ap_return_16;

    layer2_out_16_ap_vld_assign_proc : process(ap_enable_reg_pp0_iter8, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter8 = ap_const_logic_1))) then 
            layer2_out_16_ap_vld <= ap_const_logic_1;
        else 
            layer2_out_16_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    layer2_out_17 <= grp_layernormalize_ap_fixed_16_6_5_3_0_ap_fixed_33_13_5_3_0_config2_s_fu_754_ap_return_17;

    layer2_out_17_ap_vld_assign_proc : process(ap_enable_reg_pp0_iter8, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter8 = ap_const_logic_1))) then 
            layer2_out_17_ap_vld <= ap_const_logic_1;
        else 
            layer2_out_17_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    layer2_out_18 <= grp_layernormalize_ap_fixed_16_6_5_3_0_ap_fixed_33_13_5_3_0_config2_s_fu_754_ap_return_18;

    layer2_out_18_ap_vld_assign_proc : process(ap_enable_reg_pp0_iter8, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter8 = ap_const_logic_1))) then 
            layer2_out_18_ap_vld <= ap_const_logic_1;
        else 
            layer2_out_18_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    layer2_out_19 <= grp_layernormalize_ap_fixed_16_6_5_3_0_ap_fixed_33_13_5_3_0_config2_s_fu_754_ap_return_19;

    layer2_out_19_ap_vld_assign_proc : process(ap_enable_reg_pp0_iter8, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter8 = ap_const_logic_1))) then 
            layer2_out_19_ap_vld <= ap_const_logic_1;
        else 
            layer2_out_19_ap_vld <= ap_const_logic_0;
        end if; 
    end process;


    layer2_out_1_ap_vld_assign_proc : process(ap_enable_reg_pp0_iter8, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter8 = ap_const_logic_1))) then 
            layer2_out_1_ap_vld <= ap_const_logic_1;
        else 
            layer2_out_1_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    layer2_out_2 <= grp_layernormalize_ap_fixed_16_6_5_3_0_ap_fixed_33_13_5_3_0_config2_s_fu_754_ap_return_2;
    layer2_out_20 <= grp_layernormalize_ap_fixed_16_6_5_3_0_ap_fixed_33_13_5_3_0_config2_s_fu_754_ap_return_20;

    layer2_out_20_ap_vld_assign_proc : process(ap_enable_reg_pp0_iter8, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter8 = ap_const_logic_1))) then 
            layer2_out_20_ap_vld <= ap_const_logic_1;
        else 
            layer2_out_20_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    layer2_out_21 <= grp_layernormalize_ap_fixed_16_6_5_3_0_ap_fixed_33_13_5_3_0_config2_s_fu_754_ap_return_21;

    layer2_out_21_ap_vld_assign_proc : process(ap_enable_reg_pp0_iter8, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter8 = ap_const_logic_1))) then 
            layer2_out_21_ap_vld <= ap_const_logic_1;
        else 
            layer2_out_21_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    layer2_out_22 <= grp_layernormalize_ap_fixed_16_6_5_3_0_ap_fixed_33_13_5_3_0_config2_s_fu_754_ap_return_22;

    layer2_out_22_ap_vld_assign_proc : process(ap_enable_reg_pp0_iter8, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter8 = ap_const_logic_1))) then 
            layer2_out_22_ap_vld <= ap_const_logic_1;
        else 
            layer2_out_22_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    layer2_out_23 <= grp_layernormalize_ap_fixed_16_6_5_3_0_ap_fixed_33_13_5_3_0_config2_s_fu_754_ap_return_23;

    layer2_out_23_ap_vld_assign_proc : process(ap_enable_reg_pp0_iter8, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter8 = ap_const_logic_1))) then 
            layer2_out_23_ap_vld <= ap_const_logic_1;
        else 
            layer2_out_23_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    layer2_out_24 <= grp_layernormalize_ap_fixed_16_6_5_3_0_ap_fixed_33_13_5_3_0_config2_s_fu_754_ap_return_24;

    layer2_out_24_ap_vld_assign_proc : process(ap_enable_reg_pp0_iter8, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter8 = ap_const_logic_1))) then 
            layer2_out_24_ap_vld <= ap_const_logic_1;
        else 
            layer2_out_24_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    layer2_out_25 <= grp_layernormalize_ap_fixed_16_6_5_3_0_ap_fixed_33_13_5_3_0_config2_s_fu_754_ap_return_25;

    layer2_out_25_ap_vld_assign_proc : process(ap_enable_reg_pp0_iter8, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter8 = ap_const_logic_1))) then 
            layer2_out_25_ap_vld <= ap_const_logic_1;
        else 
            layer2_out_25_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    layer2_out_26 <= grp_layernormalize_ap_fixed_16_6_5_3_0_ap_fixed_33_13_5_3_0_config2_s_fu_754_ap_return_26;

    layer2_out_26_ap_vld_assign_proc : process(ap_enable_reg_pp0_iter8, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter8 = ap_const_logic_1))) then 
            layer2_out_26_ap_vld <= ap_const_logic_1;
        else 
            layer2_out_26_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    layer2_out_27 <= grp_layernormalize_ap_fixed_16_6_5_3_0_ap_fixed_33_13_5_3_0_config2_s_fu_754_ap_return_27;

    layer2_out_27_ap_vld_assign_proc : process(ap_enable_reg_pp0_iter8, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter8 = ap_const_logic_1))) then 
            layer2_out_27_ap_vld <= ap_const_logic_1;
        else 
            layer2_out_27_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    layer2_out_28 <= grp_layernormalize_ap_fixed_16_6_5_3_0_ap_fixed_33_13_5_3_0_config2_s_fu_754_ap_return_28;

    layer2_out_28_ap_vld_assign_proc : process(ap_enable_reg_pp0_iter8, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter8 = ap_const_logic_1))) then 
            layer2_out_28_ap_vld <= ap_const_logic_1;
        else 
            layer2_out_28_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    layer2_out_29 <= grp_layernormalize_ap_fixed_16_6_5_3_0_ap_fixed_33_13_5_3_0_config2_s_fu_754_ap_return_29;

    layer2_out_29_ap_vld_assign_proc : process(ap_enable_reg_pp0_iter8, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter8 = ap_const_logic_1))) then 
            layer2_out_29_ap_vld <= ap_const_logic_1;
        else 
            layer2_out_29_ap_vld <= ap_const_logic_0;
        end if; 
    end process;


    layer2_out_2_ap_vld_assign_proc : process(ap_enable_reg_pp0_iter8, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter8 = ap_const_logic_1))) then 
            layer2_out_2_ap_vld <= ap_const_logic_1;
        else 
            layer2_out_2_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    layer2_out_3 <= grp_layernormalize_ap_fixed_16_6_5_3_0_ap_fixed_33_13_5_3_0_config2_s_fu_754_ap_return_3;
    layer2_out_30 <= grp_layernormalize_ap_fixed_16_6_5_3_0_ap_fixed_33_13_5_3_0_config2_s_fu_754_ap_return_30;

    layer2_out_30_ap_vld_assign_proc : process(ap_enable_reg_pp0_iter8, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter8 = ap_const_logic_1))) then 
            layer2_out_30_ap_vld <= ap_const_logic_1;
        else 
            layer2_out_30_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    layer2_out_31 <= grp_layernormalize_ap_fixed_16_6_5_3_0_ap_fixed_33_13_5_3_0_config2_s_fu_754_ap_return_31;

    layer2_out_31_ap_vld_assign_proc : process(ap_enable_reg_pp0_iter8, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter8 = ap_const_logic_1))) then 
            layer2_out_31_ap_vld <= ap_const_logic_1;
        else 
            layer2_out_31_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    layer2_out_32 <= grp_layernormalize_ap_fixed_16_6_5_3_0_ap_fixed_33_13_5_3_0_config2_s_fu_754_ap_return_32;

    layer2_out_32_ap_vld_assign_proc : process(ap_enable_reg_pp0_iter8, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter8 = ap_const_logic_1))) then 
            layer2_out_32_ap_vld <= ap_const_logic_1;
        else 
            layer2_out_32_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    layer2_out_33 <= grp_layernormalize_ap_fixed_16_6_5_3_0_ap_fixed_33_13_5_3_0_config2_s_fu_754_ap_return_33;

    layer2_out_33_ap_vld_assign_proc : process(ap_enable_reg_pp0_iter8, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter8 = ap_const_logic_1))) then 
            layer2_out_33_ap_vld <= ap_const_logic_1;
        else 
            layer2_out_33_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    layer2_out_34 <= grp_layernormalize_ap_fixed_16_6_5_3_0_ap_fixed_33_13_5_3_0_config2_s_fu_754_ap_return_34;

    layer2_out_34_ap_vld_assign_proc : process(ap_enable_reg_pp0_iter8, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter8 = ap_const_logic_1))) then 
            layer2_out_34_ap_vld <= ap_const_logic_1;
        else 
            layer2_out_34_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    layer2_out_35 <= grp_layernormalize_ap_fixed_16_6_5_3_0_ap_fixed_33_13_5_3_0_config2_s_fu_754_ap_return_35;

    layer2_out_35_ap_vld_assign_proc : process(ap_enable_reg_pp0_iter8, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter8 = ap_const_logic_1))) then 
            layer2_out_35_ap_vld <= ap_const_logic_1;
        else 
            layer2_out_35_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    layer2_out_36 <= grp_layernormalize_ap_fixed_16_6_5_3_0_ap_fixed_33_13_5_3_0_config2_s_fu_754_ap_return_36;

    layer2_out_36_ap_vld_assign_proc : process(ap_enable_reg_pp0_iter8, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter8 = ap_const_logic_1))) then 
            layer2_out_36_ap_vld <= ap_const_logic_1;
        else 
            layer2_out_36_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    layer2_out_37 <= grp_layernormalize_ap_fixed_16_6_5_3_0_ap_fixed_33_13_5_3_0_config2_s_fu_754_ap_return_37;

    layer2_out_37_ap_vld_assign_proc : process(ap_enable_reg_pp0_iter8, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter8 = ap_const_logic_1))) then 
            layer2_out_37_ap_vld <= ap_const_logic_1;
        else 
            layer2_out_37_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    layer2_out_38 <= grp_layernormalize_ap_fixed_16_6_5_3_0_ap_fixed_33_13_5_3_0_config2_s_fu_754_ap_return_38;

    layer2_out_38_ap_vld_assign_proc : process(ap_enable_reg_pp0_iter8, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter8 = ap_const_logic_1))) then 
            layer2_out_38_ap_vld <= ap_const_logic_1;
        else 
            layer2_out_38_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    layer2_out_39 <= grp_layernormalize_ap_fixed_16_6_5_3_0_ap_fixed_33_13_5_3_0_config2_s_fu_754_ap_return_39;

    layer2_out_39_ap_vld_assign_proc : process(ap_enable_reg_pp0_iter8, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter8 = ap_const_logic_1))) then 
            layer2_out_39_ap_vld <= ap_const_logic_1;
        else 
            layer2_out_39_ap_vld <= ap_const_logic_0;
        end if; 
    end process;


    layer2_out_3_ap_vld_assign_proc : process(ap_enable_reg_pp0_iter8, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter8 = ap_const_logic_1))) then 
            layer2_out_3_ap_vld <= ap_const_logic_1;
        else 
            layer2_out_3_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    layer2_out_4 <= grp_layernormalize_ap_fixed_16_6_5_3_0_ap_fixed_33_13_5_3_0_config2_s_fu_754_ap_return_4;
    layer2_out_40 <= grp_layernormalize_ap_fixed_16_6_5_3_0_ap_fixed_33_13_5_3_0_config2_s_fu_754_ap_return_40;

    layer2_out_40_ap_vld_assign_proc : process(ap_enable_reg_pp0_iter8, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter8 = ap_const_logic_1))) then 
            layer2_out_40_ap_vld <= ap_const_logic_1;
        else 
            layer2_out_40_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    layer2_out_41 <= grp_layernormalize_ap_fixed_16_6_5_3_0_ap_fixed_33_13_5_3_0_config2_s_fu_754_ap_return_41;

    layer2_out_41_ap_vld_assign_proc : process(ap_enable_reg_pp0_iter8, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter8 = ap_const_logic_1))) then 
            layer2_out_41_ap_vld <= ap_const_logic_1;
        else 
            layer2_out_41_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    layer2_out_42 <= grp_layernormalize_ap_fixed_16_6_5_3_0_ap_fixed_33_13_5_3_0_config2_s_fu_754_ap_return_42;

    layer2_out_42_ap_vld_assign_proc : process(ap_enable_reg_pp0_iter8, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter8 = ap_const_logic_1))) then 
            layer2_out_42_ap_vld <= ap_const_logic_1;
        else 
            layer2_out_42_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    layer2_out_43 <= grp_layernormalize_ap_fixed_16_6_5_3_0_ap_fixed_33_13_5_3_0_config2_s_fu_754_ap_return_43;

    layer2_out_43_ap_vld_assign_proc : process(ap_enable_reg_pp0_iter8, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter8 = ap_const_logic_1))) then 
            layer2_out_43_ap_vld <= ap_const_logic_1;
        else 
            layer2_out_43_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    layer2_out_44 <= grp_layernormalize_ap_fixed_16_6_5_3_0_ap_fixed_33_13_5_3_0_config2_s_fu_754_ap_return_44;

    layer2_out_44_ap_vld_assign_proc : process(ap_enable_reg_pp0_iter8, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter8 = ap_const_logic_1))) then 
            layer2_out_44_ap_vld <= ap_const_logic_1;
        else 
            layer2_out_44_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    layer2_out_45 <= grp_layernormalize_ap_fixed_16_6_5_3_0_ap_fixed_33_13_5_3_0_config2_s_fu_754_ap_return_45;

    layer2_out_45_ap_vld_assign_proc : process(ap_enable_reg_pp0_iter8, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter8 = ap_const_logic_1))) then 
            layer2_out_45_ap_vld <= ap_const_logic_1;
        else 
            layer2_out_45_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    layer2_out_46 <= grp_layernormalize_ap_fixed_16_6_5_3_0_ap_fixed_33_13_5_3_0_config2_s_fu_754_ap_return_46;

    layer2_out_46_ap_vld_assign_proc : process(ap_enable_reg_pp0_iter8, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter8 = ap_const_logic_1))) then 
            layer2_out_46_ap_vld <= ap_const_logic_1;
        else 
            layer2_out_46_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    layer2_out_47 <= grp_layernormalize_ap_fixed_16_6_5_3_0_ap_fixed_33_13_5_3_0_config2_s_fu_754_ap_return_47;

    layer2_out_47_ap_vld_assign_proc : process(ap_enable_reg_pp0_iter8, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter8 = ap_const_logic_1))) then 
            layer2_out_47_ap_vld <= ap_const_logic_1;
        else 
            layer2_out_47_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    layer2_out_48 <= grp_layernormalize_ap_fixed_16_6_5_3_0_ap_fixed_33_13_5_3_0_config2_s_fu_754_ap_return_48;

    layer2_out_48_ap_vld_assign_proc : process(ap_enable_reg_pp0_iter8, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter8 = ap_const_logic_1))) then 
            layer2_out_48_ap_vld <= ap_const_logic_1;
        else 
            layer2_out_48_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    layer2_out_49 <= grp_layernormalize_ap_fixed_16_6_5_3_0_ap_fixed_33_13_5_3_0_config2_s_fu_754_ap_return_49;

    layer2_out_49_ap_vld_assign_proc : process(ap_enable_reg_pp0_iter8, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter8 = ap_const_logic_1))) then 
            layer2_out_49_ap_vld <= ap_const_logic_1;
        else 
            layer2_out_49_ap_vld <= ap_const_logic_0;
        end if; 
    end process;


    layer2_out_4_ap_vld_assign_proc : process(ap_enable_reg_pp0_iter8, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter8 = ap_const_logic_1))) then 
            layer2_out_4_ap_vld <= ap_const_logic_1;
        else 
            layer2_out_4_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    layer2_out_5 <= grp_layernormalize_ap_fixed_16_6_5_3_0_ap_fixed_33_13_5_3_0_config2_s_fu_754_ap_return_5;
    layer2_out_50 <= grp_layernormalize_ap_fixed_16_6_5_3_0_ap_fixed_33_13_5_3_0_config2_s_fu_754_ap_return_50;

    layer2_out_50_ap_vld_assign_proc : process(ap_enable_reg_pp0_iter8, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter8 = ap_const_logic_1))) then 
            layer2_out_50_ap_vld <= ap_const_logic_1;
        else 
            layer2_out_50_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    layer2_out_51 <= grp_layernormalize_ap_fixed_16_6_5_3_0_ap_fixed_33_13_5_3_0_config2_s_fu_754_ap_return_51;

    layer2_out_51_ap_vld_assign_proc : process(ap_enable_reg_pp0_iter8, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter8 = ap_const_logic_1))) then 
            layer2_out_51_ap_vld <= ap_const_logic_1;
        else 
            layer2_out_51_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    layer2_out_52 <= grp_layernormalize_ap_fixed_16_6_5_3_0_ap_fixed_33_13_5_3_0_config2_s_fu_754_ap_return_52;

    layer2_out_52_ap_vld_assign_proc : process(ap_enable_reg_pp0_iter8, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter8 = ap_const_logic_1))) then 
            layer2_out_52_ap_vld <= ap_const_logic_1;
        else 
            layer2_out_52_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    layer2_out_53 <= grp_layernormalize_ap_fixed_16_6_5_3_0_ap_fixed_33_13_5_3_0_config2_s_fu_754_ap_return_53;

    layer2_out_53_ap_vld_assign_proc : process(ap_enable_reg_pp0_iter8, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter8 = ap_const_logic_1))) then 
            layer2_out_53_ap_vld <= ap_const_logic_1;
        else 
            layer2_out_53_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    layer2_out_54 <= grp_layernormalize_ap_fixed_16_6_5_3_0_ap_fixed_33_13_5_3_0_config2_s_fu_754_ap_return_54;

    layer2_out_54_ap_vld_assign_proc : process(ap_enable_reg_pp0_iter8, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter8 = ap_const_logic_1))) then 
            layer2_out_54_ap_vld <= ap_const_logic_1;
        else 
            layer2_out_54_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    layer2_out_55 <= grp_layernormalize_ap_fixed_16_6_5_3_0_ap_fixed_33_13_5_3_0_config2_s_fu_754_ap_return_55;

    layer2_out_55_ap_vld_assign_proc : process(ap_enable_reg_pp0_iter8, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter8 = ap_const_logic_1))) then 
            layer2_out_55_ap_vld <= ap_const_logic_1;
        else 
            layer2_out_55_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    layer2_out_56 <= grp_layernormalize_ap_fixed_16_6_5_3_0_ap_fixed_33_13_5_3_0_config2_s_fu_754_ap_return_56;

    layer2_out_56_ap_vld_assign_proc : process(ap_enable_reg_pp0_iter8, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter8 = ap_const_logic_1))) then 
            layer2_out_56_ap_vld <= ap_const_logic_1;
        else 
            layer2_out_56_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    layer2_out_57 <= grp_layernormalize_ap_fixed_16_6_5_3_0_ap_fixed_33_13_5_3_0_config2_s_fu_754_ap_return_57;

    layer2_out_57_ap_vld_assign_proc : process(ap_enable_reg_pp0_iter8, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter8 = ap_const_logic_1))) then 
            layer2_out_57_ap_vld <= ap_const_logic_1;
        else 
            layer2_out_57_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    layer2_out_58 <= grp_layernormalize_ap_fixed_16_6_5_3_0_ap_fixed_33_13_5_3_0_config2_s_fu_754_ap_return_58;

    layer2_out_58_ap_vld_assign_proc : process(ap_enable_reg_pp0_iter8, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter8 = ap_const_logic_1))) then 
            layer2_out_58_ap_vld <= ap_const_logic_1;
        else 
            layer2_out_58_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    layer2_out_59 <= grp_layernormalize_ap_fixed_16_6_5_3_0_ap_fixed_33_13_5_3_0_config2_s_fu_754_ap_return_59;

    layer2_out_59_ap_vld_assign_proc : process(ap_enable_reg_pp0_iter8, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter8 = ap_const_logic_1))) then 
            layer2_out_59_ap_vld <= ap_const_logic_1;
        else 
            layer2_out_59_ap_vld <= ap_const_logic_0;
        end if; 
    end process;


    layer2_out_5_ap_vld_assign_proc : process(ap_enable_reg_pp0_iter8, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter8 = ap_const_logic_1))) then 
            layer2_out_5_ap_vld <= ap_const_logic_1;
        else 
            layer2_out_5_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    layer2_out_6 <= grp_layernormalize_ap_fixed_16_6_5_3_0_ap_fixed_33_13_5_3_0_config2_s_fu_754_ap_return_6;
    layer2_out_60 <= grp_layernormalize_ap_fixed_16_6_5_3_0_ap_fixed_33_13_5_3_0_config2_s_fu_754_ap_return_60;

    layer2_out_60_ap_vld_assign_proc : process(ap_enable_reg_pp0_iter8, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter8 = ap_const_logic_1))) then 
            layer2_out_60_ap_vld <= ap_const_logic_1;
        else 
            layer2_out_60_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    layer2_out_61 <= grp_layernormalize_ap_fixed_16_6_5_3_0_ap_fixed_33_13_5_3_0_config2_s_fu_754_ap_return_61;

    layer2_out_61_ap_vld_assign_proc : process(ap_enable_reg_pp0_iter8, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter8 = ap_const_logic_1))) then 
            layer2_out_61_ap_vld <= ap_const_logic_1;
        else 
            layer2_out_61_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    layer2_out_62 <= grp_layernormalize_ap_fixed_16_6_5_3_0_ap_fixed_33_13_5_3_0_config2_s_fu_754_ap_return_62;

    layer2_out_62_ap_vld_assign_proc : process(ap_enable_reg_pp0_iter8, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter8 = ap_const_logic_1))) then 
            layer2_out_62_ap_vld <= ap_const_logic_1;
        else 
            layer2_out_62_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    layer2_out_63 <= grp_layernormalize_ap_fixed_16_6_5_3_0_ap_fixed_33_13_5_3_0_config2_s_fu_754_ap_return_63;

    layer2_out_63_ap_vld_assign_proc : process(ap_enable_reg_pp0_iter8, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter8 = ap_const_logic_1))) then 
            layer2_out_63_ap_vld <= ap_const_logic_1;
        else 
            layer2_out_63_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    layer2_out_64 <= grp_layernormalize_ap_fixed_16_6_5_3_0_ap_fixed_33_13_5_3_0_config2_s_fu_754_ap_return_64;

    layer2_out_64_ap_vld_assign_proc : process(ap_enable_reg_pp0_iter8, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter8 = ap_const_logic_1))) then 
            layer2_out_64_ap_vld <= ap_const_logic_1;
        else 
            layer2_out_64_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    layer2_out_65 <= grp_layernormalize_ap_fixed_16_6_5_3_0_ap_fixed_33_13_5_3_0_config2_s_fu_754_ap_return_65;

    layer2_out_65_ap_vld_assign_proc : process(ap_enable_reg_pp0_iter8, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter8 = ap_const_logic_1))) then 
            layer2_out_65_ap_vld <= ap_const_logic_1;
        else 
            layer2_out_65_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    layer2_out_66 <= grp_layernormalize_ap_fixed_16_6_5_3_0_ap_fixed_33_13_5_3_0_config2_s_fu_754_ap_return_66;

    layer2_out_66_ap_vld_assign_proc : process(ap_enable_reg_pp0_iter8, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter8 = ap_const_logic_1))) then 
            layer2_out_66_ap_vld <= ap_const_logic_1;
        else 
            layer2_out_66_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    layer2_out_67 <= grp_layernormalize_ap_fixed_16_6_5_3_0_ap_fixed_33_13_5_3_0_config2_s_fu_754_ap_return_67;

    layer2_out_67_ap_vld_assign_proc : process(ap_enable_reg_pp0_iter8, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter8 = ap_const_logic_1))) then 
            layer2_out_67_ap_vld <= ap_const_logic_1;
        else 
            layer2_out_67_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    layer2_out_68 <= grp_layernormalize_ap_fixed_16_6_5_3_0_ap_fixed_33_13_5_3_0_config2_s_fu_754_ap_return_68;

    layer2_out_68_ap_vld_assign_proc : process(ap_enable_reg_pp0_iter8, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter8 = ap_const_logic_1))) then 
            layer2_out_68_ap_vld <= ap_const_logic_1;
        else 
            layer2_out_68_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    layer2_out_69 <= grp_layernormalize_ap_fixed_16_6_5_3_0_ap_fixed_33_13_5_3_0_config2_s_fu_754_ap_return_69;

    layer2_out_69_ap_vld_assign_proc : process(ap_enable_reg_pp0_iter8, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter8 = ap_const_logic_1))) then 
            layer2_out_69_ap_vld <= ap_const_logic_1;
        else 
            layer2_out_69_ap_vld <= ap_const_logic_0;
        end if; 
    end process;


    layer2_out_6_ap_vld_assign_proc : process(ap_enable_reg_pp0_iter8, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter8 = ap_const_logic_1))) then 
            layer2_out_6_ap_vld <= ap_const_logic_1;
        else 
            layer2_out_6_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    layer2_out_7 <= grp_layernormalize_ap_fixed_16_6_5_3_0_ap_fixed_33_13_5_3_0_config2_s_fu_754_ap_return_7;
    layer2_out_70 <= grp_layernormalize_ap_fixed_16_6_5_3_0_ap_fixed_33_13_5_3_0_config2_s_fu_754_ap_return_70;

    layer2_out_70_ap_vld_assign_proc : process(ap_enable_reg_pp0_iter8, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter8 = ap_const_logic_1))) then 
            layer2_out_70_ap_vld <= ap_const_logic_1;
        else 
            layer2_out_70_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    layer2_out_71 <= grp_layernormalize_ap_fixed_16_6_5_3_0_ap_fixed_33_13_5_3_0_config2_s_fu_754_ap_return_71;

    layer2_out_71_ap_vld_assign_proc : process(ap_enable_reg_pp0_iter8, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter8 = ap_const_logic_1))) then 
            layer2_out_71_ap_vld <= ap_const_logic_1;
        else 
            layer2_out_71_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    layer2_out_72 <= grp_layernormalize_ap_fixed_16_6_5_3_0_ap_fixed_33_13_5_3_0_config2_s_fu_754_ap_return_72;

    layer2_out_72_ap_vld_assign_proc : process(ap_enable_reg_pp0_iter8, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter8 = ap_const_logic_1))) then 
            layer2_out_72_ap_vld <= ap_const_logic_1;
        else 
            layer2_out_72_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    layer2_out_73 <= grp_layernormalize_ap_fixed_16_6_5_3_0_ap_fixed_33_13_5_3_0_config2_s_fu_754_ap_return_73;

    layer2_out_73_ap_vld_assign_proc : process(ap_enable_reg_pp0_iter8, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter8 = ap_const_logic_1))) then 
            layer2_out_73_ap_vld <= ap_const_logic_1;
        else 
            layer2_out_73_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    layer2_out_74 <= grp_layernormalize_ap_fixed_16_6_5_3_0_ap_fixed_33_13_5_3_0_config2_s_fu_754_ap_return_74;

    layer2_out_74_ap_vld_assign_proc : process(ap_enable_reg_pp0_iter8, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter8 = ap_const_logic_1))) then 
            layer2_out_74_ap_vld <= ap_const_logic_1;
        else 
            layer2_out_74_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    layer2_out_75 <= grp_layernormalize_ap_fixed_16_6_5_3_0_ap_fixed_33_13_5_3_0_config2_s_fu_754_ap_return_75;

    layer2_out_75_ap_vld_assign_proc : process(ap_enable_reg_pp0_iter8, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter8 = ap_const_logic_1))) then 
            layer2_out_75_ap_vld <= ap_const_logic_1;
        else 
            layer2_out_75_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    layer2_out_76 <= grp_layernormalize_ap_fixed_16_6_5_3_0_ap_fixed_33_13_5_3_0_config2_s_fu_754_ap_return_76;

    layer2_out_76_ap_vld_assign_proc : process(ap_enable_reg_pp0_iter8, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter8 = ap_const_logic_1))) then 
            layer2_out_76_ap_vld <= ap_const_logic_1;
        else 
            layer2_out_76_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    layer2_out_77 <= grp_layernormalize_ap_fixed_16_6_5_3_0_ap_fixed_33_13_5_3_0_config2_s_fu_754_ap_return_77;

    layer2_out_77_ap_vld_assign_proc : process(ap_enable_reg_pp0_iter8, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter8 = ap_const_logic_1))) then 
            layer2_out_77_ap_vld <= ap_const_logic_1;
        else 
            layer2_out_77_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    layer2_out_78 <= grp_layernormalize_ap_fixed_16_6_5_3_0_ap_fixed_33_13_5_3_0_config2_s_fu_754_ap_return_78;

    layer2_out_78_ap_vld_assign_proc : process(ap_enable_reg_pp0_iter8, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter8 = ap_const_logic_1))) then 
            layer2_out_78_ap_vld <= ap_const_logic_1;
        else 
            layer2_out_78_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    layer2_out_79 <= grp_layernormalize_ap_fixed_16_6_5_3_0_ap_fixed_33_13_5_3_0_config2_s_fu_754_ap_return_79;

    layer2_out_79_ap_vld_assign_proc : process(ap_enable_reg_pp0_iter8, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter8 = ap_const_logic_1))) then 
            layer2_out_79_ap_vld <= ap_const_logic_1;
        else 
            layer2_out_79_ap_vld <= ap_const_logic_0;
        end if; 
    end process;


    layer2_out_7_ap_vld_assign_proc : process(ap_enable_reg_pp0_iter8, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter8 = ap_const_logic_1))) then 
            layer2_out_7_ap_vld <= ap_const_logic_1;
        else 
            layer2_out_7_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    layer2_out_8 <= grp_layernormalize_ap_fixed_16_6_5_3_0_ap_fixed_33_13_5_3_0_config2_s_fu_754_ap_return_8;

    layer2_out_8_ap_vld_assign_proc : process(ap_enable_reg_pp0_iter8, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter8 = ap_const_logic_1))) then 
            layer2_out_8_ap_vld <= ap_const_logic_1;
        else 
            layer2_out_8_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    layer2_out_9 <= grp_layernormalize_ap_fixed_16_6_5_3_0_ap_fixed_33_13_5_3_0_config2_s_fu_754_ap_return_9;

    layer2_out_9_ap_vld_assign_proc : process(ap_enable_reg_pp0_iter8, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter8 = ap_const_logic_1))) then 
            layer2_out_9_ap_vld <= ap_const_logic_1;
        else 
            layer2_out_9_ap_vld <= ap_const_logic_0;
        end if; 
    end process;


    layer_normalization_input_ap_vld_in_sig_assign_proc : process(layer_normalization_input_ap_vld, layer_normalization_input_ap_vld_preg)
    begin
        if ((layer_normalization_input_ap_vld = ap_const_logic_1)) then 
            layer_normalization_input_ap_vld_in_sig <= layer_normalization_input_ap_vld;
        else 
            layer_normalization_input_ap_vld_in_sig <= layer_normalization_input_ap_vld_preg;
        end if; 
    end process;


    layer_normalization_input_blk_n_assign_proc : process(ap_start, ap_CS_fsm_pp0_stage0, layer_normalization_input_ap_vld, ap_block_pp0_stage0)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            layer_normalization_input_blk_n <= layer_normalization_input_ap_vld;
        else 
            layer_normalization_input_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    layer_normalization_input_in_sig_assign_proc : process(layer_normalization_input_ap_vld, layer_normalization_input, layer_normalization_input_preg)
    begin
        if ((layer_normalization_input_ap_vld = ap_const_logic_1)) then 
            layer_normalization_input_in_sig <= layer_normalization_input;
        else 
            layer_normalization_input_in_sig <= layer_normalization_input_preg;
        end if; 
    end process;

end behav;
