-- ==============================================================
-- Generated by Vitis HLS v2024.1
-- Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
-- Copyright 2022-2024 Advanced Micro Devices, Inc. All Rights Reserved.
-- ==============================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity myproject is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    layer_normalization_input_ap_vld : IN STD_LOGIC;
    layer_normalization_input : IN STD_LOGIC_VECTOR (1279 downto 0);
    layer2_out_0 : OUT STD_LOGIC_VECTOR (32 downto 0);
    layer2_out_0_ap_vld : OUT STD_LOGIC;
    layer2_out_1 : OUT STD_LOGIC_VECTOR (32 downto 0);
    layer2_out_1_ap_vld : OUT STD_LOGIC;
    layer2_out_2 : OUT STD_LOGIC_VECTOR (32 downto 0);
    layer2_out_2_ap_vld : OUT STD_LOGIC;
    layer2_out_3 : OUT STD_LOGIC_VECTOR (32 downto 0);
    layer2_out_3_ap_vld : OUT STD_LOGIC;
    layer2_out_4 : OUT STD_LOGIC_VECTOR (32 downto 0);
    layer2_out_4_ap_vld : OUT STD_LOGIC;
    layer2_out_5 : OUT STD_LOGIC_VECTOR (32 downto 0);
    layer2_out_5_ap_vld : OUT STD_LOGIC;
    layer2_out_6 : OUT STD_LOGIC_VECTOR (32 downto 0);
    layer2_out_6_ap_vld : OUT STD_LOGIC;
    layer2_out_7 : OUT STD_LOGIC_VECTOR (32 downto 0);
    layer2_out_7_ap_vld : OUT STD_LOGIC;
    layer2_out_8 : OUT STD_LOGIC_VECTOR (32 downto 0);
    layer2_out_8_ap_vld : OUT STD_LOGIC;
    layer2_out_9 : OUT STD_LOGIC_VECTOR (32 downto 0);
    layer2_out_9_ap_vld : OUT STD_LOGIC;
    layer2_out_10 : OUT STD_LOGIC_VECTOR (32 downto 0);
    layer2_out_10_ap_vld : OUT STD_LOGIC;
    layer2_out_11 : OUT STD_LOGIC_VECTOR (32 downto 0);
    layer2_out_11_ap_vld : OUT STD_LOGIC;
    layer2_out_12 : OUT STD_LOGIC_VECTOR (32 downto 0);
    layer2_out_12_ap_vld : OUT STD_LOGIC;
    layer2_out_13 : OUT STD_LOGIC_VECTOR (32 downto 0);
    layer2_out_13_ap_vld : OUT STD_LOGIC;
    layer2_out_14 : OUT STD_LOGIC_VECTOR (32 downto 0);
    layer2_out_14_ap_vld : OUT STD_LOGIC;
    layer2_out_15 : OUT STD_LOGIC_VECTOR (32 downto 0);
    layer2_out_15_ap_vld : OUT STD_LOGIC;
    layer2_out_16 : OUT STD_LOGIC_VECTOR (32 downto 0);
    layer2_out_16_ap_vld : OUT STD_LOGIC;
    layer2_out_17 : OUT STD_LOGIC_VECTOR (32 downto 0);
    layer2_out_17_ap_vld : OUT STD_LOGIC;
    layer2_out_18 : OUT STD_LOGIC_VECTOR (32 downto 0);
    layer2_out_18_ap_vld : OUT STD_LOGIC;
    layer2_out_19 : OUT STD_LOGIC_VECTOR (32 downto 0);
    layer2_out_19_ap_vld : OUT STD_LOGIC;
    layer2_out_20 : OUT STD_LOGIC_VECTOR (32 downto 0);
    layer2_out_20_ap_vld : OUT STD_LOGIC;
    layer2_out_21 : OUT STD_LOGIC_VECTOR (32 downto 0);
    layer2_out_21_ap_vld : OUT STD_LOGIC;
    layer2_out_22 : OUT STD_LOGIC_VECTOR (32 downto 0);
    layer2_out_22_ap_vld : OUT STD_LOGIC;
    layer2_out_23 : OUT STD_LOGIC_VECTOR (32 downto 0);
    layer2_out_23_ap_vld : OUT STD_LOGIC;
    layer2_out_24 : OUT STD_LOGIC_VECTOR (32 downto 0);
    layer2_out_24_ap_vld : OUT STD_LOGIC;
    layer2_out_25 : OUT STD_LOGIC_VECTOR (32 downto 0);
    layer2_out_25_ap_vld : OUT STD_LOGIC;
    layer2_out_26 : OUT STD_LOGIC_VECTOR (32 downto 0);
    layer2_out_26_ap_vld : OUT STD_LOGIC;
    layer2_out_27 : OUT STD_LOGIC_VECTOR (32 downto 0);
    layer2_out_27_ap_vld : OUT STD_LOGIC;
    layer2_out_28 : OUT STD_LOGIC_VECTOR (32 downto 0);
    layer2_out_28_ap_vld : OUT STD_LOGIC;
    layer2_out_29 : OUT STD_LOGIC_VECTOR (32 downto 0);
    layer2_out_29_ap_vld : OUT STD_LOGIC;
    layer2_out_30 : OUT STD_LOGIC_VECTOR (32 downto 0);
    layer2_out_30_ap_vld : OUT STD_LOGIC;
    layer2_out_31 : OUT STD_LOGIC_VECTOR (32 downto 0);
    layer2_out_31_ap_vld : OUT STD_LOGIC;
    layer2_out_32 : OUT STD_LOGIC_VECTOR (32 downto 0);
    layer2_out_32_ap_vld : OUT STD_LOGIC;
    layer2_out_33 : OUT STD_LOGIC_VECTOR (32 downto 0);
    layer2_out_33_ap_vld : OUT STD_LOGIC;
    layer2_out_34 : OUT STD_LOGIC_VECTOR (32 downto 0);
    layer2_out_34_ap_vld : OUT STD_LOGIC;
    layer2_out_35 : OUT STD_LOGIC_VECTOR (32 downto 0);
    layer2_out_35_ap_vld : OUT STD_LOGIC;
    layer2_out_36 : OUT STD_LOGIC_VECTOR (32 downto 0);
    layer2_out_36_ap_vld : OUT STD_LOGIC;
    layer2_out_37 : OUT STD_LOGIC_VECTOR (32 downto 0);
    layer2_out_37_ap_vld : OUT STD_LOGIC;
    layer2_out_38 : OUT STD_LOGIC_VECTOR (32 downto 0);
    layer2_out_38_ap_vld : OUT STD_LOGIC;
    layer2_out_39 : OUT STD_LOGIC_VECTOR (32 downto 0);
    layer2_out_39_ap_vld : OUT STD_LOGIC;
    layer2_out_40 : OUT STD_LOGIC_VECTOR (32 downto 0);
    layer2_out_40_ap_vld : OUT STD_LOGIC;
    layer2_out_41 : OUT STD_LOGIC_VECTOR (32 downto 0);
    layer2_out_41_ap_vld : OUT STD_LOGIC;
    layer2_out_42 : OUT STD_LOGIC_VECTOR (32 downto 0);
    layer2_out_42_ap_vld : OUT STD_LOGIC;
    layer2_out_43 : OUT STD_LOGIC_VECTOR (32 downto 0);
    layer2_out_43_ap_vld : OUT STD_LOGIC;
    layer2_out_44 : OUT STD_LOGIC_VECTOR (32 downto 0);
    layer2_out_44_ap_vld : OUT STD_LOGIC;
    layer2_out_45 : OUT STD_LOGIC_VECTOR (32 downto 0);
    layer2_out_45_ap_vld : OUT STD_LOGIC;
    layer2_out_46 : OUT STD_LOGIC_VECTOR (32 downto 0);
    layer2_out_46_ap_vld : OUT STD_LOGIC;
    layer2_out_47 : OUT STD_LOGIC_VECTOR (32 downto 0);
    layer2_out_47_ap_vld : OUT STD_LOGIC;
    layer2_out_48 : OUT STD_LOGIC_VECTOR (32 downto 0);
    layer2_out_48_ap_vld : OUT STD_LOGIC;
    layer2_out_49 : OUT STD_LOGIC_VECTOR (32 downto 0);
    layer2_out_49_ap_vld : OUT STD_LOGIC;
    layer2_out_50 : OUT STD_LOGIC_VECTOR (32 downto 0);
    layer2_out_50_ap_vld : OUT STD_LOGIC;
    layer2_out_51 : OUT STD_LOGIC_VECTOR (32 downto 0);
    layer2_out_51_ap_vld : OUT STD_LOGIC;
    layer2_out_52 : OUT STD_LOGIC_VECTOR (32 downto 0);
    layer2_out_52_ap_vld : OUT STD_LOGIC;
    layer2_out_53 : OUT STD_LOGIC_VECTOR (32 downto 0);
    layer2_out_53_ap_vld : OUT STD_LOGIC;
    layer2_out_54 : OUT STD_LOGIC_VECTOR (32 downto 0);
    layer2_out_54_ap_vld : OUT STD_LOGIC;
    layer2_out_55 : OUT STD_LOGIC_VECTOR (32 downto 0);
    layer2_out_55_ap_vld : OUT STD_LOGIC;
    layer2_out_56 : OUT STD_LOGIC_VECTOR (32 downto 0);
    layer2_out_56_ap_vld : OUT STD_LOGIC;
    layer2_out_57 : OUT STD_LOGIC_VECTOR (32 downto 0);
    layer2_out_57_ap_vld : OUT STD_LOGIC;
    layer2_out_58 : OUT STD_LOGIC_VECTOR (32 downto 0);
    layer2_out_58_ap_vld : OUT STD_LOGIC;
    layer2_out_59 : OUT STD_LOGIC_VECTOR (32 downto 0);
    layer2_out_59_ap_vld : OUT STD_LOGIC;
    layer2_out_60 : OUT STD_LOGIC_VECTOR (32 downto 0);
    layer2_out_60_ap_vld : OUT STD_LOGIC;
    layer2_out_61 : OUT STD_LOGIC_VECTOR (32 downto 0);
    layer2_out_61_ap_vld : OUT STD_LOGIC;
    layer2_out_62 : OUT STD_LOGIC_VECTOR (32 downto 0);
    layer2_out_62_ap_vld : OUT STD_LOGIC;
    layer2_out_63 : OUT STD_LOGIC_VECTOR (32 downto 0);
    layer2_out_63_ap_vld : OUT STD_LOGIC;
    layer2_out_64 : OUT STD_LOGIC_VECTOR (32 downto 0);
    layer2_out_64_ap_vld : OUT STD_LOGIC;
    layer2_out_65 : OUT STD_LOGIC_VECTOR (32 downto 0);
    layer2_out_65_ap_vld : OUT STD_LOGIC;
    layer2_out_66 : OUT STD_LOGIC_VECTOR (32 downto 0);
    layer2_out_66_ap_vld : OUT STD_LOGIC;
    layer2_out_67 : OUT STD_LOGIC_VECTOR (32 downto 0);
    layer2_out_67_ap_vld : OUT STD_LOGIC;
    layer2_out_68 : OUT STD_LOGIC_VECTOR (32 downto 0);
    layer2_out_68_ap_vld : OUT STD_LOGIC;
    layer2_out_69 : OUT STD_LOGIC_VECTOR (32 downto 0);
    layer2_out_69_ap_vld : OUT STD_LOGIC;
    layer2_out_70 : OUT STD_LOGIC_VECTOR (32 downto 0);
    layer2_out_70_ap_vld : OUT STD_LOGIC;
    layer2_out_71 : OUT STD_LOGIC_VECTOR (32 downto 0);
    layer2_out_71_ap_vld : OUT STD_LOGIC;
    layer2_out_72 : OUT STD_LOGIC_VECTOR (32 downto 0);
    layer2_out_72_ap_vld : OUT STD_LOGIC;
    layer2_out_73 : OUT STD_LOGIC_VECTOR (32 downto 0);
    layer2_out_73_ap_vld : OUT STD_LOGIC;
    layer2_out_74 : OUT STD_LOGIC_VECTOR (32 downto 0);
    layer2_out_74_ap_vld : OUT STD_LOGIC;
    layer2_out_75 : OUT STD_LOGIC_VECTOR (32 downto 0);
    layer2_out_75_ap_vld : OUT STD_LOGIC;
    layer2_out_76 : OUT STD_LOGIC_VECTOR (32 downto 0);
    layer2_out_76_ap_vld : OUT STD_LOGIC;
    layer2_out_77 : OUT STD_LOGIC_VECTOR (32 downto 0);
    layer2_out_77_ap_vld : OUT STD_LOGIC;
    layer2_out_78 : OUT STD_LOGIC_VECTOR (32 downto 0);
    layer2_out_78_ap_vld : OUT STD_LOGIC;
    layer2_out_79 : OUT STD_LOGIC_VECTOR (32 downto 0);
    layer2_out_79_ap_vld : OUT STD_LOGIC );
end;


architecture behav of myproject is 
    attribute CORE_GENERATION_INFO : STRING;
    attribute CORE_GENERATION_INFO of behav : architecture is
    "myproject_myproject,hls_ip_2024_1,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xcvu13p-flga2577-2-e,HLS_INPUT_CLOCK=5.000000,HLS_INPUT_ARCH=pipeline,HLS_SYN_CLOCK=4.097000,HLS_SYN_LAT=5,HLS_SYN_TPT=1,HLS_SYN_MEM=40,HLS_SYN_DSP=0,HLS_SYN_FF=13694,HLS_SYN_LUT=10978,HLS_VERSION=2024_1}";
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_pp0_stage0 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_boolean_0 : BOOLEAN := false;
    constant ap_const_lv1280_lc_1 : STD_LOGIC_VECTOR (1279 downto
    constant ap_const_lv3_5 : STD_LOGIC_VECTOR (2 downto 0) := "101";
    constant ap_const_lv3_0 : STD_LOGIC_VECTOR (2 downto 0) := "000";
    constant ap_const_lv3_1 : STD_LOGIC_VECTOR (2 downto 0) := "001";
    constant ap_const_lv3_2 : STD_LOGIC_VECTOR (2 downto 0) := "010";
    constant ap_const_lv3_3 : STD_LOGIC_VECTOR (2 downto 0) := "011";
    constant ap_const_lv3_4 : STD_LOGIC_VECTOR (2 downto 0) := "100";

    signal ap_CS_fsm : STD_LOGIC_VECTOR (0 downto 0) := "1";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_pp0_stage0 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage0 : signal is "none";
    signal ap_enable_reg_pp0_iter0 : STD_LOGIC;
    signal ap_enable_reg_pp0_iter1 : STD_LOGIC;
    signal ap_enable_reg_pp0_iter2 : STD_LOGIC;
    signal ap_enable_reg_pp0_iter3 : STD_LOGIC;
    signal ap_enable_reg_pp0_iter4 : STD_LOGIC;
    signal ap_enable_reg_pp0_iter5 : STD_LOGIC;
    signal ap_idle_pp0 : STD_LOGIC;
    signal layer_normalization_input_ap_vld_in_sig : STD_LOGIC;
    signal ap_block_state1_pp0_stage0_iter0 : BOOLEAN;
    signal ap_block_pp0_stage0_subdone : BOOLEAN;
    signal layer_normalization_input_preg : STD_LOGIC_VECTOR (1279 downto
    signal layer_normalization_input_in_sig : STD_LOGIC_VECTOR (1279 downto 0);
    signal layer_normalization_input_ap_vld_preg : STD_LOGIC := '0';
    signal layer_normalization_input_blk_n : STD_LOGIC;
    signal ap_block_pp0_stage0 : BOOLEAN;
    signal ap_block_pp0_stage0_11001 : BOOLEAN;
    signal grp_layernormalize_ap_fixed_16_6_5_3_0_ap_fixed_33_13_5_3_0_config2_s_fu_754_ap_return_0 : STD_LOGIC_VECTOR (32 downto 0);
    signal grp_layernormalize_ap_fixed_16_6_5_3_0_ap_fixed_33_13_5_3_0_config2_s_fu_754_ap_return_1 : STD_LOGIC_VECTOR (32 downto 0);
    signal grp_layernormalize_ap_fixed_16_6_5_3_0_ap_fixed_33_13_5_3_0_config2_s_fu_754_ap_return_2 : STD_LOGIC_VECTOR (32 downto 0);
    signal grp_layernormalize_ap_fixed_16_6_5_3_0_ap_fixed_33_13_5_3_0_config2_s_fu_754_ap_return_3 : STD_LOGIC_VECTOR (32 downto 0);
    signal grp_layernormalize_ap_fixed_16_6_5_3_0_ap_fixed_33_13_5_3_0_config2_s_fu_754_ap_return_4 : STD_LOGIC_VECTOR (32 downto 0);
    signal grp_layernormalize_ap_fixed_16_6_5_3_0_ap_fixed_33_13_5_3_0_config2_s_fu_754_ap_return_5 : STD_LOGIC_VECTOR (32 downto 0);
    signal grp_layernormalize_ap_fixed_16_6_5_3_0_ap_fixed_33_13_5_3_0_config2_s_fu_754_ap_return_6 : STD_LOGIC_VECTOR (32 downto 0);
    signal grp_layernormalize_ap_fixed_16_6_5_3_0_ap_fixed_33_13_5_3_0_config2_s_fu_754_ap_return_7 : STD_LOGIC_VECTOR (32 downto 0);
    signal grp_layernormalize_ap_fixed_16_6_5_3_0_ap_fixed_33_13_5_3_0_config2_s_fu_754_ap_return_8 : STD_LOGIC_VECTOR (32 downto 0);
    signal grp_layernormalize_ap_fixed_16_6_5_3_0_ap_fixed_33_13_5_3_0_config2_s_fu_754_ap_return_9 : STD_LOGIC_VECTOR (32 downto 0);
    signal grp_layernormalize_ap_fixed_16_6_5_3_0_ap_fixed_33_13_5_3_0_config2_s_fu_754_ap_return_10 : STD_LOGIC_VECTOR (32 downto 0);
    signal grp_layernormalize_ap_fixed_16_6_5_3_0_ap_fixed_33_13_5_3_0_config2_s_fu_754_ap_return_11 : STD_LOGIC_VECTOR (32 downto 0);
    signal grp_layernormalize_ap_fixed_16_6_5_3_0_ap_fixed_33_13_5_3_0_config2_s_fu_754_ap_return_12 : STD_LOGIC_VECTOR (32 downto 0);
    signal grp_layernormalize_ap_fixed_16_6_5_3_0_ap_fixed_33_13_5_3_0_config2_s_fu_754_ap_return_13 : STD_LOGIC_VECTOR (32 downto 0);
    signal grp_layernormalize_ap_fixed_16_6_5_3_0_ap_fixed_33_13_5_3_0_config2_s_fu_754_ap_return_14 : STD_LOGIC_VECTOR (32 downto 0);
    signal grp_layernormalize_ap_fixed_16_6_5_3_0_ap_fixed_33_13_5_3_0_config2_s_fu_754_ap_return_15 : STD_LOGIC_VECTOR (32 downto 0);
    signal grp_layernormalize_ap_fixed_16_6_5_3_0_ap_fixed_33_13_5_3_0_config2_s_fu_754_ap_return_16 : STD_LOGIC_VECTOR (32 downto 0);
    signal grp_layernormalize_ap_fixed_16_6_5_3_0_ap_fixed_33_13_5_3_0_config2_s_fu_754_ap_return_17 : STD_LOGIC_VECTOR (32 downto 0);
    signal grp_layernormalize_ap_fixed_16_6_5_3_0_ap_fixed_33_13_5_3_0_config2_s_fu_754_ap_return_18 : STD_LOGIC_VECTOR (32 downto 0);
    signal grp_layernormalize_ap_fixed_16_6_5_3_0_ap_fixed_33_13_5_3_0_config2_s_fu_754_ap_return_19 : STD_LOGIC_VECTOR (32 downto 0);
    signal grp_layernormalize_ap_fixed_16_6_5_3_0_ap_fixed_33_13_5_3_0_config2_s_fu_754_ap_return_20 : STD_LOGIC_VECTOR (32 downto 0);
    signal grp_layernormalize_ap_fixed_16_6_5_3_0_ap_fixed_33_13_5_3_0_config2_s_fu_754_ap_return_21 : STD_LOGIC_VECTOR (32 downto 0);
    signal grp_layernormalize_ap_fixed_16_6_5_3_0_ap_fixed_33_13_5_3_0_config2_s_fu_754_ap_return_22 : STD_LOGIC_VECTOR (32 downto 0);
    signal grp_layernormalize_ap_fixed_16_6_5_3_0_ap_fixed_33_13_5_3_0_config2_s_fu_754_ap_return_23 : STD_LOGIC_VECTOR (32 downto 0);
    signal grp_layernormalize_ap_fixed_16_6_5_3_0_ap_fixed_33_13_5_3_0_config2_s_fu_754_ap_return_24 : STD_LOGIC_VECTOR (32 downto 0);
    signal grp_layernormalize_ap_fixed_16_6_5_3_0_ap_fixed_33_13_5_3_0_config2_s_fu_754_ap_return_25 : STD_LOGIC_VECTOR (32 downto 0);
    signal grp_layernormalize_ap_fixed_16_6_5_3_0_ap_fixed_33_13_5_3_0_config2_s_fu_754_ap_return_26 : STD_LOGIC_VECTOR (32 downto 0);
    signal grp_layernormalize_ap_fixed_16_6_5_3_0_ap_fixed_33_13_5_3_0_config2_s_fu_754_ap_return_27 : STD_LOGIC_VECTOR (32 downto 0);
    signal grp_layernormalize_ap_fixed_16_6_5_3_0_ap_fixed_33_13_5_3_0_config2_s_fu_754_ap_return_28 : STD_LOGIC_VECTOR (32 downto 0);
    signal grp_layernormalize_ap_fixed_16_6_5_3_0_ap_fixed_33_13_5_3_0_config2_s_fu_754_ap_return_29 : STD_LOGIC_VECTOR (32 downto 0);
    signal grp_layernormalize_ap_fixed_16_6_5_3_0_ap_fixed_33_13_5_3_0_config2_s_fu_754_ap_return_30 : STD_LOGIC_VECTOR (32 downto 0);
    signal grp_layernormalize_ap_fixed_16_6_5_3_0_ap_fixed_33_13_5_3_0_config2_s_fu_754_ap_return_31 : STD_LOGIC_VECTOR (32 downto 0);
    signal grp_layernormalize_ap_fixed_16_6_5_3_0_ap_fixed_33_13_5_3_0_config2_s_fu_754_ap_return_32 : STD_LOGIC_VECTOR (32 downto 0);
    signal grp_layernormalize_ap_fixed_16_6_5_3_0_ap_fixed_33_13_5_3_0_config2_s_fu_754_ap_return_33 : STD_LOGIC_VECTOR (32 downto 0);
    signal grp_layernormalize_ap_fixed_16_6_5_3_0_ap_fixed_33_13_5_3_0_config2_s_fu_754_ap_return_34 : STD_LOGIC_VECTOR (32 downto 0);
    signal grp_layernormalize_ap_fixed_16_6_5_3_0_ap_fixed_33_13_5_3_0_config2_s_fu_754_ap_return_35 : STD_LOGIC_VECTOR (32 downto 0);
    signal grp_layernormalize_ap_fixed_16_6_5_3_0_ap_fixed_33_13_5_3_0_config2_s_fu_754_ap_return_36 : STD_LOGIC_VECTOR (32 downto 0);
    signal grp_layernormalize_ap_fixed_16_6_5_3_0_ap_fixed_33_13_5_3_0_config2_s_fu_754_ap_return_37 : STD_LOGIC_VECTOR (32 downto 0);
    signal grp_layernormalize_ap_fixed_16_6_5_3_0_ap_fixed_33_13_5_3_0_config2_s_fu_754_ap_return_38 : STD_LOGIC_VECTOR (32 downto 0);
    signal grp_layernormalize_ap_fixed_16_6_5_3_0_ap_fixed_33_13_5_3_0_config2_s_fu_754_ap_return_39 : STD_LOGIC_VECTOR (32 downto 0);
    signal grp_layernormalize_ap_fixed_16_6_5_3_0_ap_fixed_33_13_5_3_0_config2_s_fu_754_ap_return_40 : STD_LOGIC_VECTOR (32 downto 0);
    signal grp_layernormalize_ap_fixed_16_6_5_3_0_ap_fixed_33_13_5_3_0_config2_s_fu_754_ap_return_41 : STD_LOGIC_VECTOR (32 downto 0);
    signal grp_layernormalize_ap_fixed_16_6_5_3_0_ap_fixed_33_13_5_3_0_config2_s_fu_754_ap_return_42 : STD_LOGIC_VECTOR (32 downto 0);
    signal grp_layernormalize_ap_fixed_16_6_5_3_0_ap_fixed_33_13_5_3_0_config2_s_fu_754_ap_return_43 : STD_LOGIC_VECTOR (32 downto 0);
    signal grp_layernormalize_ap_fixed_16_6_5_3_0_ap_fixed_33_13_5_3_0_config2_s_fu_754_ap_return_44 : STD_LOGIC_VECTOR (32 downto 0);
    signal grp_layernormalize_ap_fixed_16_6_5_3_0_ap_fixed_33_13_5_3_0_config2_s_fu_754_ap_return_45 : STD_LOGIC_VECTOR (32 downto 0);
    signal grp_layernormalize_ap_fixed_16_6_5_3_0_ap_fixed_33_13_5_3_0_config2_s_fu_754_ap_return_46 : STD_LOGIC_VECTOR (32 downto 0);
    signal grp_layernormalize_ap_fixed_16_6_5_3_0_ap_fixed_33_13_5_3_0_config2_s_fu_754_ap_return_47 : STD_LOGIC_VECTOR (32 downto 0);
    signal grp_layernormalize_ap_fixed_16_6_5_3_0_ap_fixed_33_13_5_3_0_config2_s_fu_754_ap_return_48 : STD_LOGIC_VECTOR (32 downto 0);
    signal grp_layernormalize_ap_fixed_16_6_5_3_0_ap_fixed_33_13_5_3_0_config2_s_fu_754_ap_return_49 : STD_LOGIC_VECTOR (32 downto 0);
    signal grp_layernormalize_ap_fixed_16_6_5_3_0_ap_fixed_33_13_5_3_0_config2_s_fu_754_ap_return_50 : STD_LOGIC_VECTOR (32 downto 0);
    signal grp_layernormalize_ap_fixed_16_6_5_3_0_ap_fixed_33_13_5_3_0_config2_s_fu_754_ap_return_51 : STD_LOGIC_VECTOR (32 downto 0);
    signal grp_layernormalize_ap_fixed_16_6_5_3_0_ap_fixed_33_13_5_3_0_config2_s_fu_754_ap_return_52 : STD_LOGIC_VECTOR (32 downto 0);
    signal grp_layernormalize_ap_fixed_16_6_5_3_0_ap_fixed_33_13_5_3_0_config2_s_fu_754_ap_return_53 : STD_LOGIC_VECTOR (32 downto 0);
    signal grp_layernormalize_ap_fixed_16_6_5_3_0_ap_fixed_33_13_5_3_0_config2_s_fu_754_ap_return_54 : STD_LOGIC_VECTOR (32 downto 0);
    signal grp_layernormalize_ap_fixed_16_6_5_3_0_ap_fixed_33_13_5_3_0_config2_s_fu_754_ap_return_55 : STD_LOGIC_VECTOR (32 downto 0);
    signal grp_layernormalize_ap_fixed_16_6_5_3_0_ap_fixed_33_13_5_3_0_config2_s_fu_754_ap_return_56 : STD_LOGIC_VECTOR (32 downto 0);
    signal grp_layernormalize_ap_fixed_16_6_5_3_0_ap_fixed_33_13_5_3_0_config2_s_fu_754_ap_return_57 : STD_LOGIC_VECTOR (32 downto 0);
    signal grp_layernormalize_ap_fixed_16_6_5_3_0_ap_fixed_33_13_5_3_0_config2_s_fu_754_ap_return_58 : STD_LOGIC_VECTOR (32 downto 0);
    signal grp_layernormalize_ap_fixed_16_6_5_3_0_ap_fixed_33_13_5_3_0_config2_s_fu_754_ap_return_59 : STD_LOGIC_VECTOR (32 downto 0);
    signal grp_layernormalize_ap_fixed_16_6_5_3_0_ap_fixed_33_13_5_3_0_config2_s_fu_754_ap_return_60 : STD_LOGIC_VECTOR (32 downto 0);
    signal grp_layernormalize_ap_fixed_16_6_5_3_0_ap_fixed_33_13_5_3_0_config2_s_fu_754_ap_return_61 : STD_LOGIC_VECTOR (32 downto 0);
    signal grp_layernormalize_ap_fixed_16_6_5_3_0_ap_fixed_33_13_5_3_0_config2_s_fu_754_ap_return_62 : STD_LOGIC_VECTOR (32 downto 0);
    signal grp_layernormalize_ap_fixed_16_6_5_3_0_ap_fixed_33_13_5_3_0_config2_s_fu_754_ap_return_63 : STD_LOGIC_VECTOR (32 downto 0);
    signal grp_layernormalize_ap_fixed_16_6_5_3_0_ap_fixed_33_13_5_3_0_config2_s_fu_754_ap_return_64 : STD_LOGIC_VECTOR (32 downto 0);
    signal grp_layernormalize_ap_fixed_16_6_5_3_0_ap_fixed_33_13_5_3_0_config2_s_fu_754_ap_return_65 : STD_LOGIC_VECTOR (32 downto 0);
    signal grp_layernormalize_ap_fixed_16_6_5_3_0_ap_fixed_33_13_5_3_0_config2_s_fu_754_ap_return_66 : STD_LOGIC_VECTOR (32 downto 0);
    signal grp_layernormalize_ap_fixed_16_6_5_3_0_ap_fixed_33_13_5_3_0_config2_s_fu_754_ap_return_67 : STD_LOGIC_VECTOR (32 downto 0);
    signal grp_layernormalize_ap_fixed_16_6_5_3_0_ap_fixed_33_13_5_3_0_config2_s_fu_754_ap_return_68 : STD_LOGIC_VECTOR (32 downto 0);
    signal grp_layernormalize_ap_fixed_16_6_5_3_0_ap_fixed_33_13_5_3_0_config2_s_fu_754_ap_return_69 : STD_LOGIC_VECTOR (32 downto 0);
    signal grp_layernormalize_ap_fixed_16_6_5_3_0_ap_fixed_33_13_5_3_0_config2_s_fu_754_ap_return_70 : STD_LOGIC_VECTOR (32 downto 0);
    signal grp_layernormalize_ap_fixed_16_6_5_3_0_ap_fixed_33_13_5_3_0_config2_s_fu_754_ap_return_71 : STD_LOGIC_VECTOR (32 downto 0);
    signal grp_layernormalize_ap_fixed_16_6_5_3_0_ap_fixed_33_13_5_3_0_config2_s_fu_754_ap_return_72 : STD_LOGIC_VECTOR (32 downto 0);
    signal grp_layernormalize_ap_fixed_16_6_5_3_0_ap_fixed_33_13_5_3_0_config2_s_fu_754_ap_return_73 : STD_LOGIC_VECTOR (32 downto 0);
    signal grp_layernormalize_ap_fixed_16_6_5_3_0_ap_fixed_33_13_5_3_0_config2_s_fu_754_ap_return_74 : STD_LOGIC_VECTOR (32 downto 0);
    signal grp_layernormalize_ap_fixed_16_6_5_3_0_ap_fixed_33_13_5_3_0_config2_s_fu_754_ap_return_75 : STD_LOGIC_VECTOR (32 downto 0);
    signal grp_layernormalize_ap_fixed_16_6_5_3_0_ap_fixed_33_13_5_3_0_config2_s_fu_754_ap_return_76 : STD_LOGIC_VECTOR (32 downto 0);
    signal grp_layernormalize_ap_fixed_16_6_5_3_0_ap_fixed_33_13_5_3_0_config2_s_fu_754_ap_return_77 : STD_LOGIC_VECTOR (32 downto 0);
    signal grp_layernormalize_ap_fixed_16_6_5_3_0_ap_fixed_33_13_5_3_0_config2_s_fu_754_ap_return_78 : STD_LOGIC_VECTOR (32 downto 0);
    signal grp_layernormalize_ap_fixed_16_6_5_3_0_ap_fixed_33_13_5_3_0_config2_s_fu_754_ap_return_79 : STD_LOGIC_VECTOR (32 downto 0);
    signal ap_block_state1_pp0_stage0_iter0_ignore_call165 : BOOLEAN;
    signal ap_block_pp0_stage0_11001_ignoreCallOp8 : BOOLEAN;
    signal ap_block_pp0_stage0_ignoreCallOp8 : BOOLEAN;
    signal ap_block_pp0_stage0_01001 : BOOLEAN;
    signal ap_NS_fsm : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_idle_pp0_0to4 : STD_LOGIC;
    signal ap_reset_idle_pp0 : STD_LOGIC;
    signal ap_enable_pp0 : STD_LOGIC;
    signal frp_pipeline_valid_U_valid_out : STD_LOGIC_VECTOR (5 downto 0);
    signal frp_pipeline_valid_U_num_valid_datasets : STD_LOGIC_VECTOR (3 downto 0);
    signal pf_layer2_out_0_U_data_out : STD_LOGIC_VECTOR (32 downto 0);
    signal pf_layer2_out_0_U_data_out_vld : STD_LOGIC;
    signal pf_layer2_out_0_U_pf_ready : STD_LOGIC;
    signal pf_layer2_out_0_U_pf_done : STD_LOGIC;
    signal pf_layer2_out_10_U_data_out : STD_LOGIC_VECTOR (32 downto 0);
    signal pf_layer2_out_10_U_data_out_vld : STD_LOGIC;
    signal pf_layer2_out_10_U_pf_ready : STD_LOGIC;
    signal pf_layer2_out_10_U_pf_done : STD_LOGIC;
    signal pf_layer2_out_11_U_data_out : STD_LOGIC_VECTOR (32 downto 0);
    signal pf_layer2_out_11_U_data_out_vld : STD_LOGIC;
    signal pf_layer2_out_11_U_pf_ready : STD_LOGIC;
    signal pf_layer2_out_11_U_pf_done : STD_LOGIC;
    signal pf_layer2_out_12_U_data_out : STD_LOGIC_VECTOR (32 downto 0);
    signal pf_layer2_out_12_U_data_out_vld : STD_LOGIC;
    signal pf_layer2_out_12_U_pf_ready : STD_LOGIC;
    signal pf_layer2_out_12_U_pf_done : STD_LOGIC;
    signal pf_layer2_out_13_U_data_out : STD_LOGIC_VECTOR (32 downto 0);
    signal pf_layer2_out_13_U_data_out_vld : STD_LOGIC;
    signal pf_layer2_out_13_U_pf_ready : STD_LOGIC;
    signal pf_layer2_out_13_U_pf_done : STD_LOGIC;
    signal pf_layer2_out_14_U_data_out : STD_LOGIC_VECTOR (32 downto 0);
    signal pf_layer2_out_14_U_data_out_vld : STD_LOGIC;
    signal pf_layer2_out_14_U_pf_ready : STD_LOGIC;
    signal pf_layer2_out_14_U_pf_done : STD_LOGIC;
    signal pf_layer2_out_15_U_data_out : STD_LOGIC_VECTOR (32 downto 0);
    signal pf_layer2_out_15_U_data_out_vld : STD_LOGIC;
    signal pf_layer2_out_15_U_pf_ready : STD_LOGIC;
    signal pf_layer2_out_15_U_pf_done : STD_LOGIC;
    signal pf_layer2_out_16_U_data_out : STD_LOGIC_VECTOR (32 downto 0);
    signal pf_layer2_out_16_U_data_out_vld : STD_LOGIC;
    signal pf_layer2_out_16_U_pf_ready : STD_LOGIC;
    signal pf_layer2_out_16_U_pf_done : STD_LOGIC;
    signal pf_layer2_out_17_U_data_out : STD_LOGIC_VECTOR (32 downto 0);
    signal pf_layer2_out_17_U_data_out_vld : STD_LOGIC;
    signal pf_layer2_out_17_U_pf_ready : STD_LOGIC;
    signal pf_layer2_out_17_U_pf_done : STD_LOGIC;
    signal pf_layer2_out_18_U_data_out : STD_LOGIC_VECTOR (32 downto 0);
    signal pf_layer2_out_18_U_data_out_vld : STD_LOGIC;
    signal pf_layer2_out_18_U_pf_ready : STD_LOGIC;
    signal pf_layer2_out_18_U_pf_done : STD_LOGIC;
    signal pf_layer2_out_19_U_data_out : STD_LOGIC_VECTOR (32 downto 0);
    signal pf_layer2_out_19_U_data_out_vld : STD_LOGIC;
    signal pf_layer2_out_19_U_pf_ready : STD_LOGIC;
    signal pf_layer2_out_19_U_pf_done : STD_LOGIC;
    signal pf_layer2_out_1_U_data_out : STD_LOGIC_VECTOR (32 downto 0);
    signal pf_layer2_out_1_U_data_out_vld : STD_LOGIC;
    signal pf_layer2_out_1_U_pf_ready : STD_LOGIC;
    signal pf_layer2_out_1_U_pf_done : STD_LOGIC;
    signal pf_layer2_out_20_U_data_out : STD_LOGIC_VECTOR (32 downto 0);
    signal pf_layer2_out_20_U_data_out_vld : STD_LOGIC;
    signal pf_layer2_out_20_U_pf_ready : STD_LOGIC;
    signal pf_layer2_out_20_U_pf_done : STD_LOGIC;
    signal pf_layer2_out_21_U_data_out : STD_LOGIC_VECTOR (32 downto 0);
    signal pf_layer2_out_21_U_data_out_vld : STD_LOGIC;
    signal pf_layer2_out_21_U_pf_ready : STD_LOGIC;
    signal pf_layer2_out_21_U_pf_done : STD_LOGIC;
    signal pf_layer2_out_22_U_data_out : STD_LOGIC_VECTOR (32 downto 0);
    signal pf_layer2_out_22_U_data_out_vld : STD_LOGIC;
    signal pf_layer2_out_22_U_pf_ready : STD_LOGIC;
    signal pf_layer2_out_22_U_pf_done : STD_LOGIC;
    signal pf_layer2_out_23_U_data_out : STD_LOGIC_VECTOR (32 downto 0);
    signal pf_layer2_out_23_U_data_out_vld : STD_LOGIC;
    signal pf_layer2_out_23_U_pf_ready : STD_LOGIC;
    signal pf_layer2_out_23_U_pf_done : STD_LOGIC;
    signal pf_layer2_out_24_U_data_out : STD_LOGIC_VECTOR (32 downto 0);
    signal pf_layer2_out_24_U_data_out_vld : STD_LOGIC;
    signal pf_layer2_out_24_U_pf_ready : STD_LOGIC;
    signal pf_layer2_out_24_U_pf_done : STD_LOGIC;
    signal pf_layer2_out_25_U_data_out : STD_LOGIC_VECTOR (32 downto 0);
    signal pf_layer2_out_25_U_data_out_vld : STD_LOGIC;
    signal pf_layer2_out_25_U_pf_ready : STD_LOGIC;
    signal pf_layer2_out_25_U_pf_done : STD_LOGIC;
    signal pf_layer2_out_26_U_data_out : STD_LOGIC_VECTOR (32 downto 0);
    signal pf_layer2_out_26_U_data_out_vld : STD_LOGIC;
    signal pf_layer2_out_26_U_pf_ready : STD_LOGIC;
    signal pf_layer2_out_26_U_pf_done : STD_LOGIC;
    signal pf_layer2_out_27_U_data_out : STD_LOGIC_VECTOR (32 downto 0);
    signal pf_layer2_out_27_U_data_out_vld : STD_LOGIC;
    signal pf_layer2_out_27_U_pf_ready : STD_LOGIC;
    signal pf_layer2_out_27_U_pf_done : STD_LOGIC;
    signal pf_layer2_out_28_U_data_out : STD_LOGIC_VECTOR (32 downto 0);
    signal pf_layer2_out_28_U_data_out_vld : STD_LOGIC;
    signal pf_layer2_out_28_U_pf_ready : STD_LOGIC;
    signal pf_layer2_out_28_U_pf_done : STD_LOGIC;
    signal pf_layer2_out_29_U_data_out : STD_LOGIC_VECTOR (32 downto 0);
    signal pf_layer2_out_29_U_data_out_vld : STD_LOGIC;
    signal pf_layer2_out_29_U_pf_ready : STD_LOGIC;
    signal pf_layer2_out_29_U_pf_done : STD_LOGIC;
    signal pf_layer2_out_2_U_data_out : STD_LOGIC_VECTOR (32 downto 0);
    signal pf_layer2_out_2_U_data_out_vld : STD_LOGIC;
    signal pf_layer2_out_2_U_pf_ready : STD_LOGIC;
    signal pf_layer2_out_2_U_pf_done : STD_LOGIC;
    signal pf_layer2_out_30_U_data_out : STD_LOGIC_VECTOR (32 downto 0);
    signal pf_layer2_out_30_U_data_out_vld : STD_LOGIC;
    signal pf_layer2_out_30_U_pf_ready : STD_LOGIC;
    signal pf_layer2_out_30_U_pf_done : STD_LOGIC;
    signal pf_layer2_out_31_U_data_out : STD_LOGIC_VECTOR (32 downto 0);
    signal pf_layer2_out_31_U_data_out_vld : STD_LOGIC;
    signal pf_layer2_out_31_U_pf_ready : STD_LOGIC;
    signal pf_layer2_out_31_U_pf_done : STD_LOGIC;
    signal pf_layer2_out_32_U_data_out : STD_LOGIC_VECTOR (32 downto 0);
    signal pf_layer2_out_32_U_data_out_vld : STD_LOGIC;
    signal pf_layer2_out_32_U_pf_ready : STD_LOGIC;
    signal pf_layer2_out_32_U_pf_done : STD_LOGIC;
    signal pf_layer2_out_33_U_data_out : STD_LOGIC_VECTOR (32 downto 0);
    signal pf_layer2_out_33_U_data_out_vld : STD_LOGIC;
    signal pf_layer2_out_33_U_pf_ready : STD_LOGIC;
    signal pf_layer2_out_33_U_pf_done : STD_LOGIC;
    signal pf_layer2_out_34_U_data_out : STD_LOGIC_VECTOR (32 downto 0);
    signal pf_layer2_out_34_U_data_out_vld : STD_LOGIC;
    signal pf_layer2_out_34_U_pf_ready : STD_LOGIC;
    signal pf_layer2_out_34_U_pf_done : STD_LOGIC;
    signal pf_layer2_out_35_U_data_out : STD_LOGIC_VECTOR (32 downto 0);
    signal pf_layer2_out_35_U_data_out_vld : STD_LOGIC;
    signal pf_layer2_out_35_U_pf_ready : STD_LOGIC;
    signal pf_layer2_out_35_U_pf_done : STD_LOGIC;
    signal pf_layer2_out_36_U_data_out : STD_LOGIC_VECTOR (32 downto 0);
    signal pf_layer2_out_36_U_data_out_vld : STD_LOGIC;
    signal pf_layer2_out_36_U_pf_ready : STD_LOGIC;
    signal pf_layer2_out_36_U_pf_done : STD_LOGIC;
    signal pf_layer2_out_37_U_data_out : STD_LOGIC_VECTOR (32 downto 0);
    signal pf_layer2_out_37_U_data_out_vld : STD_LOGIC;
    signal pf_layer2_out_37_U_pf_ready : STD_LOGIC;
    signal pf_layer2_out_37_U_pf_done : STD_LOGIC;
    signal pf_layer2_out_38_U_data_out : STD_LOGIC_VECTOR (32 downto 0);
    signal pf_layer2_out_38_U_data_out_vld : STD_LOGIC;
    signal pf_layer2_out_38_U_pf_ready : STD_LOGIC;
    signal pf_layer2_out_38_U_pf_done : STD_LOGIC;
    signal pf_layer2_out_39_U_data_out : STD_LOGIC_VECTOR (32 downto 0);
    signal pf_layer2_out_39_U_data_out_vld : STD_LOGIC;
    signal pf_layer2_out_39_U_pf_ready : STD_LOGIC;
    signal pf_layer2_out_39_U_pf_done : STD_LOGIC;
    signal pf_layer2_out_3_U_data_out : STD_LOGIC_VECTOR (32 downto 0);
    signal pf_layer2_out_3_U_data_out_vld : STD_LOGIC;
    signal pf_layer2_out_3_U_pf_ready : STD_LOGIC;
    signal pf_layer2_out_3_U_pf_done : STD_LOGIC;
    signal pf_layer2_out_40_U_data_out : STD_LOGIC_VECTOR (32 downto 0);
    signal pf_layer2_out_40_U_data_out_vld : STD_LOGIC;
    signal pf_layer2_out_40_U_pf_ready : STD_LOGIC;
    signal pf_layer2_out_40_U_pf_done : STD_LOGIC;
    signal pf_layer2_out_41_U_data_out : STD_LOGIC_VECTOR (32 downto 0);
    signal pf_layer2_out_41_U_data_out_vld : STD_LOGIC;
    signal pf_layer2_out_41_U_pf_ready : STD_LOGIC;
    signal pf_layer2_out_41_U_pf_done : STD_LOGIC;
    signal pf_layer2_out_42_U_data_out : STD_LOGIC_VECTOR (32 downto 0);
    signal pf_layer2_out_42_U_data_out_vld : STD_LOGIC;
    signal pf_layer2_out_42_U_pf_ready : STD_LOGIC;
    signal pf_layer2_out_42_U_pf_done : STD_LOGIC;
    signal pf_layer2_out_43_U_data_out : STD_LOGIC_VECTOR (32 downto 0);
    signal pf_layer2_out_43_U_data_out_vld : STD_LOGIC;
    signal pf_layer2_out_43_U_pf_ready : STD_LOGIC;
    signal pf_layer2_out_43_U_pf_done : STD_LOGIC;
    signal pf_layer2_out_44_U_data_out : STD_LOGIC_VECTOR (32 downto 0);
    signal pf_layer2_out_44_U_data_out_vld : STD_LOGIC;
    signal pf_layer2_out_44_U_pf_ready : STD_LOGIC;
    signal pf_layer2_out_44_U_pf_done : STD_LOGIC;
    signal pf_layer2_out_45_U_data_out : STD_LOGIC_VECTOR (32 downto 0);
    signal pf_layer2_out_45_U_data_out_vld : STD_LOGIC;
    signal pf_layer2_out_45_U_pf_ready : STD_LOGIC;
    signal pf_layer2_out_45_U_pf_done : STD_LOGIC;
    signal pf_layer2_out_46_U_data_out : STD_LOGIC_VECTOR (32 downto 0);
    signal pf_layer2_out_46_U_data_out_vld : STD_LOGIC;
    signal pf_layer2_out_46_U_pf_ready : STD_LOGIC;
    signal pf_layer2_out_46_U_pf_done : STD_LOGIC;
    signal pf_layer2_out_47_U_data_out : STD_LOGIC_VECTOR (32 downto 0);
    signal pf_layer2_out_47_U_data_out_vld : STD_LOGIC;
    signal pf_layer2_out_47_U_pf_ready : STD_LOGIC;
    signal pf_layer2_out_47_U_pf_done : STD_LOGIC;
    signal pf_layer2_out_48_U_data_out : STD_LOGIC_VECTOR (32 downto 0);
    signal pf_layer2_out_48_U_data_out_vld : STD_LOGIC;
    signal pf_layer2_out_48_U_pf_ready : STD_LOGIC;
    signal pf_layer2_out_48_U_pf_done : STD_LOGIC;
    signal pf_layer2_out_49_U_data_out : STD_LOGIC_VECTOR (32 downto 0);
    signal pf_layer2_out_49_U_data_out_vld : STD_LOGIC;
    signal pf_layer2_out_49_U_pf_ready : STD_LOGIC;
    signal pf_layer2_out_49_U_pf_done : STD_LOGIC;
    signal pf_layer2_out_4_U_data_out : STD_LOGIC_VECTOR (32 downto 0);
    signal pf_layer2_out_4_U_data_out_vld : STD_LOGIC;
    signal pf_layer2_out_4_U_pf_ready : STD_LOGIC;
    signal pf_layer2_out_4_U_pf_done : STD_LOGIC;
    signal pf_layer2_out_50_U_data_out : STD_LOGIC_VECTOR (32 downto 0);
    signal pf_layer2_out_50_U_data_out_vld : STD_LOGIC;
    signal pf_layer2_out_50_U_pf_ready : STD_LOGIC;
    signal pf_layer2_out_50_U_pf_done : STD_LOGIC;
    signal pf_layer2_out_51_U_data_out : STD_LOGIC_VECTOR (32 downto 0);
    signal pf_layer2_out_51_U_data_out_vld : STD_LOGIC;
    signal pf_layer2_out_51_U_pf_ready : STD_LOGIC;
    signal pf_layer2_out_51_U_pf_done : STD_LOGIC;
    signal pf_layer2_out_52_U_data_out : STD_LOGIC_VECTOR (32 downto 0);
    signal pf_layer2_out_52_U_data_out_vld : STD_LOGIC;
    signal pf_layer2_out_52_U_pf_ready : STD_LOGIC;
    signal pf_layer2_out_52_U_pf_done : STD_LOGIC;
    signal pf_layer2_out_53_U_data_out : STD_LOGIC_VECTOR (32 downto 0);
    signal pf_layer2_out_53_U_data_out_vld : STD_LOGIC;
    signal pf_layer2_out_53_U_pf_ready : STD_LOGIC;
    signal pf_layer2_out_53_U_pf_done : STD_LOGIC;
    signal pf_layer2_out_54_U_data_out : STD_LOGIC_VECTOR (32 downto 0);
    signal pf_layer2_out_54_U_data_out_vld : STD_LOGIC;
    signal pf_layer2_out_54_U_pf_ready : STD_LOGIC;
    signal pf_layer2_out_54_U_pf_done : STD_LOGIC;
    signal pf_layer2_out_55_U_data_out : STD_LOGIC_VECTOR (32 downto 0);
    signal pf_layer2_out_55_U_data_out_vld : STD_LOGIC;
    signal pf_layer2_out_55_U_pf_ready : STD_LOGIC;
    signal pf_layer2_out_55_U_pf_done : STD_LOGIC;
    signal pf_layer2_out_56_U_data_out : STD_LOGIC_VECTOR (32 downto 0);
    signal pf_layer2_out_56_U_data_out_vld : STD_LOGIC;
    signal pf_layer2_out_56_U_pf_ready : STD_LOGIC;
    signal pf_layer2_out_56_U_pf_done : STD_LOGIC;
    signal pf_layer2_out_57_U_data_out : STD_LOGIC_VECTOR (32 downto 0);
    signal pf_layer2_out_57_U_data_out_vld : STD_LOGIC;
    signal pf_layer2_out_57_U_pf_ready : STD_LOGIC;
    signal pf_layer2_out_57_U_pf_done : STD_LOGIC;
    signal pf_layer2_out_58_U_data_out : STD_LOGIC_VECTOR (32 downto 0);
    signal pf_layer2_out_58_U_data_out_vld : STD_LOGIC;
    signal pf_layer2_out_58_U_pf_ready : STD_LOGIC;
    signal pf_layer2_out_58_U_pf_done : STD_LOGIC;
    signal pf_layer2_out_59_U_data_out : STD_LOGIC_VECTOR (32 downto 0);
    signal pf_layer2_out_59_U_data_out_vld : STD_LOGIC;
    signal pf_layer2_out_59_U_pf_ready : STD_LOGIC;
    signal pf_layer2_out_59_U_pf_done : STD_LOGIC;
    signal pf_layer2_out_5_U_data_out : STD_LOGIC_VECTOR (32 downto 0);
    signal pf_layer2_out_5_U_data_out_vld : STD_LOGIC;
    signal pf_layer2_out_5_U_pf_ready : STD_LOGIC;
    signal pf_layer2_out_5_U_pf_done : STD_LOGIC;
    signal pf_layer2_out_60_U_data_out : STD_LOGIC_VECTOR (32 downto 0);
    signal pf_layer2_out_60_U_data_out_vld : STD_LOGIC;
    signal pf_layer2_out_60_U_pf_ready : STD_LOGIC;
    signal pf_layer2_out_60_U_pf_done : STD_LOGIC;
    signal pf_layer2_out_61_U_data_out : STD_LOGIC_VECTOR (32 downto 0);
    signal pf_layer2_out_61_U_data_out_vld : STD_LOGIC;
    signal pf_layer2_out_61_U_pf_ready : STD_LOGIC;
    signal pf_layer2_out_61_U_pf_done : STD_LOGIC;
    signal pf_layer2_out_62_U_data_out : STD_LOGIC_VECTOR (32 downto 0);
    signal pf_layer2_out_62_U_data_out_vld : STD_LOGIC;
    signal pf_layer2_out_62_U_pf_ready : STD_LOGIC;
    signal pf_layer2_out_62_U_pf_done : STD_LOGIC;
    signal pf_layer2_out_63_U_data_out : STD_LOGIC_VECTOR (32 downto 0);
    signal pf_layer2_out_63_U_data_out_vld : STD_LOGIC;
    signal pf_layer2_out_63_U_pf_ready : STD_LOGIC;
    signal pf_layer2_out_63_U_pf_done : STD_LOGIC;
    signal pf_layer2_out_64_U_data_out : STD_LOGIC_VECTOR (32 downto 0);
    signal pf_layer2_out_64_U_data_out_vld : STD_LOGIC;
    signal pf_layer2_out_64_U_pf_ready : STD_LOGIC;
    signal pf_layer2_out_64_U_pf_done : STD_LOGIC;
    signal pf_layer2_out_65_U_data_out : STD_LOGIC_VECTOR (32 downto 0);
    signal pf_layer2_out_65_U_data_out_vld : STD_LOGIC;
    signal pf_layer2_out_65_U_pf_ready : STD_LOGIC;
    signal pf_layer2_out_65_U_pf_done : STD_LOGIC;
    signal pf_layer2_out_66_U_data_out : STD_LOGIC_VECTOR (32 downto 0);
    signal pf_layer2_out_66_U_data_out_vld : STD_LOGIC;
    signal pf_layer2_out_66_U_pf_ready : STD_LOGIC;
    signal pf_layer2_out_66_U_pf_done : STD_LOGIC;
    signal pf_layer2_out_67_U_data_out : STD_LOGIC_VECTOR (32 downto 0);
    signal pf_layer2_out_67_U_data_out_vld : STD_LOGIC;
    signal pf_layer2_out_67_U_pf_ready : STD_LOGIC;
    signal pf_layer2_out_67_U_pf_done : STD_LOGIC;
    signal pf_layer2_out_68_U_data_out : STD_LOGIC_VECTOR (32 downto 0);
    signal pf_layer2_out_68_U_data_out_vld : STD_LOGIC;
    signal pf_layer2_out_68_U_pf_ready : STD_LOGIC;
    signal pf_layer2_out_68_U_pf_done : STD_LOGIC;
    signal pf_layer2_out_69_U_data_out : STD_LOGIC_VECTOR (32 downto 0);
    signal pf_layer2_out_69_U_data_out_vld : STD_LOGIC;
    signal pf_layer2_out_69_U_pf_ready : STD_LOGIC;
    signal pf_layer2_out_69_U_pf_done : STD_LOGIC;
    signal pf_layer2_out_6_U_data_out : STD_LOGIC_VECTOR (32 downto 0);
    signal pf_layer2_out_6_U_data_out_vld : STD_LOGIC;
    signal pf_layer2_out_6_U_pf_ready : STD_LOGIC;
    signal pf_layer2_out_6_U_pf_done : STD_LOGIC;
    signal pf_layer2_out_70_U_data_out : STD_LOGIC_VECTOR (32 downto 0);
    signal pf_layer2_out_70_U_data_out_vld : STD_LOGIC;
    signal pf_layer2_out_70_U_pf_ready : STD_LOGIC;
    signal pf_layer2_out_70_U_pf_done : STD_LOGIC;
    signal pf_layer2_out_71_U_data_out : STD_LOGIC_VECTOR (32 downto 0);
    signal pf_layer2_out_71_U_data_out_vld : STD_LOGIC;
    signal pf_layer2_out_71_U_pf_ready : STD_LOGIC;
    signal pf_layer2_out_71_U_pf_done : STD_LOGIC;
    signal pf_layer2_out_72_U_data_out : STD_LOGIC_VECTOR (32 downto 0);
    signal pf_layer2_out_72_U_data_out_vld : STD_LOGIC;
    signal pf_layer2_out_72_U_pf_ready : STD_LOGIC;
    signal pf_layer2_out_72_U_pf_done : STD_LOGIC;
    signal pf_layer2_out_73_U_data_out : STD_LOGIC_VECTOR (32 downto 0);
    signal pf_layer2_out_73_U_data_out_vld : STD_LOGIC;
    signal pf_layer2_out_73_U_pf_ready : STD_LOGIC;
    signal pf_layer2_out_73_U_pf_done : STD_LOGIC;
    signal pf_layer2_out_74_U_data_out : STD_LOGIC_VECTOR (32 downto 0);
    signal pf_layer2_out_74_U_data_out_vld : STD_LOGIC;
    signal pf_layer2_out_74_U_pf_ready : STD_LOGIC;
    signal pf_layer2_out_74_U_pf_done : STD_LOGIC;
    signal pf_layer2_out_75_U_data_out : STD_LOGIC_VECTOR (32 downto 0);
    signal pf_layer2_out_75_U_data_out_vld : STD_LOGIC;
    signal pf_layer2_out_75_U_pf_ready : STD_LOGIC;
    signal pf_layer2_out_75_U_pf_done : STD_LOGIC;
    signal pf_layer2_out_76_U_data_out : STD_LOGIC_VECTOR (32 downto 0);
    signal pf_layer2_out_76_U_data_out_vld : STD_LOGIC;
    signal pf_layer2_out_76_U_pf_ready : STD_LOGIC;
    signal pf_layer2_out_76_U_pf_done : STD_LOGIC;
    signal pf_layer2_out_77_U_data_out : STD_LOGIC_VECTOR (32 downto 0);
    signal pf_layer2_out_77_U_data_out_vld : STD_LOGIC;
    signal pf_layer2_out_77_U_pf_ready : STD_LOGIC;
    signal pf_layer2_out_77_U_pf_done : STD_LOGIC;
    signal pf_layer2_out_78_U_data_out : STD_LOGIC_VECTOR (32 downto 0);
    signal pf_layer2_out_78_U_data_out_vld : STD_LOGIC;
    signal pf_layer2_out_78_U_pf_ready : STD_LOGIC;
    signal pf_layer2_out_78_U_pf_done : STD_LOGIC;
    signal pf_layer2_out_79_U_data_out : STD_LOGIC_VECTOR (32 downto 0);
    signal pf_layer2_out_79_U_data_out_vld : STD_LOGIC;
    signal pf_layer2_out_79_U_pf_ready : STD_LOGIC;
    signal pf_layer2_out_79_U_pf_done : STD_LOGIC;
    signal pf_layer2_out_7_U_data_out : STD_LOGIC_VECTOR (32 downto 0);
    signal pf_layer2_out_7_U_data_out_vld : STD_LOGIC;
    signal pf_layer2_out_7_U_pf_ready : STD_LOGIC;
    signal pf_layer2_out_7_U_pf_done : STD_LOGIC;
    signal pf_layer2_out_8_U_data_out : STD_LOGIC_VECTOR (32 downto 0);
    signal pf_layer2_out_8_U_data_out_vld : STD_LOGIC;
    signal pf_layer2_out_8_U_pf_ready : STD_LOGIC;
    signal pf_layer2_out_8_U_pf_done : STD_LOGIC;
    signal pf_layer2_out_9_U_data_out : STD_LOGIC_VECTOR (32 downto 0);
    signal pf_layer2_out_9_U_data_out_vld : STD_LOGIC;
    signal pf_layer2_out_9_U_pf_ready : STD_LOGIC;
    signal pf_layer2_out_9_U_pf_done : STD_LOGIC;
    signal pf_data_in_last : STD_LOGIC;
    signal ap_condition_frp_pvb_no_fwd_prs : BOOLEAN;
    signal ap_condition_frp_pvb_no_bkwd_prs : BOOLEAN;
    signal ap_condition_frp_pvb_pf_start : BOOLEAN;
    signal ap_frp_vld_in : STD_LOGIC;
    signal pf_layer2_out_0_U_data_in_vld : STD_LOGIC;
    signal pf_sync_continue : STD_LOGIC;
    signal pf_all_done : STD_LOGIC := '0';
    signal pf_layer2_out_10_U_data_in_vld : STD_LOGIC;
    signal pf_layer2_out_11_U_data_in_vld : STD_LOGIC;
    signal pf_layer2_out_12_U_data_in_vld : STD_LOGIC;
    signal pf_layer2_out_13_U_data_in_vld : STD_LOGIC;
    signal pf_layer2_out_14_U_data_in_vld : STD_LOGIC;
    signal pf_layer2_out_15_U_data_in_vld : STD_LOGIC;
    signal pf_layer2_out_16_U_data_in_vld : STD_LOGIC;
    signal pf_layer2_out_17_U_data_in_vld : STD_LOGIC;
    signal pf_layer2_out_18_U_data_in_vld : STD_LOGIC;
    signal pf_layer2_out_19_U_data_in_vld : STD_LOGIC;
    signal pf_layer2_out_1_U_data_in_vld : STD_LOGIC;
    signal pf_layer2_out_20_U_data_in_vld : STD_LOGIC;
    signal pf_layer2_out_21_U_data_in_vld : STD_LOGIC;
    signal pf_layer2_out_22_U_data_in_vld : STD_LOGIC;
    signal pf_layer2_out_23_U_data_in_vld : STD_LOGIC;
    signal pf_layer2_out_24_U_data_in_vld : STD_LOGIC;
    signal pf_layer2_out_25_U_data_in_vld : STD_LOGIC;
    signal pf_layer2_out_26_U_data_in_vld : STD_LOGIC;
    signal pf_layer2_out_27_U_data_in_vld : STD_LOGIC;
    signal pf_layer2_out_28_U_data_in_vld : STD_LOGIC;
    signal pf_layer2_out_29_U_data_in_vld : STD_LOGIC;
    signal pf_layer2_out_2_U_data_in_vld : STD_LOGIC;
    signal pf_layer2_out_30_U_data_in_vld : STD_LOGIC;
    signal pf_layer2_out_31_U_data_in_vld : STD_LOGIC;
    signal pf_layer2_out_32_U_data_in_vld : STD_LOGIC;
    signal pf_layer2_out_33_U_data_in_vld : STD_LOGIC;
    signal pf_layer2_out_34_U_data_in_vld : STD_LOGIC;
    signal pf_layer2_out_35_U_data_in_vld : STD_LOGIC;
    signal pf_layer2_out_36_U_data_in_vld : STD_LOGIC;
    signal pf_layer2_out_37_U_data_in_vld : STD_LOGIC;
    signal pf_layer2_out_38_U_data_in_vld : STD_LOGIC;
    signal pf_layer2_out_39_U_data_in_vld : STD_LOGIC;
    signal pf_layer2_out_3_U_data_in_vld : STD_LOGIC;
    signal pf_layer2_out_40_U_data_in_vld : STD_LOGIC;
    signal pf_layer2_out_41_U_data_in_vld : STD_LOGIC;
    signal pf_layer2_out_42_U_data_in_vld : STD_LOGIC;
    signal pf_layer2_out_43_U_data_in_vld : STD_LOGIC;
    signal pf_layer2_out_44_U_data_in_vld : STD_LOGIC;
    signal pf_layer2_out_45_U_data_in_vld : STD_LOGIC;
    signal pf_layer2_out_46_U_data_in_vld : STD_LOGIC;
    signal pf_layer2_out_47_U_data_in_vld : STD_LOGIC;
    signal pf_layer2_out_48_U_data_in_vld : STD_LOGIC;
    signal pf_layer2_out_49_U_data_in_vld : STD_LOGIC;
    signal pf_layer2_out_4_U_data_in_vld : STD_LOGIC;
    signal pf_layer2_out_50_U_data_in_vld : STD_LOGIC;
    signal pf_layer2_out_51_U_data_in_vld : STD_LOGIC;
    signal pf_layer2_out_52_U_data_in_vld : STD_LOGIC;
    signal pf_layer2_out_53_U_data_in_vld : STD_LOGIC;
    signal pf_layer2_out_54_U_data_in_vld : STD_LOGIC;
    signal pf_layer2_out_55_U_data_in_vld : STD_LOGIC;
    signal pf_layer2_out_56_U_data_in_vld : STD_LOGIC;
    signal pf_layer2_out_57_U_data_in_vld : STD_LOGIC;
    signal pf_layer2_out_58_U_data_in_vld : STD_LOGIC;
    signal pf_layer2_out_59_U_data_in_vld : STD_LOGIC;
    signal pf_layer2_out_5_U_data_in_vld : STD_LOGIC;
    signal pf_layer2_out_60_U_data_in_vld : STD_LOGIC;
    signal pf_layer2_out_61_U_data_in_vld : STD_LOGIC;
    signal pf_layer2_out_62_U_data_in_vld : STD_LOGIC;
    signal pf_layer2_out_63_U_data_in_vld : STD_LOGIC;
    signal pf_layer2_out_64_U_data_in_vld : STD_LOGIC;
    signal pf_layer2_out_65_U_data_in_vld : STD_LOGIC;
    signal pf_layer2_out_66_U_data_in_vld : STD_LOGIC;
    signal pf_layer2_out_67_U_data_in_vld : STD_LOGIC;
    signal pf_layer2_out_68_U_data_in_vld : STD_LOGIC;
    signal pf_layer2_out_69_U_data_in_vld : STD_LOGIC;
    signal pf_layer2_out_6_U_data_in_vld : STD_LOGIC;
    signal pf_layer2_out_70_U_data_in_vld : STD_LOGIC;
    signal pf_layer2_out_71_U_data_in_vld : STD_LOGIC;
    signal pf_layer2_out_72_U_data_in_vld : STD_LOGIC;
    signal pf_layer2_out_73_U_data_in_vld : STD_LOGIC;
    signal pf_layer2_out_74_U_data_in_vld : STD_LOGIC;
    signal pf_layer2_out_75_U_data_in_vld : STD_LOGIC;
    signal pf_layer2_out_76_U_data_in_vld : STD_LOGIC;
    signal pf_layer2_out_77_U_data_in_vld : STD_LOGIC;
    signal pf_layer2_out_78_U_data_in_vld : STD_LOGIC;
    signal pf_layer2_out_79_U_data_in_vld : STD_LOGIC;
    signal pf_layer2_out_7_U_data_in_vld : STD_LOGIC;
    signal pf_layer2_out_8_U_data_in_vld : STD_LOGIC;
    signal pf_layer2_out_9_U_data_in_vld : STD_LOGIC;
    signal frp_valid_for_ap_ready : STD_LOGIC;
    signal ap_ce_reg : STD_LOGIC;

    component myproject_layernormalize_ap_fixed_16_6_5_3_0_ap_fixed_33_13_5_3_0_config2_s IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        data_val : IN STD_LOGIC_VECTOR (1279 downto 0);
        ap_return_0 : OUT STD_LOGIC_VECTOR (32 downto 0);
        ap_return_1 : OUT STD_LOGIC_VECTOR (32 downto 0);
        ap_return_2 : OUT STD_LOGIC_VECTOR (32 downto 0);
        ap_return_3 : OUT STD_LOGIC_VECTOR (32 downto 0);
        ap_return_4 : OUT STD_LOGIC_VECTOR (32 downto 0);
        ap_return_5 : OUT STD_LOGIC_VECTOR (32 downto 0);
        ap_return_6 : OUT STD_LOGIC_VECTOR (32 downto 0);
        ap_return_7 : OUT STD_LOGIC_VECTOR (32 downto 0);
        ap_return_8 : OUT STD_LOGIC_VECTOR (32 downto 0);
        ap_return_9 : OUT STD_LOGIC_VECTOR (32 downto 0);
        ap_return_10 : OUT STD_LOGIC_VECTOR (32 downto 0);
        ap_return_11 : OUT STD_LOGIC_VECTOR (32 downto 0);
        ap_return_12 : OUT STD_LOGIC_VECTOR (32 downto 0);
        ap_return_13 : OUT STD_LOGIC_VECTOR (32 downto 0);
        ap_return_14 : OUT STD_LOGIC_VECTOR (32 downto 0);
        ap_return_15 : OUT STD_LOGIC_VECTOR (32 downto 0);
        ap_return_16 : OUT STD_LOGIC_VECTOR (32 downto 0);
        ap_return_17 : OUT STD_LOGIC_VECTOR (32 downto 0);
        ap_return_18 : OUT STD_LOGIC_VECTOR (32 downto 0);
        ap_return_19 : OUT STD_LOGIC_VECTOR (32 downto 0);
        ap_return_20 : OUT STD_LOGIC_VECTOR (32 downto 0);
        ap_return_21 : OUT STD_LOGIC_VECTOR (32 downto 0);
        ap_return_22 : OUT STD_LOGIC_VECTOR (32 downto 0);
        ap_return_23 : OUT STD_LOGIC_VECTOR (32 downto 0);
        ap_return_24 : OUT STD_LOGIC_VECTOR (32 downto 0);
        ap_return_25 : OUT STD_LOGIC_VECTOR (32 downto 0);
        ap_return_26 : OUT STD_LOGIC_VECTOR (32 downto 0);
        ap_return_27 : OUT STD_LOGIC_VECTOR (32 downto 0);
        ap_return_28 : OUT STD_LOGIC_VECTOR (32 downto 0);
        ap_return_29 : OUT STD_LOGIC_VECTOR (32 downto 0);
        ap_return_30 : OUT STD_LOGIC_VECTOR (32 downto 0);
        ap_return_31 : OUT STD_LOGIC_VECTOR (32 downto 0);
        ap_return_32 : OUT STD_LOGIC_VECTOR (32 downto 0);
        ap_return_33 : OUT STD_LOGIC_VECTOR (32 downto 0);
        ap_return_34 : OUT STD_LOGIC_VECTOR (32 downto 0);
        ap_return_35 : OUT STD_LOGIC_VECTOR (32 downto 0);
        ap_return_36 : OUT STD_LOGIC_VECTOR (32 downto 0);
        ap_return_37 : OUT STD_LOGIC_VECTOR (32 downto 0);
        ap_return_38 : OUT STD_LOGIC_VECTOR (32 downto 0);
        ap_return_39 : OUT STD_LOGIC_VECTOR (32 downto 0);
        ap_return_40 : OUT STD_LOGIC_VECTOR (32 downto 0);
        ap_return_41 : OUT STD_LOGIC_VECTOR (32 downto 0);
        ap_return_42 : OUT STD_LOGIC_VECTOR (32 downto 0);
        ap_return_43 : OUT STD_LOGIC_VECTOR (32 downto 0);
        ap_return_44 : OUT STD_LOGIC_VECTOR (32 downto 0);
        ap_return_45 : OUT STD_LOGIC_VECTOR (32 downto 0);
        ap_return_46 : OUT STD_LOGIC_VECTOR (32 downto 0);
        ap_return_47 : OUT STD_LOGIC_VECTOR (32 downto 0);
        ap_return_48 : OUT STD_LOGIC_VECTOR (32 downto 0);
        ap_return_49 : OUT STD_LOGIC_VECTOR (32 downto 0);
        ap_return_50 : OUT STD_LOGIC_VECTOR (32 downto 0);
        ap_return_51 : OUT STD_LOGIC_VECTOR (32 downto 0);
        ap_return_52 : OUT STD_LOGIC_VECTOR (32 downto 0);
        ap_return_53 : OUT STD_LOGIC_VECTOR (32 downto 0);
        ap_return_54 : OUT STD_LOGIC_VECTOR (32 downto 0);
        ap_return_55 : OUT STD_LOGIC_VECTOR (32 downto 0);
        ap_return_56 : OUT STD_LOGIC_VECTOR (32 downto 0);
        ap_return_57 : OUT STD_LOGIC_VECTOR (32 downto 0);
        ap_return_58 : OUT STD_LOGIC_VECTOR (32 downto 0);
        ap_return_59 : OUT STD_LOGIC_VECTOR (32 downto 0);
        ap_return_60 : OUT STD_LOGIC_VECTOR (32 downto 0);
        ap_return_61 : OUT STD_LOGIC_VECTOR (32 downto 0);
        ap_return_62 : OUT STD_LOGIC_VECTOR (32 downto 0);
        ap_return_63 : OUT STD_LOGIC_VECTOR (32 downto 0);
        ap_return_64 : OUT STD_LOGIC_VECTOR (32 downto 0);
        ap_return_65 : OUT STD_LOGIC_VECTOR (32 downto 0);
        ap_return_66 : OUT STD_LOGIC_VECTOR (32 downto 0);
        ap_return_67 : OUT STD_LOGIC_VECTOR (32 downto 0);
        ap_return_68 : OUT STD_LOGIC_VECTOR (32 downto 0);
        ap_return_69 : OUT STD_LOGIC_VECTOR (32 downto 0);
        ap_return_70 : OUT STD_LOGIC_VECTOR (32 downto 0);
        ap_return_71 : OUT STD_LOGIC_VECTOR (32 downto 0);
        ap_return_72 : OUT STD_LOGIC_VECTOR (32 downto 0);
        ap_return_73 : OUT STD_LOGIC_VECTOR (32 downto 0);
        ap_return_74 : OUT STD_LOGIC_VECTOR (32 downto 0);
        ap_return_75 : OUT STD_LOGIC_VECTOR (32 downto 0);
        ap_return_76 : OUT STD_LOGIC_VECTOR (32 downto 0);
        ap_return_77 : OUT STD_LOGIC_VECTOR (32 downto 0);
        ap_return_78 : OUT STD_LOGIC_VECTOR (32 downto 0);
        ap_return_79 : OUT STD_LOGIC_VECTOR (32 downto 0);
        ap_ce : IN STD_LOGIC );
    end component;


    component myproject_frp_fifoout IS
    generic (
        BlockingType : INTEGER;
        PipeLatency : INTEGER;
        PipelineII : INTEGER;
        DataWidth : INTEGER;
        NumWrites : INTEGER;
        CeilLog2Stages : INTEGER;
        CeilLog2FDepth : INTEGER;
        PfAllDoneEnable : INTEGER );
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        data_in : IN STD_LOGIC_VECTOR (DataWidth-1 downto 0);
        data_out : OUT STD_LOGIC_VECTOR (DataWidth-1 downto 0);
        valid : IN STD_LOGIC_VECTOR (5 downto 0);
        data_in_vld : IN STD_LOGIC;
        data_out_vld : OUT STD_LOGIC;
        data_in_last : IN STD_LOGIC;
        pf_continue : IN STD_LOGIC;
        pf_all_done : IN STD_LOGIC;
        pf_ready : OUT STD_LOGIC;
        pf_done : OUT STD_LOGIC;
        data_out_read : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        num_valid_datasets : IN STD_LOGIC_VECTOR (3 downto 0) );
    end component;


    component myproject_frp_pipeline_valid IS
    generic (
        PipelineLatency : INTEGER;
        PipelineII : INTEGER;
        CeilLog2Stages : INTEGER;
        ExitLatency : INTEGER );
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        valid_in : IN STD_LOGIC;
        exitcond : IN STD_LOGIC;
        valid_out : OUT STD_LOGIC_VECTOR (5 downto 0);
        num_valid_datasets : OUT STD_LOGIC_VECTOR (3 downto 0) );
    end component;



begin
    grp_layernormalize_ap_fixed_16_6_5_3_0_ap_fixed_33_13_5_3_0_config2_s_fu_754 : component myproject_layernormalize_ap_fixed_16_6_5_3_0_ap_fixed_33_13_5_3_0_config2_s
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        data_val => layer_normalization_input_in_sig,
        ap_return_0 => grp_layernormalize_ap_fixed_16_6_5_3_0_ap_fixed_33_13_5_3_0_config2_s_fu_754_ap_return_0,
        ap_return_1 => grp_layernormalize_ap_fixed_16_6_5_3_0_ap_fixed_33_13_5_3_0_config2_s_fu_754_ap_return_1,
        ap_return_2 => grp_layernormalize_ap_fixed_16_6_5_3_0_ap_fixed_33_13_5_3_0_config2_s_fu_754_ap_return_2,
        ap_return_3 => grp_layernormalize_ap_fixed_16_6_5_3_0_ap_fixed_33_13_5_3_0_config2_s_fu_754_ap_return_3,
        ap_return_4 => grp_layernormalize_ap_fixed_16_6_5_3_0_ap_fixed_33_13_5_3_0_config2_s_fu_754_ap_return_4,
        ap_return_5 => grp_layernormalize_ap_fixed_16_6_5_3_0_ap_fixed_33_13_5_3_0_config2_s_fu_754_ap_return_5,
        ap_return_6 => grp_layernormalize_ap_fixed_16_6_5_3_0_ap_fixed_33_13_5_3_0_config2_s_fu_754_ap_return_6,
        ap_return_7 => grp_layernormalize_ap_fixed_16_6_5_3_0_ap_fixed_33_13_5_3_0_config2_s_fu_754_ap_return_7,
        ap_return_8 => grp_layernormalize_ap_fixed_16_6_5_3_0_ap_fixed_33_13_5_3_0_config2_s_fu_754_ap_return_8,
        ap_return_9 => grp_layernormalize_ap_fixed_16_6_5_3_0_ap_fixed_33_13_5_3_0_config2_s_fu_754_ap_return_9,
        ap_return_10 => grp_layernormalize_ap_fixed_16_6_5_3_0_ap_fixed_33_13_5_3_0_config2_s_fu_754_ap_return_10,
        ap_return_11 => grp_layernormalize_ap_fixed_16_6_5_3_0_ap_fixed_33_13_5_3_0_config2_s_fu_754_ap_return_11,
        ap_return_12 => grp_layernormalize_ap_fixed_16_6_5_3_0_ap_fixed_33_13_5_3_0_config2_s_fu_754_ap_return_12,
        ap_return_13 => grp_layernormalize_ap_fixed_16_6_5_3_0_ap_fixed_33_13_5_3_0_config2_s_fu_754_ap_return_13,
        ap_return_14 => grp_layernormalize_ap_fixed_16_6_5_3_0_ap_fixed_33_13_5_3_0_config2_s_fu_754_ap_return_14,
        ap_return_15 => grp_layernormalize_ap_fixed_16_6_5_3_0_ap_fixed_33_13_5_3_0_config2_s_fu_754_ap_return_15,
        ap_return_16 => grp_layernormalize_ap_fixed_16_6_5_3_0_ap_fixed_33_13_5_3_0_config2_s_fu_754_ap_return_16,
        ap_return_17 => grp_layernormalize_ap_fixed_16_6_5_3_0_ap_fixed_33_13_5_3_0_config2_s_fu_754_ap_return_17,
        ap_return_18 => grp_layernormalize_ap_fixed_16_6_5_3_0_ap_fixed_33_13_5_3_0_config2_s_fu_754_ap_return_18,
        ap_return_19 => grp_layernormalize_ap_fixed_16_6_5_3_0_ap_fixed_33_13_5_3_0_config2_s_fu_754_ap_return_19,
        ap_return_20 => grp_layernormalize_ap_fixed_16_6_5_3_0_ap_fixed_33_13_5_3_0_config2_s_fu_754_ap_return_20,
        ap_return_21 => grp_layernormalize_ap_fixed_16_6_5_3_0_ap_fixed_33_13_5_3_0_config2_s_fu_754_ap_return_21,
        ap_return_22 => grp_layernormalize_ap_fixed_16_6_5_3_0_ap_fixed_33_13_5_3_0_config2_s_fu_754_ap_return_22,
        ap_return_23 => grp_layernormalize_ap_fixed_16_6_5_3_0_ap_fixed_33_13_5_3_0_config2_s_fu_754_ap_return_23,
        ap_return_24 => grp_layernormalize_ap_fixed_16_6_5_3_0_ap_fixed_33_13_5_3_0_config2_s_fu_754_ap_return_24,
        ap_return_25 => grp_layernormalize_ap_fixed_16_6_5_3_0_ap_fixed_33_13_5_3_0_config2_s_fu_754_ap_return_25,
        ap_return_26 => grp_layernormalize_ap_fixed_16_6_5_3_0_ap_fixed_33_13_5_3_0_config2_s_fu_754_ap_return_26,
        ap_return_27 => grp_layernormalize_ap_fixed_16_6_5_3_0_ap_fixed_33_13_5_3_0_config2_s_fu_754_ap_return_27,
        ap_return_28 => grp_layernormalize_ap_fixed_16_6_5_3_0_ap_fixed_33_13_5_3_0_config2_s_fu_754_ap_return_28,
        ap_return_29 => grp_layernormalize_ap_fixed_16_6_5_3_0_ap_fixed_33_13_5_3_0_config2_s_fu_754_ap_return_29,
        ap_return_30 => grp_layernormalize_ap_fixed_16_6_5_3_0_ap_fixed_33_13_5_3_0_config2_s_fu_754_ap_return_30,
        ap_return_31 => grp_layernormalize_ap_fixed_16_6_5_3_0_ap_fixed_33_13_5_3_0_config2_s_fu_754_ap_return_31,
        ap_return_32 => grp_layernormalize_ap_fixed_16_6_5_3_0_ap_fixed_33_13_5_3_0_config2_s_fu_754_ap_return_32,
        ap_return_33 => grp_layernormalize_ap_fixed_16_6_5_3_0_ap_fixed_33_13_5_3_0_config2_s_fu_754_ap_return_33,
        ap_return_34 => grp_layernormalize_ap_fixed_16_6_5_3_0_ap_fixed_33_13_5_3_0_config2_s_fu_754_ap_return_34,
        ap_return_35 => grp_layernormalize_ap_fixed_16_6_5_3_0_ap_fixed_33_13_5_3_0_config2_s_fu_754_ap_return_35,
        ap_return_36 => grp_layernormalize_ap_fixed_16_6_5_3_0_ap_fixed_33_13_5_3_0_config2_s_fu_754_ap_return_36,
        ap_return_37 => grp_layernormalize_ap_fixed_16_6_5_3_0_ap_fixed_33_13_5_3_0_config2_s_fu_754_ap_return_37,
        ap_return_38 => grp_layernormalize_ap_fixed_16_6_5_3_0_ap_fixed_33_13_5_3_0_config2_s_fu_754_ap_return_38,
        ap_return_39 => grp_layernormalize_ap_fixed_16_6_5_3_0_ap_fixed_33_13_5_3_0_config2_s_fu_754_ap_return_39,
        ap_return_40 => grp_layernormalize_ap_fixed_16_6_5_3_0_ap_fixed_33_13_5_3_0_config2_s_fu_754_ap_return_40,
        ap_return_41 => grp_layernormalize_ap_fixed_16_6_5_3_0_ap_fixed_33_13_5_3_0_config2_s_fu_754_ap_return_41,
        ap_return_42 => grp_layernormalize_ap_fixed_16_6_5_3_0_ap_fixed_33_13_5_3_0_config2_s_fu_754_ap_return_42,
        ap_return_43 => grp_layernormalize_ap_fixed_16_6_5_3_0_ap_fixed_33_13_5_3_0_config2_s_fu_754_ap_return_43,
        ap_return_44 => grp_layernormalize_ap_fixed_16_6_5_3_0_ap_fixed_33_13_5_3_0_config2_s_fu_754_ap_return_44,
        ap_return_45 => grp_layernormalize_ap_fixed_16_6_5_3_0_ap_fixed_33_13_5_3_0_config2_s_fu_754_ap_return_45,
        ap_return_46 => grp_layernormalize_ap_fixed_16_6_5_3_0_ap_fixed_33_13_5_3_0_config2_s_fu_754_ap_return_46,
        ap_return_47 => grp_layernormalize_ap_fixed_16_6_5_3_0_ap_fixed_33_13_5_3_0_config2_s_fu_754_ap_return_47,
        ap_return_48 => grp_layernormalize_ap_fixed_16_6_5_3_0_ap_fixed_33_13_5_3_0_config2_s_fu_754_ap_return_48,
        ap_return_49 => grp_layernormalize_ap_fixed_16_6_5_3_0_ap_fixed_33_13_5_3_0_config2_s_fu_754_ap_return_49,
        ap_return_50 => grp_layernormalize_ap_fixed_16_6_5_3_0_ap_fixed_33_13_5_3_0_config2_s_fu_754_ap_return_50,
        ap_return_51 => grp_layernormalize_ap_fixed_16_6_5_3_0_ap_fixed_33_13_5_3_0_config2_s_fu_754_ap_return_51,
        ap_return_52 => grp_layernormalize_ap_fixed_16_6_5_3_0_ap_fixed_33_13_5_3_0_config2_s_fu_754_ap_return_52,
        ap_return_53 => grp_layernormalize_ap_fixed_16_6_5_3_0_ap_fixed_33_13_5_3_0_config2_s_fu_754_ap_return_53,
        ap_return_54 => grp_layernormalize_ap_fixed_16_6_5_3_0_ap_fixed_33_13_5_3_0_config2_s_fu_754_ap_return_54,
        ap_return_55 => grp_layernormalize_ap_fixed_16_6_5_3_0_ap_fixed_33_13_5_3_0_config2_s_fu_754_ap_return_55,
        ap_return_56 => grp_layernormalize_ap_fixed_16_6_5_3_0_ap_fixed_33_13_5_3_0_config2_s_fu_754_ap_return_56,
        ap_return_57 => grp_layernormalize_ap_fixed_16_6_5_3_0_ap_fixed_33_13_5_3_0_config2_s_fu_754_ap_return_57,
        ap_return_58 => grp_layernormalize_ap_fixed_16_6_5_3_0_ap_fixed_33_13_5_3_0_config2_s_fu_754_ap_return_58,
        ap_return_59 => grp_layernormalize_ap_fixed_16_6_5_3_0_ap_fixed_33_13_5_3_0_config2_s_fu_754_ap_return_59,
        ap_return_60 => grp_layernormalize_ap_fixed_16_6_5_3_0_ap_fixed_33_13_5_3_0_config2_s_fu_754_ap_return_60,
        ap_return_61 => grp_layernormalize_ap_fixed_16_6_5_3_0_ap_fixed_33_13_5_3_0_config2_s_fu_754_ap_return_61,
        ap_return_62 => grp_layernormalize_ap_fixed_16_6_5_3_0_ap_fixed_33_13_5_3_0_config2_s_fu_754_ap_return_62,
        ap_return_63 => grp_layernormalize_ap_fixed_16_6_5_3_0_ap_fixed_33_13_5_3_0_config2_s_fu_754_ap_return_63,
        ap_return_64 => grp_layernormalize_ap_fixed_16_6_5_3_0_ap_fixed_33_13_5_3_0_config2_s_fu_754_ap_return_64,
        ap_return_65 => grp_layernormalize_ap_fixed_16_6_5_3_0_ap_fixed_33_13_5_3_0_config2_s_fu_754_ap_return_65,
        ap_return_66 => grp_layernormalize_ap_fixed_16_6_5_3_0_ap_fixed_33_13_5_3_0_config2_s_fu_754_ap_return_66,
        ap_return_67 => grp_layernormalize_ap_fixed_16_6_5_3_0_ap_fixed_33_13_5_3_0_config2_s_fu_754_ap_return_67,
        ap_return_68 => grp_layernormalize_ap_fixed_16_6_5_3_0_ap_fixed_33_13_5_3_0_config2_s_fu_754_ap_return_68,
        ap_return_69 => grp_layernormalize_ap_fixed_16_6_5_3_0_ap_fixed_33_13_5_3_0_config2_s_fu_754_ap_return_69,
        ap_return_70 => grp_layernormalize_ap_fixed_16_6_5_3_0_ap_fixed_33_13_5_3_0_config2_s_fu_754_ap_return_70,
        ap_return_71 => grp_layernormalize_ap_fixed_16_6_5_3_0_ap_fixed_33_13_5_3_0_config2_s_fu_754_ap_return_71,
        ap_return_72 => grp_layernormalize_ap_fixed_16_6_5_3_0_ap_fixed_33_13_5_3_0_config2_s_fu_754_ap_return_72,
        ap_return_73 => grp_layernormalize_ap_fixed_16_6_5_3_0_ap_fixed_33_13_5_3_0_config2_s_fu_754_ap_return_73,
        ap_return_74 => grp_layernormalize_ap_fixed_16_6_5_3_0_ap_fixed_33_13_5_3_0_config2_s_fu_754_ap_return_74,
        ap_return_75 => grp_layernormalize_ap_fixed_16_6_5_3_0_ap_fixed_33_13_5_3_0_config2_s_fu_754_ap_return_75,
        ap_return_76 => grp_layernormalize_ap_fixed_16_6_5_3_0_ap_fixed_33_13_5_3_0_config2_s_fu_754_ap_return_76,
        ap_return_77 => grp_layernormalize_ap_fixed_16_6_5_3_0_ap_fixed_33_13_5_3_0_config2_s_fu_754_ap_return_77,
        ap_return_78 => grp_layernormalize_ap_fixed_16_6_5_3_0_ap_fixed_33_13_5_3_0_config2_s_fu_754_ap_return_78,
        ap_return_79 => grp_layernormalize_ap_fixed_16_6_5_3_0_ap_fixed_33_13_5_3_0_config2_s_fu_754_ap_return_79,
        ap_ce => ap_const_logic_1);

    frp_pipeline_valid_U : component myproject_frp_pipeline_valid
    generic map (
        PipelineLatency => 6,
        PipelineII => 1,
        CeilLog2Stages => 3,
        ExitLatency => -1)
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        valid_in => ap_frp_vld_in,
        exitcond => ap_const_logic_0,
        valid_out => frp_pipeline_valid_U_valid_out,
        num_valid_datasets => frp_pipeline_valid_U_num_valid_datasets);

    pf_layer2_out_0_U : component myproject_frp_fifoout
    generic map (
        BlockingType => 0,
        PipeLatency => 6,
        PipelineII => 1,
        DataWidth => 33,
        NumWrites => 1,
        CeilLog2Stages => 3,
        CeilLog2FDepth => 3,
        PfAllDoneEnable => 2)
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        data_in => grp_layernormalize_ap_fixed_16_6_5_3_0_ap_fixed_33_13_5_3_0_config2_s_fu_754_ap_return_0,
        data_out => pf_layer2_out_0_U_data_out,
        valid => frp_pipeline_valid_U_valid_out,
        data_in_vld => pf_layer2_out_0_U_data_in_vld,
        data_out_vld => pf_layer2_out_0_U_data_out_vld,
        data_in_last => pf_data_in_last,
        pf_continue => pf_all_done,
        pf_all_done => pf_all_done,
        pf_ready => pf_layer2_out_0_U_pf_ready,
        pf_done => pf_layer2_out_0_U_pf_done,
        data_out_read => ap_const_logic_1,
        ap_start => ap_const_logic_0,
        num_valid_datasets => frp_pipeline_valid_U_num_valid_datasets);

    pf_layer2_out_10_U : component myproject_frp_fifoout
    generic map (
        BlockingType => 0,
        PipeLatency => 6,
        PipelineII => 1,
        DataWidth => 33,
        NumWrites => 1,
        CeilLog2Stages => 3,
        CeilLog2FDepth => 3,
        PfAllDoneEnable => 2)
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        data_in => grp_layernormalize_ap_fixed_16_6_5_3_0_ap_fixed_33_13_5_3_0_config2_s_fu_754_ap_return_10,
        data_out => pf_layer2_out_10_U_data_out,
        valid => frp_pipeline_valid_U_valid_out,
        data_in_vld => pf_layer2_out_10_U_data_in_vld,
        data_out_vld => pf_layer2_out_10_U_data_out_vld,
        data_in_last => pf_data_in_last,
        pf_continue => pf_all_done,
        pf_all_done => pf_all_done,
        pf_ready => pf_layer2_out_10_U_pf_ready,
        pf_done => pf_layer2_out_10_U_pf_done,
        data_out_read => ap_const_logic_1,
        ap_start => ap_const_logic_0,
        num_valid_datasets => frp_pipeline_valid_U_num_valid_datasets);

    pf_layer2_out_11_U : component myproject_frp_fifoout
    generic map (
        BlockingType => 0,
        PipeLatency => 6,
        PipelineII => 1,
        DataWidth => 33,
        NumWrites => 1,
        CeilLog2Stages => 3,
        CeilLog2FDepth => 3,
        PfAllDoneEnable => 2)
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        data_in => grp_layernormalize_ap_fixed_16_6_5_3_0_ap_fixed_33_13_5_3_0_config2_s_fu_754_ap_return_11,
        data_out => pf_layer2_out_11_U_data_out,
        valid => frp_pipeline_valid_U_valid_out,
        data_in_vld => pf_layer2_out_11_U_data_in_vld,
        data_out_vld => pf_layer2_out_11_U_data_out_vld,
        data_in_last => pf_data_in_last,
        pf_continue => pf_all_done,
        pf_all_done => pf_all_done,
        pf_ready => pf_layer2_out_11_U_pf_ready,
        pf_done => pf_layer2_out_11_U_pf_done,
        data_out_read => ap_const_logic_1,
        ap_start => ap_const_logic_0,
        num_valid_datasets => frp_pipeline_valid_U_num_valid_datasets);

    pf_layer2_out_12_U : component myproject_frp_fifoout
    generic map (
        BlockingType => 0,
        PipeLatency => 6,
        PipelineII => 1,
        DataWidth => 33,
        NumWrites => 1,
        CeilLog2Stages => 3,
        CeilLog2FDepth => 3,
        PfAllDoneEnable => 2)
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        data_in => grp_layernormalize_ap_fixed_16_6_5_3_0_ap_fixed_33_13_5_3_0_config2_s_fu_754_ap_return_12,
        data_out => pf_layer2_out_12_U_data_out,
        valid => frp_pipeline_valid_U_valid_out,
        data_in_vld => pf_layer2_out_12_U_data_in_vld,
        data_out_vld => pf_layer2_out_12_U_data_out_vld,
        data_in_last => pf_data_in_last,
        pf_continue => pf_all_done,
        pf_all_done => pf_all_done,
        pf_ready => pf_layer2_out_12_U_pf_ready,
        pf_done => pf_layer2_out_12_U_pf_done,
        data_out_read => ap_const_logic_1,
        ap_start => ap_const_logic_0,
        num_valid_datasets => frp_pipeline_valid_U_num_valid_datasets);

    pf_layer2_out_13_U : component myproject_frp_fifoout
    generic map (
        BlockingType => 0,
        PipeLatency => 6,
        PipelineII => 1,
        DataWidth => 33,
        NumWrites => 1,
        CeilLog2Stages => 3,
        CeilLog2FDepth => 3,
        PfAllDoneEnable => 2)
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        data_in => grp_layernormalize_ap_fixed_16_6_5_3_0_ap_fixed_33_13_5_3_0_config2_s_fu_754_ap_return_13,
        data_out => pf_layer2_out_13_U_data_out,
        valid => frp_pipeline_valid_U_valid_out,
        data_in_vld => pf_layer2_out_13_U_data_in_vld,
        data_out_vld => pf_layer2_out_13_U_data_out_vld,
        data_in_last => pf_data_in_last,
        pf_continue => pf_all_done,
        pf_all_done => pf_all_done,
        pf_ready => pf_layer2_out_13_U_pf_ready,
        pf_done => pf_layer2_out_13_U_pf_done,
        data_out_read => ap_const_logic_1,
        ap_start => ap_const_logic_0,
        num_valid_datasets => frp_pipeline_valid_U_num_valid_datasets);

    pf_layer2_out_14_U : component myproject_frp_fifoout
    generic map (
        BlockingType => 0,
        PipeLatency => 6,
        PipelineII => 1,
        DataWidth => 33,
        NumWrites => 1,
        CeilLog2Stages => 3,
        CeilLog2FDepth => 3,
        PfAllDoneEnable => 2)
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        data_in => grp_layernormalize_ap_fixed_16_6_5_3_0_ap_fixed_33_13_5_3_0_config2_s_fu_754_ap_return_14,
        data_out => pf_layer2_out_14_U_data_out,
        valid => frp_pipeline_valid_U_valid_out,
        data_in_vld => pf_layer2_out_14_U_data_in_vld,
        data_out_vld => pf_layer2_out_14_U_data_out_vld,
        data_in_last => pf_data_in_last,
        pf_continue => pf_all_done,
        pf_all_done => pf_all_done,
        pf_ready => pf_layer2_out_14_U_pf_ready,
        pf_done => pf_layer2_out_14_U_pf_done,
        data_out_read => ap_const_logic_1,
        ap_start => ap_const_logic_0,
        num_valid_datasets => frp_pipeline_valid_U_num_valid_datasets);

    pf_layer2_out_15_U : component myproject_frp_fifoout
    generic map (
        BlockingType => 0,
        PipeLatency => 6,
        PipelineII => 1,
        DataWidth => 33,
        NumWrites => 1,
        CeilLog2Stages => 3,
        CeilLog2FDepth => 3,
        PfAllDoneEnable => 2)
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        data_in => grp_layernormalize_ap_fixed_16_6_5_3_0_ap_fixed_33_13_5_3_0_config2_s_fu_754_ap_return_15,
        data_out => pf_layer2_out_15_U_data_out,
        valid => frp_pipeline_valid_U_valid_out,
        data_in_vld => pf_layer2_out_15_U_data_in_vld,
        data_out_vld => pf_layer2_out_15_U_data_out_vld,
        data_in_last => pf_data_in_last,
        pf_continue => pf_all_done,
        pf_all_done => pf_all_done,
        pf_ready => pf_layer2_out_15_U_pf_ready,
        pf_done => pf_layer2_out_15_U_pf_done,
        data_out_read => ap_const_logic_1,
        ap_start => ap_const_logic_0,
        num_valid_datasets => frp_pipeline_valid_U_num_valid_datasets);

    pf_layer2_out_16_U : component myproject_frp_fifoout
    generic map (
        BlockingType => 0,
        PipeLatency => 6,
        PipelineII => 1,
        DataWidth => 33,
        NumWrites => 1,
        CeilLog2Stages => 3,
        CeilLog2FDepth => 3,
        PfAllDoneEnable => 2)
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        data_in => grp_layernormalize_ap_fixed_16_6_5_3_0_ap_fixed_33_13_5_3_0_config2_s_fu_754_ap_return_16,
        data_out => pf_layer2_out_16_U_data_out,
        valid => frp_pipeline_valid_U_valid_out,
        data_in_vld => pf_layer2_out_16_U_data_in_vld,
        data_out_vld => pf_layer2_out_16_U_data_out_vld,
        data_in_last => pf_data_in_last,
        pf_continue => pf_all_done,
        pf_all_done => pf_all_done,
        pf_ready => pf_layer2_out_16_U_pf_ready,
        pf_done => pf_layer2_out_16_U_pf_done,
        data_out_read => ap_const_logic_1,
        ap_start => ap_const_logic_0,
        num_valid_datasets => frp_pipeline_valid_U_num_valid_datasets);

    pf_layer2_out_17_U : component myproject_frp_fifoout
    generic map (
        BlockingType => 0,
        PipeLatency => 6,
        PipelineII => 1,
        DataWidth => 33,
        NumWrites => 1,
        CeilLog2Stages => 3,
        CeilLog2FDepth => 3,
        PfAllDoneEnable => 2)
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        data_in => grp_layernormalize_ap_fixed_16_6_5_3_0_ap_fixed_33_13_5_3_0_config2_s_fu_754_ap_return_17,
        data_out => pf_layer2_out_17_U_data_out,
        valid => frp_pipeline_valid_U_valid_out,
        data_in_vld => pf_layer2_out_17_U_data_in_vld,
        data_out_vld => pf_layer2_out_17_U_data_out_vld,
        data_in_last => pf_data_in_last,
        pf_continue => pf_all_done,
        pf_all_done => pf_all_done,
        pf_ready => pf_layer2_out_17_U_pf_ready,
        pf_done => pf_layer2_out_17_U_pf_done,
        data_out_read => ap_const_logic_1,
        ap_start => ap_const_logic_0,
        num_valid_datasets => frp_pipeline_valid_U_num_valid_datasets);

    pf_layer2_out_18_U : component myproject_frp_fifoout
    generic map (
        BlockingType => 0,
        PipeLatency => 6,
        PipelineII => 1,
        DataWidth => 33,
        NumWrites => 1,
        CeilLog2Stages => 3,
        CeilLog2FDepth => 3,
        PfAllDoneEnable => 2)
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        data_in => grp_layernormalize_ap_fixed_16_6_5_3_0_ap_fixed_33_13_5_3_0_config2_s_fu_754_ap_return_18,
        data_out => pf_layer2_out_18_U_data_out,
        valid => frp_pipeline_valid_U_valid_out,
        data_in_vld => pf_layer2_out_18_U_data_in_vld,
        data_out_vld => pf_layer2_out_18_U_data_out_vld,
        data_in_last => pf_data_in_last,
        pf_continue => pf_all_done,
        pf_all_done => pf_all_done,
        pf_ready => pf_layer2_out_18_U_pf_ready,
        pf_done => pf_layer2_out_18_U_pf_done,
        data_out_read => ap_const_logic_1,
        ap_start => ap_const_logic_0,
        num_valid_datasets => frp_pipeline_valid_U_num_valid_datasets);

    pf_layer2_out_19_U : component myproject_frp_fifoout
    generic map (
        BlockingType => 0,
        PipeLatency => 6,
        PipelineII => 1,
        DataWidth => 33,
        NumWrites => 1,
        CeilLog2Stages => 3,
        CeilLog2FDepth => 3,
        PfAllDoneEnable => 2)
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        data_in => grp_layernormalize_ap_fixed_16_6_5_3_0_ap_fixed_33_13_5_3_0_config2_s_fu_754_ap_return_19,
        data_out => pf_layer2_out_19_U_data_out,
        valid => frp_pipeline_valid_U_valid_out,
        data_in_vld => pf_layer2_out_19_U_data_in_vld,
        data_out_vld => pf_layer2_out_19_U_data_out_vld,
        data_in_last => pf_data_in_last,
        pf_continue => pf_all_done,
        pf_all_done => pf_all_done,
        pf_ready => pf_layer2_out_19_U_pf_ready,
        pf_done => pf_layer2_out_19_U_pf_done,
        data_out_read => ap_const_logic_1,
        ap_start => ap_const_logic_0,
        num_valid_datasets => frp_pipeline_valid_U_num_valid_datasets);

    pf_layer2_out_1_U : component myproject_frp_fifoout
    generic map (
        BlockingType => 0,
        PipeLatency => 6,
        PipelineII => 1,
        DataWidth => 33,
        NumWrites => 1,
        CeilLog2Stages => 3,
        CeilLog2FDepth => 3,
        PfAllDoneEnable => 2)
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        data_in => grp_layernormalize_ap_fixed_16_6_5_3_0_ap_fixed_33_13_5_3_0_config2_s_fu_754_ap_return_1,
        data_out => pf_layer2_out_1_U_data_out,
        valid => frp_pipeline_valid_U_valid_out,
        data_in_vld => pf_layer2_out_1_U_data_in_vld,
        data_out_vld => pf_layer2_out_1_U_data_out_vld,
        data_in_last => pf_data_in_last,
        pf_continue => pf_all_done,
        pf_all_done => pf_all_done,
        pf_ready => pf_layer2_out_1_U_pf_ready,
        pf_done => pf_layer2_out_1_U_pf_done,
        data_out_read => ap_const_logic_1,
        ap_start => ap_const_logic_0,
        num_valid_datasets => frp_pipeline_valid_U_num_valid_datasets);

    pf_layer2_out_20_U : component myproject_frp_fifoout
    generic map (
        BlockingType => 0,
        PipeLatency => 6,
        PipelineII => 1,
        DataWidth => 33,
        NumWrites => 1,
        CeilLog2Stages => 3,
        CeilLog2FDepth => 3,
        PfAllDoneEnable => 2)
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        data_in => grp_layernormalize_ap_fixed_16_6_5_3_0_ap_fixed_33_13_5_3_0_config2_s_fu_754_ap_return_20,
        data_out => pf_layer2_out_20_U_data_out,
        valid => frp_pipeline_valid_U_valid_out,
        data_in_vld => pf_layer2_out_20_U_data_in_vld,
        data_out_vld => pf_layer2_out_20_U_data_out_vld,
        data_in_last => pf_data_in_last,
        pf_continue => pf_all_done,
        pf_all_done => pf_all_done,
        pf_ready => pf_layer2_out_20_U_pf_ready,
        pf_done => pf_layer2_out_20_U_pf_done,
        data_out_read => ap_const_logic_1,
        ap_start => ap_const_logic_0,
        num_valid_datasets => frp_pipeline_valid_U_num_valid_datasets);

    pf_layer2_out_21_U : component myproject_frp_fifoout
    generic map (
        BlockingType => 0,
        PipeLatency => 6,
        PipelineII => 1,
        DataWidth => 33,
        NumWrites => 1,
        CeilLog2Stages => 3,
        CeilLog2FDepth => 3,
        PfAllDoneEnable => 2)
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        data_in => grp_layernormalize_ap_fixed_16_6_5_3_0_ap_fixed_33_13_5_3_0_config2_s_fu_754_ap_return_21,
        data_out => pf_layer2_out_21_U_data_out,
        valid => frp_pipeline_valid_U_valid_out,
        data_in_vld => pf_layer2_out_21_U_data_in_vld,
        data_out_vld => pf_layer2_out_21_U_data_out_vld,
        data_in_last => pf_data_in_last,
        pf_continue => pf_all_done,
        pf_all_done => pf_all_done,
        pf_ready => pf_layer2_out_21_U_pf_ready,
        pf_done => pf_layer2_out_21_U_pf_done,
        data_out_read => ap_const_logic_1,
        ap_start => ap_const_logic_0,
        num_valid_datasets => frp_pipeline_valid_U_num_valid_datasets);

    pf_layer2_out_22_U : component myproject_frp_fifoout
    generic map (
        BlockingType => 0,
        PipeLatency => 6,
        PipelineII => 1,
        DataWidth => 33,
        NumWrites => 1,
        CeilLog2Stages => 3,
        CeilLog2FDepth => 3,
        PfAllDoneEnable => 2)
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        data_in => grp_layernormalize_ap_fixed_16_6_5_3_0_ap_fixed_33_13_5_3_0_config2_s_fu_754_ap_return_22,
        data_out => pf_layer2_out_22_U_data_out,
        valid => frp_pipeline_valid_U_valid_out,
        data_in_vld => pf_layer2_out_22_U_data_in_vld,
        data_out_vld => pf_layer2_out_22_U_data_out_vld,
        data_in_last => pf_data_in_last,
        pf_continue => pf_all_done,
        pf_all_done => pf_all_done,
        pf_ready => pf_layer2_out_22_U_pf_ready,
        pf_done => pf_layer2_out_22_U_pf_done,
        data_out_read => ap_const_logic_1,
        ap_start => ap_const_logic_0,
        num_valid_datasets => frp_pipeline_valid_U_num_valid_datasets);

    pf_layer2_out_23_U : component myproject_frp_fifoout
    generic map (
        BlockingType => 0,
        PipeLatency => 6,
        PipelineII => 1,
        DataWidth => 33,
        NumWrites => 1,
        CeilLog2Stages => 3,
        CeilLog2FDepth => 3,
        PfAllDoneEnable => 2)
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        data_in => grp_layernormalize_ap_fixed_16_6_5_3_0_ap_fixed_33_13_5_3_0_config2_s_fu_754_ap_return_23,
        data_out => pf_layer2_out_23_U_data_out,
        valid => frp_pipeline_valid_U_valid_out,
        data_in_vld => pf_layer2_out_23_U_data_in_vld,
        data_out_vld => pf_layer2_out_23_U_data_out_vld,
        data_in_last => pf_data_in_last,
        pf_continue => pf_all_done,
        pf_all_done => pf_all_done,
        pf_ready => pf_layer2_out_23_U_pf_ready,
        pf_done => pf_layer2_out_23_U_pf_done,
        data_out_read => ap_const_logic_1,
        ap_start => ap_const_logic_0,
        num_valid_datasets => frp_pipeline_valid_U_num_valid_datasets);

    pf_layer2_out_24_U : component myproject_frp_fifoout
    generic map (
        BlockingType => 0,
        PipeLatency => 6,
        PipelineII => 1,
        DataWidth => 33,
        NumWrites => 1,
        CeilLog2Stages => 3,
        CeilLog2FDepth => 3,
        PfAllDoneEnable => 2)
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        data_in => grp_layernormalize_ap_fixed_16_6_5_3_0_ap_fixed_33_13_5_3_0_config2_s_fu_754_ap_return_24,
        data_out => pf_layer2_out_24_U_data_out,
        valid => frp_pipeline_valid_U_valid_out,
        data_in_vld => pf_layer2_out_24_U_data_in_vld,
        data_out_vld => pf_layer2_out_24_U_data_out_vld,
        data_in_last => pf_data_in_last,
        pf_continue => pf_all_done,
        pf_all_done => pf_all_done,
        pf_ready => pf_layer2_out_24_U_pf_ready,
        pf_done => pf_layer2_out_24_U_pf_done,
        data_out_read => ap_const_logic_1,
        ap_start => ap_const_logic_0,
        num_valid_datasets => frp_pipeline_valid_U_num_valid_datasets);

    pf_layer2_out_25_U : component myproject_frp_fifoout
    generic map (
        BlockingType => 0,
        PipeLatency => 6,
        PipelineII => 1,
        DataWidth => 33,
        NumWrites => 1,
        CeilLog2Stages => 3,
        CeilLog2FDepth => 3,
        PfAllDoneEnable => 2)
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        data_in => grp_layernormalize_ap_fixed_16_6_5_3_0_ap_fixed_33_13_5_3_0_config2_s_fu_754_ap_return_25,
        data_out => pf_layer2_out_25_U_data_out,
        valid => frp_pipeline_valid_U_valid_out,
        data_in_vld => pf_layer2_out_25_U_data_in_vld,
        data_out_vld => pf_layer2_out_25_U_data_out_vld,
        data_in_last => pf_data_in_last,
        pf_continue => pf_all_done,
        pf_all_done => pf_all_done,
        pf_ready => pf_layer2_out_25_U_pf_ready,
        pf_done => pf_layer2_out_25_U_pf_done,
        data_out_read => ap_const_logic_1,
        ap_start => ap_const_logic_0,
        num_valid_datasets => frp_pipeline_valid_U_num_valid_datasets);

    pf_layer2_out_26_U : component myproject_frp_fifoout
    generic map (
        BlockingType => 0,
        PipeLatency => 6,
        PipelineII => 1,
        DataWidth => 33,
        NumWrites => 1,
        CeilLog2Stages => 3,
        CeilLog2FDepth => 3,
        PfAllDoneEnable => 2)
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        data_in => grp_layernormalize_ap_fixed_16_6_5_3_0_ap_fixed_33_13_5_3_0_config2_s_fu_754_ap_return_26,
        data_out => pf_layer2_out_26_U_data_out,
        valid => frp_pipeline_valid_U_valid_out,
        data_in_vld => pf_layer2_out_26_U_data_in_vld,
        data_out_vld => pf_layer2_out_26_U_data_out_vld,
        data_in_last => pf_data_in_last,
        pf_continue => pf_all_done,
        pf_all_done => pf_all_done,
        pf_ready => pf_layer2_out_26_U_pf_ready,
        pf_done => pf_layer2_out_26_U_pf_done,
        data_out_read => ap_const_logic_1,
        ap_start => ap_const_logic_0,
        num_valid_datasets => frp_pipeline_valid_U_num_valid_datasets);

    pf_layer2_out_27_U : component myproject_frp_fifoout
    generic map (
        BlockingType => 0,
        PipeLatency => 6,
        PipelineII => 1,
        DataWidth => 33,
        NumWrites => 1,
        CeilLog2Stages => 3,
        CeilLog2FDepth => 3,
        PfAllDoneEnable => 2)
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        data_in => grp_layernormalize_ap_fixed_16_6_5_3_0_ap_fixed_33_13_5_3_0_config2_s_fu_754_ap_return_27,
        data_out => pf_layer2_out_27_U_data_out,
        valid => frp_pipeline_valid_U_valid_out,
        data_in_vld => pf_layer2_out_27_U_data_in_vld,
        data_out_vld => pf_layer2_out_27_U_data_out_vld,
        data_in_last => pf_data_in_last,
        pf_continue => pf_all_done,
        pf_all_done => pf_all_done,
        pf_ready => pf_layer2_out_27_U_pf_ready,
        pf_done => pf_layer2_out_27_U_pf_done,
        data_out_read => ap_const_logic_1,
        ap_start => ap_const_logic_0,
        num_valid_datasets => frp_pipeline_valid_U_num_valid_datasets);

    pf_layer2_out_28_U : component myproject_frp_fifoout
    generic map (
        BlockingType => 0,
        PipeLatency => 6,
        PipelineII => 1,
        DataWidth => 33,
        NumWrites => 1,
        CeilLog2Stages => 3,
        CeilLog2FDepth => 3,
        PfAllDoneEnable => 2)
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        data_in => grp_layernormalize_ap_fixed_16_6_5_3_0_ap_fixed_33_13_5_3_0_config2_s_fu_754_ap_return_28,
        data_out => pf_layer2_out_28_U_data_out,
        valid => frp_pipeline_valid_U_valid_out,
        data_in_vld => pf_layer2_out_28_U_data_in_vld,
        data_out_vld => pf_layer2_out_28_U_data_out_vld,
        data_in_last => pf_data_in_last,
        pf_continue => pf_all_done,
        pf_all_done => pf_all_done,
        pf_ready => pf_layer2_out_28_U_pf_ready,
        pf_done => pf_layer2_out_28_U_pf_done,
        data_out_read => ap_const_logic_1,
        ap_start => ap_const_logic_0,
        num_valid_datasets => frp_pipeline_valid_U_num_valid_datasets);

    pf_layer2_out_29_U : component myproject_frp_fifoout
    generic map (
        BlockingType => 0,
        PipeLatency => 6,
        PipelineII => 1,
        DataWidth => 33,
        NumWrites => 1,
        CeilLog2Stages => 3,
        CeilLog2FDepth => 3,
        PfAllDoneEnable => 2)
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        data_in => grp_layernormalize_ap_fixed_16_6_5_3_0_ap_fixed_33_13_5_3_0_config2_s_fu_754_ap_return_29,
        data_out => pf_layer2_out_29_U_data_out,
        valid => frp_pipeline_valid_U_valid_out,
        data_in_vld => pf_layer2_out_29_U_data_in_vld,
        data_out_vld => pf_layer2_out_29_U_data_out_vld,
        data_in_last => pf_data_in_last,
        pf_continue => pf_all_done,
        pf_all_done => pf_all_done,
        pf_ready => pf_layer2_out_29_U_pf_ready,
        pf_done => pf_layer2_out_29_U_pf_done,
        data_out_read => ap_const_logic_1,
        ap_start => ap_const_logic_0,
        num_valid_datasets => frp_pipeline_valid_U_num_valid_datasets);

    pf_layer2_out_2_U : component myproject_frp_fifoout
    generic map (
        BlockingType => 0,
        PipeLatency => 6,
        PipelineII => 1,
        DataWidth => 33,
        NumWrites => 1,
        CeilLog2Stages => 3,
        CeilLog2FDepth => 3,
        PfAllDoneEnable => 2)
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        data_in => grp_layernormalize_ap_fixed_16_6_5_3_0_ap_fixed_33_13_5_3_0_config2_s_fu_754_ap_return_2,
        data_out => pf_layer2_out_2_U_data_out,
        valid => frp_pipeline_valid_U_valid_out,
        data_in_vld => pf_layer2_out_2_U_data_in_vld,
        data_out_vld => pf_layer2_out_2_U_data_out_vld,
        data_in_last => pf_data_in_last,
        pf_continue => pf_all_done,
        pf_all_done => pf_all_done,
        pf_ready => pf_layer2_out_2_U_pf_ready,
        pf_done => pf_layer2_out_2_U_pf_done,
        data_out_read => ap_const_logic_1,
        ap_start => ap_const_logic_0,
        num_valid_datasets => frp_pipeline_valid_U_num_valid_datasets);

    pf_layer2_out_30_U : component myproject_frp_fifoout
    generic map (
        BlockingType => 0,
        PipeLatency => 6,
        PipelineII => 1,
        DataWidth => 33,
        NumWrites => 1,
        CeilLog2Stages => 3,
        CeilLog2FDepth => 3,
        PfAllDoneEnable => 2)
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        data_in => grp_layernormalize_ap_fixed_16_6_5_3_0_ap_fixed_33_13_5_3_0_config2_s_fu_754_ap_return_30,
        data_out => pf_layer2_out_30_U_data_out,
        valid => frp_pipeline_valid_U_valid_out,
        data_in_vld => pf_layer2_out_30_U_data_in_vld,
        data_out_vld => pf_layer2_out_30_U_data_out_vld,
        data_in_last => pf_data_in_last,
        pf_continue => pf_all_done,
        pf_all_done => pf_all_done,
        pf_ready => pf_layer2_out_30_U_pf_ready,
        pf_done => pf_layer2_out_30_U_pf_done,
        data_out_read => ap_const_logic_1,
        ap_start => ap_const_logic_0,
        num_valid_datasets => frp_pipeline_valid_U_num_valid_datasets);

    pf_layer2_out_31_U : component myproject_frp_fifoout
    generic map (
        BlockingType => 0,
        PipeLatency => 6,
        PipelineII => 1,
        DataWidth => 33,
        NumWrites => 1,
        CeilLog2Stages => 3,
        CeilLog2FDepth => 3,
        PfAllDoneEnable => 2)
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        data_in => grp_layernormalize_ap_fixed_16_6_5_3_0_ap_fixed_33_13_5_3_0_config2_s_fu_754_ap_return_31,
        data_out => pf_layer2_out_31_U_data_out,
        valid => frp_pipeline_valid_U_valid_out,
        data_in_vld => pf_layer2_out_31_U_data_in_vld,
        data_out_vld => pf_layer2_out_31_U_data_out_vld,
        data_in_last => pf_data_in_last,
        pf_continue => pf_all_done,
        pf_all_done => pf_all_done,
        pf_ready => pf_layer2_out_31_U_pf_ready,
        pf_done => pf_layer2_out_31_U_pf_done,
        data_out_read => ap_const_logic_1,
        ap_start => ap_const_logic_0,
        num_valid_datasets => frp_pipeline_valid_U_num_valid_datasets);

    pf_layer2_out_32_U : component myproject_frp_fifoout
    generic map (
        BlockingType => 0,
        PipeLatency => 6,
        PipelineII => 1,
        DataWidth => 33,
        NumWrites => 1,
        CeilLog2Stages => 3,
        CeilLog2FDepth => 3,
        PfAllDoneEnable => 2)
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        data_in => grp_layernormalize_ap_fixed_16_6_5_3_0_ap_fixed_33_13_5_3_0_config2_s_fu_754_ap_return_32,
        data_out => pf_layer2_out_32_U_data_out,
        valid => frp_pipeline_valid_U_valid_out,
        data_in_vld => pf_layer2_out_32_U_data_in_vld,
        data_out_vld => pf_layer2_out_32_U_data_out_vld,
        data_in_last => pf_data_in_last,
        pf_continue => pf_all_done,
        pf_all_done => pf_all_done,
        pf_ready => pf_layer2_out_32_U_pf_ready,
        pf_done => pf_layer2_out_32_U_pf_done,
        data_out_read => ap_const_logic_1,
        ap_start => ap_const_logic_0,
        num_valid_datasets => frp_pipeline_valid_U_num_valid_datasets);

    pf_layer2_out_33_U : component myproject_frp_fifoout
    generic map (
        BlockingType => 0,
        PipeLatency => 6,
        PipelineII => 1,
        DataWidth => 33,
        NumWrites => 1,
        CeilLog2Stages => 3,
        CeilLog2FDepth => 3,
        PfAllDoneEnable => 2)
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        data_in => grp_layernormalize_ap_fixed_16_6_5_3_0_ap_fixed_33_13_5_3_0_config2_s_fu_754_ap_return_33,
        data_out => pf_layer2_out_33_U_data_out,
        valid => frp_pipeline_valid_U_valid_out,
        data_in_vld => pf_layer2_out_33_U_data_in_vld,
        data_out_vld => pf_layer2_out_33_U_data_out_vld,
        data_in_last => pf_data_in_last,
        pf_continue => pf_all_done,
        pf_all_done => pf_all_done,
        pf_ready => pf_layer2_out_33_U_pf_ready,
        pf_done => pf_layer2_out_33_U_pf_done,
        data_out_read => ap_const_logic_1,
        ap_start => ap_const_logic_0,
        num_valid_datasets => frp_pipeline_valid_U_num_valid_datasets);

    pf_layer2_out_34_U : component myproject_frp_fifoout
    generic map (
        BlockingType => 0,
        PipeLatency => 6,
        PipelineII => 1,
        DataWidth => 33,
        NumWrites => 1,
        CeilLog2Stages => 3,
        CeilLog2FDepth => 3,
        PfAllDoneEnable => 2)
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        data_in => grp_layernormalize_ap_fixed_16_6_5_3_0_ap_fixed_33_13_5_3_0_config2_s_fu_754_ap_return_34,
        data_out => pf_layer2_out_34_U_data_out,
        valid => frp_pipeline_valid_U_valid_out,
        data_in_vld => pf_layer2_out_34_U_data_in_vld,
        data_out_vld => pf_layer2_out_34_U_data_out_vld,
        data_in_last => pf_data_in_last,
        pf_continue => pf_all_done,
        pf_all_done => pf_all_done,
        pf_ready => pf_layer2_out_34_U_pf_ready,
        pf_done => pf_layer2_out_34_U_pf_done,
        data_out_read => ap_const_logic_1,
        ap_start => ap_const_logic_0,
        num_valid_datasets => frp_pipeline_valid_U_num_valid_datasets);

    pf_layer2_out_35_U : component myproject_frp_fifoout
    generic map (
        BlockingType => 0,
        PipeLatency => 6,
        PipelineII => 1,
        DataWidth => 33,
        NumWrites => 1,
        CeilLog2Stages => 3,
        CeilLog2FDepth => 3,
        PfAllDoneEnable => 2)
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        data_in => grp_layernormalize_ap_fixed_16_6_5_3_0_ap_fixed_33_13_5_3_0_config2_s_fu_754_ap_return_35,
        data_out => pf_layer2_out_35_U_data_out,
        valid => frp_pipeline_valid_U_valid_out,
        data_in_vld => pf_layer2_out_35_U_data_in_vld,
        data_out_vld => pf_layer2_out_35_U_data_out_vld,
        data_in_last => pf_data_in_last,
        pf_continue => pf_all_done,
        pf_all_done => pf_all_done,
        pf_ready => pf_layer2_out_35_U_pf_ready,
        pf_done => pf_layer2_out_35_U_pf_done,
        data_out_read => ap_const_logic_1,
        ap_start => ap_const_logic_0,
        num_valid_datasets => frp_pipeline_valid_U_num_valid_datasets);

    pf_layer2_out_36_U : component myproject_frp_fifoout
    generic map (
        BlockingType => 0,
        PipeLatency => 6,
        PipelineII => 1,
        DataWidth => 33,
        NumWrites => 1,
        CeilLog2Stages => 3,
        CeilLog2FDepth => 3,
        PfAllDoneEnable => 2)
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        data_in => grp_layernormalize_ap_fixed_16_6_5_3_0_ap_fixed_33_13_5_3_0_config2_s_fu_754_ap_return_36,
        data_out => pf_layer2_out_36_U_data_out,
        valid => frp_pipeline_valid_U_valid_out,
        data_in_vld => pf_layer2_out_36_U_data_in_vld,
        data_out_vld => pf_layer2_out_36_U_data_out_vld,
        data_in_last => pf_data_in_last,
        pf_continue => pf_all_done,
        pf_all_done => pf_all_done,
        pf_ready => pf_layer2_out_36_U_pf_ready,
        pf_done => pf_layer2_out_36_U_pf_done,
        data_out_read => ap_const_logic_1,
        ap_start => ap_const_logic_0,
        num_valid_datasets => frp_pipeline_valid_U_num_valid_datasets);

    pf_layer2_out_37_U : component myproject_frp_fifoout
    generic map (
        BlockingType => 0,
        PipeLatency => 6,
        PipelineII => 1,
        DataWidth => 33,
        NumWrites => 1,
        CeilLog2Stages => 3,
        CeilLog2FDepth => 3,
        PfAllDoneEnable => 2)
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        data_in => grp_layernormalize_ap_fixed_16_6_5_3_0_ap_fixed_33_13_5_3_0_config2_s_fu_754_ap_return_37,
        data_out => pf_layer2_out_37_U_data_out,
        valid => frp_pipeline_valid_U_valid_out,
        data_in_vld => pf_layer2_out_37_U_data_in_vld,
        data_out_vld => pf_layer2_out_37_U_data_out_vld,
        data_in_last => pf_data_in_last,
        pf_continue => pf_all_done,
        pf_all_done => pf_all_done,
        pf_ready => pf_layer2_out_37_U_pf_ready,
        pf_done => pf_layer2_out_37_U_pf_done,
        data_out_read => ap_const_logic_1,
        ap_start => ap_const_logic_0,
        num_valid_datasets => frp_pipeline_valid_U_num_valid_datasets);

    pf_layer2_out_38_U : component myproject_frp_fifoout
    generic map (
        BlockingType => 0,
        PipeLatency => 6,
        PipelineII => 1,
        DataWidth => 33,
        NumWrites => 1,
        CeilLog2Stages => 3,
        CeilLog2FDepth => 3,
        PfAllDoneEnable => 2)
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        data_in => grp_layernormalize_ap_fixed_16_6_5_3_0_ap_fixed_33_13_5_3_0_config2_s_fu_754_ap_return_38,
        data_out => pf_layer2_out_38_U_data_out,
        valid => frp_pipeline_valid_U_valid_out,
        data_in_vld => pf_layer2_out_38_U_data_in_vld,
        data_out_vld => pf_layer2_out_38_U_data_out_vld,
        data_in_last => pf_data_in_last,
        pf_continue => pf_all_done,
        pf_all_done => pf_all_done,
        pf_ready => pf_layer2_out_38_U_pf_ready,
        pf_done => pf_layer2_out_38_U_pf_done,
        data_out_read => ap_const_logic_1,
        ap_start => ap_const_logic_0,
        num_valid_datasets => frp_pipeline_valid_U_num_valid_datasets);

    pf_layer2_out_39_U : component myproject_frp_fifoout
    generic map (
        BlockingType => 0,
        PipeLatency => 6,
        PipelineII => 1,
        DataWidth => 33,
        NumWrites => 1,
        CeilLog2Stages => 3,
        CeilLog2FDepth => 3,
        PfAllDoneEnable => 2)
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        data_in => grp_layernormalize_ap_fixed_16_6_5_3_0_ap_fixed_33_13_5_3_0_config2_s_fu_754_ap_return_39,
        data_out => pf_layer2_out_39_U_data_out,
        valid => frp_pipeline_valid_U_valid_out,
        data_in_vld => pf_layer2_out_39_U_data_in_vld,
        data_out_vld => pf_layer2_out_39_U_data_out_vld,
        data_in_last => pf_data_in_last,
        pf_continue => pf_all_done,
        pf_all_done => pf_all_done,
        pf_ready => pf_layer2_out_39_U_pf_ready,
        pf_done => pf_layer2_out_39_U_pf_done,
        data_out_read => ap_const_logic_1,
        ap_start => ap_const_logic_0,
        num_valid_datasets => frp_pipeline_valid_U_num_valid_datasets);

    pf_layer2_out_3_U : component myproject_frp_fifoout
    generic map (
        BlockingType => 0,
        PipeLatency => 6,
        PipelineII => 1,
        DataWidth => 33,
        NumWrites => 1,
        CeilLog2Stages => 3,
        CeilLog2FDepth => 3,
        PfAllDoneEnable => 2)
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        data_in => grp_layernormalize_ap_fixed_16_6_5_3_0_ap_fixed_33_13_5_3_0_config2_s_fu_754_ap_return_3,
        data_out => pf_layer2_out_3_U_data_out,
        valid => frp_pipeline_valid_U_valid_out,
        data_in_vld => pf_layer2_out_3_U_data_in_vld,
        data_out_vld => pf_layer2_out_3_U_data_out_vld,
        data_in_last => pf_data_in_last,
        pf_continue => pf_all_done,
        pf_all_done => pf_all_done,
        pf_ready => pf_layer2_out_3_U_pf_ready,
        pf_done => pf_layer2_out_3_U_pf_done,
        data_out_read => ap_const_logic_1,
        ap_start => ap_const_logic_0,
        num_valid_datasets => frp_pipeline_valid_U_num_valid_datasets);

    pf_layer2_out_40_U : component myproject_frp_fifoout
    generic map (
        BlockingType => 0,
        PipeLatency => 6,
        PipelineII => 1,
        DataWidth => 33,
        NumWrites => 1,
        CeilLog2Stages => 3,
        CeilLog2FDepth => 3,
        PfAllDoneEnable => 2)
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        data_in => grp_layernormalize_ap_fixed_16_6_5_3_0_ap_fixed_33_13_5_3_0_config2_s_fu_754_ap_return_40,
        data_out => pf_layer2_out_40_U_data_out,
        valid => frp_pipeline_valid_U_valid_out,
        data_in_vld => pf_layer2_out_40_U_data_in_vld,
        data_out_vld => pf_layer2_out_40_U_data_out_vld,
        data_in_last => pf_data_in_last,
        pf_continue => pf_all_done,
        pf_all_done => pf_all_done,
        pf_ready => pf_layer2_out_40_U_pf_ready,
        pf_done => pf_layer2_out_40_U_pf_done,
        data_out_read => ap_const_logic_1,
        ap_start => ap_const_logic_0,
        num_valid_datasets => frp_pipeline_valid_U_num_valid_datasets);

    pf_layer2_out_41_U : component myproject_frp_fifoout
    generic map (
        BlockingType => 0,
        PipeLatency => 6,
        PipelineII => 1,
        DataWidth => 33,
        NumWrites => 1,
        CeilLog2Stages => 3,
        CeilLog2FDepth => 3,
        PfAllDoneEnable => 2)
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        data_in => grp_layernormalize_ap_fixed_16_6_5_3_0_ap_fixed_33_13_5_3_0_config2_s_fu_754_ap_return_41,
        data_out => pf_layer2_out_41_U_data_out,
        valid => frp_pipeline_valid_U_valid_out,
        data_in_vld => pf_layer2_out_41_U_data_in_vld,
        data_out_vld => pf_layer2_out_41_U_data_out_vld,
        data_in_last => pf_data_in_last,
        pf_continue => pf_all_done,
        pf_all_done => pf_all_done,
        pf_ready => pf_layer2_out_41_U_pf_ready,
        pf_done => pf_layer2_out_41_U_pf_done,
        data_out_read => ap_const_logic_1,
        ap_start => ap_const_logic_0,
        num_valid_datasets => frp_pipeline_valid_U_num_valid_datasets);

    pf_layer2_out_42_U : component myproject_frp_fifoout
    generic map (
        BlockingType => 0,
        PipeLatency => 6,
        PipelineII => 1,
        DataWidth => 33,
        NumWrites => 1,
        CeilLog2Stages => 3,
        CeilLog2FDepth => 3,
        PfAllDoneEnable => 2)
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        data_in => grp_layernormalize_ap_fixed_16_6_5_3_0_ap_fixed_33_13_5_3_0_config2_s_fu_754_ap_return_42,
        data_out => pf_layer2_out_42_U_data_out,
        valid => frp_pipeline_valid_U_valid_out,
        data_in_vld => pf_layer2_out_42_U_data_in_vld,
        data_out_vld => pf_layer2_out_42_U_data_out_vld,
        data_in_last => pf_data_in_last,
        pf_continue => pf_all_done,
        pf_all_done => pf_all_done,
        pf_ready => pf_layer2_out_42_U_pf_ready,
        pf_done => pf_layer2_out_42_U_pf_done,
        data_out_read => ap_const_logic_1,
        ap_start => ap_const_logic_0,
        num_valid_datasets => frp_pipeline_valid_U_num_valid_datasets);

    pf_layer2_out_43_U : component myproject_frp_fifoout
    generic map (
        BlockingType => 0,
        PipeLatency => 6,
        PipelineII => 1,
        DataWidth => 33,
        NumWrites => 1,
        CeilLog2Stages => 3,
        CeilLog2FDepth => 3,
        PfAllDoneEnable => 2)
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        data_in => grp_layernormalize_ap_fixed_16_6_5_3_0_ap_fixed_33_13_5_3_0_config2_s_fu_754_ap_return_43,
        data_out => pf_layer2_out_43_U_data_out,
        valid => frp_pipeline_valid_U_valid_out,
        data_in_vld => pf_layer2_out_43_U_data_in_vld,
        data_out_vld => pf_layer2_out_43_U_data_out_vld,
        data_in_last => pf_data_in_last,
        pf_continue => pf_all_done,
        pf_all_done => pf_all_done,
        pf_ready => pf_layer2_out_43_U_pf_ready,
        pf_done => pf_layer2_out_43_U_pf_done,
        data_out_read => ap_const_logic_1,
        ap_start => ap_const_logic_0,
        num_valid_datasets => frp_pipeline_valid_U_num_valid_datasets);

    pf_layer2_out_44_U : component myproject_frp_fifoout
    generic map (
        BlockingType => 0,
        PipeLatency => 6,
        PipelineII => 1,
        DataWidth => 33,
        NumWrites => 1,
        CeilLog2Stages => 3,
        CeilLog2FDepth => 3,
        PfAllDoneEnable => 2)
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        data_in => grp_layernormalize_ap_fixed_16_6_5_3_0_ap_fixed_33_13_5_3_0_config2_s_fu_754_ap_return_44,
        data_out => pf_layer2_out_44_U_data_out,
        valid => frp_pipeline_valid_U_valid_out,
        data_in_vld => pf_layer2_out_44_U_data_in_vld,
        data_out_vld => pf_layer2_out_44_U_data_out_vld,
        data_in_last => pf_data_in_last,
        pf_continue => pf_all_done,
        pf_all_done => pf_all_done,
        pf_ready => pf_layer2_out_44_U_pf_ready,
        pf_done => pf_layer2_out_44_U_pf_done,
        data_out_read => ap_const_logic_1,
        ap_start => ap_const_logic_0,
        num_valid_datasets => frp_pipeline_valid_U_num_valid_datasets);

    pf_layer2_out_45_U : component myproject_frp_fifoout
    generic map (
        BlockingType => 0,
        PipeLatency => 6,
        PipelineII => 1,
        DataWidth => 33,
        NumWrites => 1,
        CeilLog2Stages => 3,
        CeilLog2FDepth => 3,
        PfAllDoneEnable => 2)
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        data_in => grp_layernormalize_ap_fixed_16_6_5_3_0_ap_fixed_33_13_5_3_0_config2_s_fu_754_ap_return_45,
        data_out => pf_layer2_out_45_U_data_out,
        valid => frp_pipeline_valid_U_valid_out,
        data_in_vld => pf_layer2_out_45_U_data_in_vld,
        data_out_vld => pf_layer2_out_45_U_data_out_vld,
        data_in_last => pf_data_in_last,
        pf_continue => pf_all_done,
        pf_all_done => pf_all_done,
        pf_ready => pf_layer2_out_45_U_pf_ready,
        pf_done => pf_layer2_out_45_U_pf_done,
        data_out_read => ap_const_logic_1,
        ap_start => ap_const_logic_0,
        num_valid_datasets => frp_pipeline_valid_U_num_valid_datasets);

    pf_layer2_out_46_U : component myproject_frp_fifoout
    generic map (
        BlockingType => 0,
        PipeLatency => 6,
        PipelineII => 1,
        DataWidth => 33,
        NumWrites => 1,
        CeilLog2Stages => 3,
        CeilLog2FDepth => 3,
        PfAllDoneEnable => 2)
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        data_in => grp_layernormalize_ap_fixed_16_6_5_3_0_ap_fixed_33_13_5_3_0_config2_s_fu_754_ap_return_46,
        data_out => pf_layer2_out_46_U_data_out,
        valid => frp_pipeline_valid_U_valid_out,
        data_in_vld => pf_layer2_out_46_U_data_in_vld,
        data_out_vld => pf_layer2_out_46_U_data_out_vld,
        data_in_last => pf_data_in_last,
        pf_continue => pf_all_done,
        pf_all_done => pf_all_done,
        pf_ready => pf_layer2_out_46_U_pf_ready,
        pf_done => pf_layer2_out_46_U_pf_done,
        data_out_read => ap_const_logic_1,
        ap_start => ap_const_logic_0,
        num_valid_datasets => frp_pipeline_valid_U_num_valid_datasets);

    pf_layer2_out_47_U : component myproject_frp_fifoout
    generic map (
        BlockingType => 0,
        PipeLatency => 6,
        PipelineII => 1,
        DataWidth => 33,
        NumWrites => 1,
        CeilLog2Stages => 3,
        CeilLog2FDepth => 3,
        PfAllDoneEnable => 2)
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        data_in => grp_layernormalize_ap_fixed_16_6_5_3_0_ap_fixed_33_13_5_3_0_config2_s_fu_754_ap_return_47,
        data_out => pf_layer2_out_47_U_data_out,
        valid => frp_pipeline_valid_U_valid_out,
        data_in_vld => pf_layer2_out_47_U_data_in_vld,
        data_out_vld => pf_layer2_out_47_U_data_out_vld,
        data_in_last => pf_data_in_last,
        pf_continue => pf_all_done,
        pf_all_done => pf_all_done,
        pf_ready => pf_layer2_out_47_U_pf_ready,
        pf_done => pf_layer2_out_47_U_pf_done,
        data_out_read => ap_const_logic_1,
        ap_start => ap_const_logic_0,
        num_valid_datasets => frp_pipeline_valid_U_num_valid_datasets);

    pf_layer2_out_48_U : component myproject_frp_fifoout
    generic map (
        BlockingType => 0,
        PipeLatency => 6,
        PipelineII => 1,
        DataWidth => 33,
        NumWrites => 1,
        CeilLog2Stages => 3,
        CeilLog2FDepth => 3,
        PfAllDoneEnable => 2)
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        data_in => grp_layernormalize_ap_fixed_16_6_5_3_0_ap_fixed_33_13_5_3_0_config2_s_fu_754_ap_return_48,
        data_out => pf_layer2_out_48_U_data_out,
        valid => frp_pipeline_valid_U_valid_out,
        data_in_vld => pf_layer2_out_48_U_data_in_vld,
        data_out_vld => pf_layer2_out_48_U_data_out_vld,
        data_in_last => pf_data_in_last,
        pf_continue => pf_all_done,
        pf_all_done => pf_all_done,
        pf_ready => pf_layer2_out_48_U_pf_ready,
        pf_done => pf_layer2_out_48_U_pf_done,
        data_out_read => ap_const_logic_1,
        ap_start => ap_const_logic_0,
        num_valid_datasets => frp_pipeline_valid_U_num_valid_datasets);

    pf_layer2_out_49_U : component myproject_frp_fifoout
    generic map (
        BlockingType => 0,
        PipeLatency => 6,
        PipelineII => 1,
        DataWidth => 33,
        NumWrites => 1,
        CeilLog2Stages => 3,
        CeilLog2FDepth => 3,
        PfAllDoneEnable => 2)
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        data_in => grp_layernormalize_ap_fixed_16_6_5_3_0_ap_fixed_33_13_5_3_0_config2_s_fu_754_ap_return_49,
        data_out => pf_layer2_out_49_U_data_out,
        valid => frp_pipeline_valid_U_valid_out,
        data_in_vld => pf_layer2_out_49_U_data_in_vld,
        data_out_vld => pf_layer2_out_49_U_data_out_vld,
        data_in_last => pf_data_in_last,
        pf_continue => pf_all_done,
        pf_all_done => pf_all_done,
        pf_ready => pf_layer2_out_49_U_pf_ready,
        pf_done => pf_layer2_out_49_U_pf_done,
        data_out_read => ap_const_logic_1,
        ap_start => ap_const_logic_0,
        num_valid_datasets => frp_pipeline_valid_U_num_valid_datasets);

    pf_layer2_out_4_U : component myproject_frp_fifoout
    generic map (
        BlockingType => 0,
        PipeLatency => 6,
        PipelineII => 1,
        DataWidth => 33,
        NumWrites => 1,
        CeilLog2Stages => 3,
        CeilLog2FDepth => 3,
        PfAllDoneEnable => 2)
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        data_in => grp_layernormalize_ap_fixed_16_6_5_3_0_ap_fixed_33_13_5_3_0_config2_s_fu_754_ap_return_4,
        data_out => pf_layer2_out_4_U_data_out,
        valid => frp_pipeline_valid_U_valid_out,
        data_in_vld => pf_layer2_out_4_U_data_in_vld,
        data_out_vld => pf_layer2_out_4_U_data_out_vld,
        data_in_last => pf_data_in_last,
        pf_continue => pf_all_done,
        pf_all_done => pf_all_done,
        pf_ready => pf_layer2_out_4_U_pf_ready,
        pf_done => pf_layer2_out_4_U_pf_done,
        data_out_read => ap_const_logic_1,
        ap_start => ap_const_logic_0,
        num_valid_datasets => frp_pipeline_valid_U_num_valid_datasets);

    pf_layer2_out_50_U : component myproject_frp_fifoout
    generic map (
        BlockingType => 0,
        PipeLatency => 6,
        PipelineII => 1,
        DataWidth => 33,
        NumWrites => 1,
        CeilLog2Stages => 3,
        CeilLog2FDepth => 3,
        PfAllDoneEnable => 2)
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        data_in => grp_layernormalize_ap_fixed_16_6_5_3_0_ap_fixed_33_13_5_3_0_config2_s_fu_754_ap_return_50,
        data_out => pf_layer2_out_50_U_data_out,
        valid => frp_pipeline_valid_U_valid_out,
        data_in_vld => pf_layer2_out_50_U_data_in_vld,
        data_out_vld => pf_layer2_out_50_U_data_out_vld,
        data_in_last => pf_data_in_last,
        pf_continue => pf_all_done,
        pf_all_done => pf_all_done,
        pf_ready => pf_layer2_out_50_U_pf_ready,
        pf_done => pf_layer2_out_50_U_pf_done,
        data_out_read => ap_const_logic_1,
        ap_start => ap_const_logic_0,
        num_valid_datasets => frp_pipeline_valid_U_num_valid_datasets);

    pf_layer2_out_51_U : component myproject_frp_fifoout
    generic map (
        BlockingType => 0,
        PipeLatency => 6,
        PipelineII => 1,
        DataWidth => 33,
        NumWrites => 1,
        CeilLog2Stages => 3,
        CeilLog2FDepth => 3,
        PfAllDoneEnable => 2)
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        data_in => grp_layernormalize_ap_fixed_16_6_5_3_0_ap_fixed_33_13_5_3_0_config2_s_fu_754_ap_return_51,
        data_out => pf_layer2_out_51_U_data_out,
        valid => frp_pipeline_valid_U_valid_out,
        data_in_vld => pf_layer2_out_51_U_data_in_vld,
        data_out_vld => pf_layer2_out_51_U_data_out_vld,
        data_in_last => pf_data_in_last,
        pf_continue => pf_all_done,
        pf_all_done => pf_all_done,
        pf_ready => pf_layer2_out_51_U_pf_ready,
        pf_done => pf_layer2_out_51_U_pf_done,
        data_out_read => ap_const_logic_1,
        ap_start => ap_const_logic_0,
        num_valid_datasets => frp_pipeline_valid_U_num_valid_datasets);

    pf_layer2_out_52_U : component myproject_frp_fifoout
    generic map (
        BlockingType => 0,
        PipeLatency => 6,
        PipelineII => 1,
        DataWidth => 33,
        NumWrites => 1,
        CeilLog2Stages => 3,
        CeilLog2FDepth => 3,
        PfAllDoneEnable => 2)
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        data_in => grp_layernormalize_ap_fixed_16_6_5_3_0_ap_fixed_33_13_5_3_0_config2_s_fu_754_ap_return_52,
        data_out => pf_layer2_out_52_U_data_out,
        valid => frp_pipeline_valid_U_valid_out,
        data_in_vld => pf_layer2_out_52_U_data_in_vld,
        data_out_vld => pf_layer2_out_52_U_data_out_vld,
        data_in_last => pf_data_in_last,
        pf_continue => pf_all_done,
        pf_all_done => pf_all_done,
        pf_ready => pf_layer2_out_52_U_pf_ready,
        pf_done => pf_layer2_out_52_U_pf_done,
        data_out_read => ap_const_logic_1,
        ap_start => ap_const_logic_0,
        num_valid_datasets => frp_pipeline_valid_U_num_valid_datasets);

    pf_layer2_out_53_U : component myproject_frp_fifoout
    generic map (
        BlockingType => 0,
        PipeLatency => 6,
        PipelineII => 1,
        DataWidth => 33,
        NumWrites => 1,
        CeilLog2Stages => 3,
        CeilLog2FDepth => 3,
        PfAllDoneEnable => 2)
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        data_in => grp_layernormalize_ap_fixed_16_6_5_3_0_ap_fixed_33_13_5_3_0_config2_s_fu_754_ap_return_53,
        data_out => pf_layer2_out_53_U_data_out,
        valid => frp_pipeline_valid_U_valid_out,
        data_in_vld => pf_layer2_out_53_U_data_in_vld,
        data_out_vld => pf_layer2_out_53_U_data_out_vld,
        data_in_last => pf_data_in_last,
        pf_continue => pf_all_done,
        pf_all_done => pf_all_done,
        pf_ready => pf_layer2_out_53_U_pf_ready,
        pf_done => pf_layer2_out_53_U_pf_done,
        data_out_read => ap_const_logic_1,
        ap_start => ap_const_logic_0,
        num_valid_datasets => frp_pipeline_valid_U_num_valid_datasets);

    pf_layer2_out_54_U : component myproject_frp_fifoout
    generic map (
        BlockingType => 0,
        PipeLatency => 6,
        PipelineII => 1,
        DataWidth => 33,
        NumWrites => 1,
        CeilLog2Stages => 3,
        CeilLog2FDepth => 3,
        PfAllDoneEnable => 2)
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        data_in => grp_layernormalize_ap_fixed_16_6_5_3_0_ap_fixed_33_13_5_3_0_config2_s_fu_754_ap_return_54,
        data_out => pf_layer2_out_54_U_data_out,
        valid => frp_pipeline_valid_U_valid_out,
        data_in_vld => pf_layer2_out_54_U_data_in_vld,
        data_out_vld => pf_layer2_out_54_U_data_out_vld,
        data_in_last => pf_data_in_last,
        pf_continue => pf_all_done,
        pf_all_done => pf_all_done,
        pf_ready => pf_layer2_out_54_U_pf_ready,
        pf_done => pf_layer2_out_54_U_pf_done,
        data_out_read => ap_const_logic_1,
        ap_start => ap_const_logic_0,
        num_valid_datasets => frp_pipeline_valid_U_num_valid_datasets);

    pf_layer2_out_55_U : component myproject_frp_fifoout
    generic map (
        BlockingType => 0,
        PipeLatency => 6,
        PipelineII => 1,
        DataWidth => 33,
        NumWrites => 1,
        CeilLog2Stages => 3,
        CeilLog2FDepth => 3,
        PfAllDoneEnable => 2)
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        data_in => grp_layernormalize_ap_fixed_16_6_5_3_0_ap_fixed_33_13_5_3_0_config2_s_fu_754_ap_return_55,
        data_out => pf_layer2_out_55_U_data_out,
        valid => frp_pipeline_valid_U_valid_out,
        data_in_vld => pf_layer2_out_55_U_data_in_vld,
        data_out_vld => pf_layer2_out_55_U_data_out_vld,
        data_in_last => pf_data_in_last,
        pf_continue => pf_all_done,
        pf_all_done => pf_all_done,
        pf_ready => pf_layer2_out_55_U_pf_ready,
        pf_done => pf_layer2_out_55_U_pf_done,
        data_out_read => ap_const_logic_1,
        ap_start => ap_const_logic_0,
        num_valid_datasets => frp_pipeline_valid_U_num_valid_datasets);

    pf_layer2_out_56_U : component myproject_frp_fifoout
    generic map (
        BlockingType => 0,
        PipeLatency => 6,
        PipelineII => 1,
        DataWidth => 33,
        NumWrites => 1,
        CeilLog2Stages => 3,
        CeilLog2FDepth => 3,
        PfAllDoneEnable => 2)
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        data_in => grp_layernormalize_ap_fixed_16_6_5_3_0_ap_fixed_33_13_5_3_0_config2_s_fu_754_ap_return_56,
        data_out => pf_layer2_out_56_U_data_out,
        valid => frp_pipeline_valid_U_valid_out,
        data_in_vld => pf_layer2_out_56_U_data_in_vld,
        data_out_vld => pf_layer2_out_56_U_data_out_vld,
        data_in_last => pf_data_in_last,
        pf_continue => pf_all_done,
        pf_all_done => pf_all_done,
        pf_ready => pf_layer2_out_56_U_pf_ready,
        pf_done => pf_layer2_out_56_U_pf_done,
        data_out_read => ap_const_logic_1,
        ap_start => ap_const_logic_0,
        num_valid_datasets => frp_pipeline_valid_U_num_valid_datasets);

    pf_layer2_out_57_U : component myproject_frp_fifoout
    generic map (
        BlockingType => 0,
        PipeLatency => 6,
        PipelineII => 1,
        DataWidth => 33,
        NumWrites => 1,
        CeilLog2Stages => 3,
        CeilLog2FDepth => 3,
        PfAllDoneEnable => 2)
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        data_in => grp_layernormalize_ap_fixed_16_6_5_3_0_ap_fixed_33_13_5_3_0_config2_s_fu_754_ap_return_57,
        data_out => pf_layer2_out_57_U_data_out,
        valid => frp_pipeline_valid_U_valid_out,
        data_in_vld => pf_layer2_out_57_U_data_in_vld,
        data_out_vld => pf_layer2_out_57_U_data_out_vld,
        data_in_last => pf_data_in_last,
        pf_continue => pf_all_done,
        pf_all_done => pf_all_done,
        pf_ready => pf_layer2_out_57_U_pf_ready,
        pf_done => pf_layer2_out_57_U_pf_done,
        data_out_read => ap_const_logic_1,
        ap_start => ap_const_logic_0,
        num_valid_datasets => frp_pipeline_valid_U_num_valid_datasets);

    pf_layer2_out_58_U : component myproject_frp_fifoout
    generic map (
        BlockingType => 0,
        PipeLatency => 6,
        PipelineII => 1,
        DataWidth => 33,
        NumWrites => 1,
        CeilLog2Stages => 3,
        CeilLog2FDepth => 3,
        PfAllDoneEnable => 2)
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        data_in => grp_layernormalize_ap_fixed_16_6_5_3_0_ap_fixed_33_13_5_3_0_config2_s_fu_754_ap_return_58,
        data_out => pf_layer2_out_58_U_data_out,
        valid => frp_pipeline_valid_U_valid_out,
        data_in_vld => pf_layer2_out_58_U_data_in_vld,
        data_out_vld => pf_layer2_out_58_U_data_out_vld,
        data_in_last => pf_data_in_last,
        pf_continue => pf_all_done,
        pf_all_done => pf_all_done,
        pf_ready => pf_layer2_out_58_U_pf_ready,
        pf_done => pf_layer2_out_58_U_pf_done,
        data_out_read => ap_const_logic_1,
        ap_start => ap_const_logic_0,
        num_valid_datasets => frp_pipeline_valid_U_num_valid_datasets);

    pf_layer2_out_59_U : component myproject_frp_fifoout
    generic map (
        BlockingType => 0,
        PipeLatency => 6,
        PipelineII => 1,
        DataWidth => 33,
        NumWrites => 1,
        CeilLog2Stages => 3,
        CeilLog2FDepth => 3,
        PfAllDoneEnable => 2)
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        data_in => grp_layernormalize_ap_fixed_16_6_5_3_0_ap_fixed_33_13_5_3_0_config2_s_fu_754_ap_return_59,
        data_out => pf_layer2_out_59_U_data_out,
        valid => frp_pipeline_valid_U_valid_out,
        data_in_vld => pf_layer2_out_59_U_data_in_vld,
        data_out_vld => pf_layer2_out_59_U_data_out_vld,
        data_in_last => pf_data_in_last,
        pf_continue => pf_all_done,
        pf_all_done => pf_all_done,
        pf_ready => pf_layer2_out_59_U_pf_ready,
        pf_done => pf_layer2_out_59_U_pf_done,
        data_out_read => ap_const_logic_1,
        ap_start => ap_const_logic_0,
        num_valid_datasets => frp_pipeline_valid_U_num_valid_datasets);

    pf_layer2_out_5_U : component myproject_frp_fifoout
    generic map (
        BlockingType => 0,
        PipeLatency => 6,
        PipelineII => 1,
        DataWidth => 33,
        NumWrites => 1,
        CeilLog2Stages => 3,
        CeilLog2FDepth => 3,
        PfAllDoneEnable => 2)
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        data_in => grp_layernormalize_ap_fixed_16_6_5_3_0_ap_fixed_33_13_5_3_0_config2_s_fu_754_ap_return_5,
        data_out => pf_layer2_out_5_U_data_out,
        valid => frp_pipeline_valid_U_valid_out,
        data_in_vld => pf_layer2_out_5_U_data_in_vld,
        data_out_vld => pf_layer2_out_5_U_data_out_vld,
        data_in_last => pf_data_in_last,
        pf_continue => pf_all_done,
        pf_all_done => pf_all_done,
        pf_ready => pf_layer2_out_5_U_pf_ready,
        pf_done => pf_layer2_out_5_U_pf_done,
        data_out_read => ap_const_logic_1,
        ap_start => ap_const_logic_0,
        num_valid_datasets => frp_pipeline_valid_U_num_valid_datasets);

    pf_layer2_out_60_U : component myproject_frp_fifoout
    generic map (
        BlockingType => 0,
        PipeLatency => 6,
        PipelineII => 1,
        DataWidth => 33,
        NumWrites => 1,
        CeilLog2Stages => 3,
        CeilLog2FDepth => 3,
        PfAllDoneEnable => 2)
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        data_in => grp_layernormalize_ap_fixed_16_6_5_3_0_ap_fixed_33_13_5_3_0_config2_s_fu_754_ap_return_60,
        data_out => pf_layer2_out_60_U_data_out,
        valid => frp_pipeline_valid_U_valid_out,
        data_in_vld => pf_layer2_out_60_U_data_in_vld,
        data_out_vld => pf_layer2_out_60_U_data_out_vld,
        data_in_last => pf_data_in_last,
        pf_continue => pf_all_done,
        pf_all_done => pf_all_done,
        pf_ready => pf_layer2_out_60_U_pf_ready,
        pf_done => pf_layer2_out_60_U_pf_done,
        data_out_read => ap_const_logic_1,
        ap_start => ap_const_logic_0,
        num_valid_datasets => frp_pipeline_valid_U_num_valid_datasets);

    pf_layer2_out_61_U : component myproject_frp_fifoout
    generic map (
        BlockingType => 0,
        PipeLatency => 6,
        PipelineII => 1,
        DataWidth => 33,
        NumWrites => 1,
        CeilLog2Stages => 3,
        CeilLog2FDepth => 3,
        PfAllDoneEnable => 2)
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        data_in => grp_layernormalize_ap_fixed_16_6_5_3_0_ap_fixed_33_13_5_3_0_config2_s_fu_754_ap_return_61,
        data_out => pf_layer2_out_61_U_data_out,
        valid => frp_pipeline_valid_U_valid_out,
        data_in_vld => pf_layer2_out_61_U_data_in_vld,
        data_out_vld => pf_layer2_out_61_U_data_out_vld,
        data_in_last => pf_data_in_last,
        pf_continue => pf_all_done,
        pf_all_done => pf_all_done,
        pf_ready => pf_layer2_out_61_U_pf_ready,
        pf_done => pf_layer2_out_61_U_pf_done,
        data_out_read => ap_const_logic_1,
        ap_start => ap_const_logic_0,
        num_valid_datasets => frp_pipeline_valid_U_num_valid_datasets);

    pf_layer2_out_62_U : component myproject_frp_fifoout
    generic map (
        BlockingType => 0,
        PipeLatency => 6,
        PipelineII => 1,
        DataWidth => 33,
        NumWrites => 1,
        CeilLog2Stages => 3,
        CeilLog2FDepth => 3,
        PfAllDoneEnable => 2)
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        data_in => grp_layernormalize_ap_fixed_16_6_5_3_0_ap_fixed_33_13_5_3_0_config2_s_fu_754_ap_return_62,
        data_out => pf_layer2_out_62_U_data_out,
        valid => frp_pipeline_valid_U_valid_out,
        data_in_vld => pf_layer2_out_62_U_data_in_vld,
        data_out_vld => pf_layer2_out_62_U_data_out_vld,
        data_in_last => pf_data_in_last,
        pf_continue => pf_all_done,
        pf_all_done => pf_all_done,
        pf_ready => pf_layer2_out_62_U_pf_ready,
        pf_done => pf_layer2_out_62_U_pf_done,
        data_out_read => ap_const_logic_1,
        ap_start => ap_const_logic_0,
        num_valid_datasets => frp_pipeline_valid_U_num_valid_datasets);

    pf_layer2_out_63_U : component myproject_frp_fifoout
    generic map (
        BlockingType => 0,
        PipeLatency => 6,
        PipelineII => 1,
        DataWidth => 33,
        NumWrites => 1,
        CeilLog2Stages => 3,
        CeilLog2FDepth => 3,
        PfAllDoneEnable => 2)
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        data_in => grp_layernormalize_ap_fixed_16_6_5_3_0_ap_fixed_33_13_5_3_0_config2_s_fu_754_ap_return_63,
        data_out => pf_layer2_out_63_U_data_out,
        valid => frp_pipeline_valid_U_valid_out,
        data_in_vld => pf_layer2_out_63_U_data_in_vld,
        data_out_vld => pf_layer2_out_63_U_data_out_vld,
        data_in_last => pf_data_in_last,
        pf_continue => pf_all_done,
        pf_all_done => pf_all_done,
        pf_ready => pf_layer2_out_63_U_pf_ready,
        pf_done => pf_layer2_out_63_U_pf_done,
        data_out_read => ap_const_logic_1,
        ap_start => ap_const_logic_0,
        num_valid_datasets => frp_pipeline_valid_U_num_valid_datasets);

    pf_layer2_out_64_U : component myproject_frp_fifoout
    generic map (
        BlockingType => 0,
        PipeLatency => 6,
        PipelineII => 1,
        DataWidth => 33,
        NumWrites => 1,
        CeilLog2Stages => 3,
        CeilLog2FDepth => 3,
        PfAllDoneEnable => 2)
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        data_in => grp_layernormalize_ap_fixed_16_6_5_3_0_ap_fixed_33_13_5_3_0_config2_s_fu_754_ap_return_64,
        data_out => pf_layer2_out_64_U_data_out,
        valid => frp_pipeline_valid_U_valid_out,
        data_in_vld => pf_layer2_out_64_U_data_in_vld,
        data_out_vld => pf_layer2_out_64_U_data_out_vld,
        data_in_last => pf_data_in_last,
        pf_continue => pf_all_done,
        pf_all_done => pf_all_done,
        pf_ready => pf_layer2_out_64_U_pf_ready,
        pf_done => pf_layer2_out_64_U_pf_done,
        data_out_read => ap_const_logic_1,
        ap_start => ap_const_logic_0,
        num_valid_datasets => frp_pipeline_valid_U_num_valid_datasets);

    pf_layer2_out_65_U : component myproject_frp_fifoout
    generic map (
        BlockingType => 0,
        PipeLatency => 6,
        PipelineII => 1,
        DataWidth => 33,
        NumWrites => 1,
        CeilLog2Stages => 3,
        CeilLog2FDepth => 3,
        PfAllDoneEnable => 2)
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        data_in => grp_layernormalize_ap_fixed_16_6_5_3_0_ap_fixed_33_13_5_3_0_config2_s_fu_754_ap_return_65,
        data_out => pf_layer2_out_65_U_data_out,
        valid => frp_pipeline_valid_U_valid_out,
        data_in_vld => pf_layer2_out_65_U_data_in_vld,
        data_out_vld => pf_layer2_out_65_U_data_out_vld,
        data_in_last => pf_data_in_last,
        pf_continue => pf_all_done,
        pf_all_done => pf_all_done,
        pf_ready => pf_layer2_out_65_U_pf_ready,
        pf_done => pf_layer2_out_65_U_pf_done,
        data_out_read => ap_const_logic_1,
        ap_start => ap_const_logic_0,
        num_valid_datasets => frp_pipeline_valid_U_num_valid_datasets);

    pf_layer2_out_66_U : component myproject_frp_fifoout
    generic map (
        BlockingType => 0,
        PipeLatency => 6,
        PipelineII => 1,
        DataWidth => 33,
        NumWrites => 1,
        CeilLog2Stages => 3,
        CeilLog2FDepth => 3,
        PfAllDoneEnable => 2)
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        data_in => grp_layernormalize_ap_fixed_16_6_5_3_0_ap_fixed_33_13_5_3_0_config2_s_fu_754_ap_return_66,
        data_out => pf_layer2_out_66_U_data_out,
        valid => frp_pipeline_valid_U_valid_out,
        data_in_vld => pf_layer2_out_66_U_data_in_vld,
        data_out_vld => pf_layer2_out_66_U_data_out_vld,
        data_in_last => pf_data_in_last,
        pf_continue => pf_all_done,
        pf_all_done => pf_all_done,
        pf_ready => pf_layer2_out_66_U_pf_ready,
        pf_done => pf_layer2_out_66_U_pf_done,
        data_out_read => ap_const_logic_1,
        ap_start => ap_const_logic_0,
        num_valid_datasets => frp_pipeline_valid_U_num_valid_datasets);

    pf_layer2_out_67_U : component myproject_frp_fifoout
    generic map (
        BlockingType => 0,
        PipeLatency => 6,
        PipelineII => 1,
        DataWidth => 33,
        NumWrites => 1,
        CeilLog2Stages => 3,
        CeilLog2FDepth => 3,
        PfAllDoneEnable => 2)
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        data_in => grp_layernormalize_ap_fixed_16_6_5_3_0_ap_fixed_33_13_5_3_0_config2_s_fu_754_ap_return_67,
        data_out => pf_layer2_out_67_U_data_out,
        valid => frp_pipeline_valid_U_valid_out,
        data_in_vld => pf_layer2_out_67_U_data_in_vld,
        data_out_vld => pf_layer2_out_67_U_data_out_vld,
        data_in_last => pf_data_in_last,
        pf_continue => pf_all_done,
        pf_all_done => pf_all_done,
        pf_ready => pf_layer2_out_67_U_pf_ready,
        pf_done => pf_layer2_out_67_U_pf_done,
        data_out_read => ap_const_logic_1,
        ap_start => ap_const_logic_0,
        num_valid_datasets => frp_pipeline_valid_U_num_valid_datasets);

    pf_layer2_out_68_U : component myproject_frp_fifoout
    generic map (
        BlockingType => 0,
        PipeLatency => 6,
        PipelineII => 1,
        DataWidth => 33,
        NumWrites => 1,
        CeilLog2Stages => 3,
        CeilLog2FDepth => 3,
        PfAllDoneEnable => 2)
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        data_in => grp_layernormalize_ap_fixed_16_6_5_3_0_ap_fixed_33_13_5_3_0_config2_s_fu_754_ap_return_68,
        data_out => pf_layer2_out_68_U_data_out,
        valid => frp_pipeline_valid_U_valid_out,
        data_in_vld => pf_layer2_out_68_U_data_in_vld,
        data_out_vld => pf_layer2_out_68_U_data_out_vld,
        data_in_last => pf_data_in_last,
        pf_continue => pf_all_done,
        pf_all_done => pf_all_done,
        pf_ready => pf_layer2_out_68_U_pf_ready,
        pf_done => pf_layer2_out_68_U_pf_done,
        data_out_read => ap_const_logic_1,
        ap_start => ap_const_logic_0,
        num_valid_datasets => frp_pipeline_valid_U_num_valid_datasets);

    pf_layer2_out_69_U : component myproject_frp_fifoout
    generic map (
        BlockingType => 0,
        PipeLatency => 6,
        PipelineII => 1,
        DataWidth => 33,
        NumWrites => 1,
        CeilLog2Stages => 3,
        CeilLog2FDepth => 3,
        PfAllDoneEnable => 2)
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        data_in => grp_layernormalize_ap_fixed_16_6_5_3_0_ap_fixed_33_13_5_3_0_config2_s_fu_754_ap_return_69,
        data_out => pf_layer2_out_69_U_data_out,
        valid => frp_pipeline_valid_U_valid_out,
        data_in_vld => pf_layer2_out_69_U_data_in_vld,
        data_out_vld => pf_layer2_out_69_U_data_out_vld,
        data_in_last => pf_data_in_last,
        pf_continue => pf_all_done,
        pf_all_done => pf_all_done,
        pf_ready => pf_layer2_out_69_U_pf_ready,
        pf_done => pf_layer2_out_69_U_pf_done,
        data_out_read => ap_const_logic_1,
        ap_start => ap_const_logic_0,
        num_valid_datasets => frp_pipeline_valid_U_num_valid_datasets);

    pf_layer2_out_6_U : component myproject_frp_fifoout
    generic map (
        BlockingType => 0,
        PipeLatency => 6,
        PipelineII => 1,
        DataWidth => 33,
        NumWrites => 1,
        CeilLog2Stages => 3,
        CeilLog2FDepth => 3,
        PfAllDoneEnable => 2)
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        data_in => grp_layernormalize_ap_fixed_16_6_5_3_0_ap_fixed_33_13_5_3_0_config2_s_fu_754_ap_return_6,
        data_out => pf_layer2_out_6_U_data_out,
        valid => frp_pipeline_valid_U_valid_out,
        data_in_vld => pf_layer2_out_6_U_data_in_vld,
        data_out_vld => pf_layer2_out_6_U_data_out_vld,
        data_in_last => pf_data_in_last,
        pf_continue => pf_all_done,
        pf_all_done => pf_all_done,
        pf_ready => pf_layer2_out_6_U_pf_ready,
        pf_done => pf_layer2_out_6_U_pf_done,
        data_out_read => ap_const_logic_1,
        ap_start => ap_const_logic_0,
        num_valid_datasets => frp_pipeline_valid_U_num_valid_datasets);

    pf_layer2_out_70_U : component myproject_frp_fifoout
    generic map (
        BlockingType => 0,
        PipeLatency => 6,
        PipelineII => 1,
        DataWidth => 33,
        NumWrites => 1,
        CeilLog2Stages => 3,
        CeilLog2FDepth => 3,
        PfAllDoneEnable => 2)
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        data_in => grp_layernormalize_ap_fixed_16_6_5_3_0_ap_fixed_33_13_5_3_0_config2_s_fu_754_ap_return_70,
        data_out => pf_layer2_out_70_U_data_out,
        valid => frp_pipeline_valid_U_valid_out,
        data_in_vld => pf_layer2_out_70_U_data_in_vld,
        data_out_vld => pf_layer2_out_70_U_data_out_vld,
        data_in_last => pf_data_in_last,
        pf_continue => pf_all_done,
        pf_all_done => pf_all_done,
        pf_ready => pf_layer2_out_70_U_pf_ready,
        pf_done => pf_layer2_out_70_U_pf_done,
        data_out_read => ap_const_logic_1,
        ap_start => ap_const_logic_0,
        num_valid_datasets => frp_pipeline_valid_U_num_valid_datasets);

    pf_layer2_out_71_U : component myproject_frp_fifoout
    generic map (
        BlockingType => 0,
        PipeLatency => 6,
        PipelineII => 1,
        DataWidth => 33,
        NumWrites => 1,
        CeilLog2Stages => 3,
        CeilLog2FDepth => 3,
        PfAllDoneEnable => 2)
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        data_in => grp_layernormalize_ap_fixed_16_6_5_3_0_ap_fixed_33_13_5_3_0_config2_s_fu_754_ap_return_71,
        data_out => pf_layer2_out_71_U_data_out,
        valid => frp_pipeline_valid_U_valid_out,
        data_in_vld => pf_layer2_out_71_U_data_in_vld,
        data_out_vld => pf_layer2_out_71_U_data_out_vld,
        data_in_last => pf_data_in_last,
        pf_continue => pf_all_done,
        pf_all_done => pf_all_done,
        pf_ready => pf_layer2_out_71_U_pf_ready,
        pf_done => pf_layer2_out_71_U_pf_done,
        data_out_read => ap_const_logic_1,
        ap_start => ap_const_logic_0,
        num_valid_datasets => frp_pipeline_valid_U_num_valid_datasets);

    pf_layer2_out_72_U : component myproject_frp_fifoout
    generic map (
        BlockingType => 0,
        PipeLatency => 6,
        PipelineII => 1,
        DataWidth => 33,
        NumWrites => 1,
        CeilLog2Stages => 3,
        CeilLog2FDepth => 3,
        PfAllDoneEnable => 2)
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        data_in => grp_layernormalize_ap_fixed_16_6_5_3_0_ap_fixed_33_13_5_3_0_config2_s_fu_754_ap_return_72,
        data_out => pf_layer2_out_72_U_data_out,
        valid => frp_pipeline_valid_U_valid_out,
        data_in_vld => pf_layer2_out_72_U_data_in_vld,
        data_out_vld => pf_layer2_out_72_U_data_out_vld,
        data_in_last => pf_data_in_last,
        pf_continue => pf_all_done,
        pf_all_done => pf_all_done,
        pf_ready => pf_layer2_out_72_U_pf_ready,
        pf_done => pf_layer2_out_72_U_pf_done,
        data_out_read => ap_const_logic_1,
        ap_start => ap_const_logic_0,
        num_valid_datasets => frp_pipeline_valid_U_num_valid_datasets);

    pf_layer2_out_73_U : component myproject_frp_fifoout
    generic map (
        BlockingType => 0,
        PipeLatency => 6,
        PipelineII => 1,
        DataWidth => 33,
        NumWrites => 1,
        CeilLog2Stages => 3,
        CeilLog2FDepth => 3,
        PfAllDoneEnable => 2)
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        data_in => grp_layernormalize_ap_fixed_16_6_5_3_0_ap_fixed_33_13_5_3_0_config2_s_fu_754_ap_return_73,
        data_out => pf_layer2_out_73_U_data_out,
        valid => frp_pipeline_valid_U_valid_out,
        data_in_vld => pf_layer2_out_73_U_data_in_vld,
        data_out_vld => pf_layer2_out_73_U_data_out_vld,
        data_in_last => pf_data_in_last,
        pf_continue => pf_all_done,
        pf_all_done => pf_all_done,
        pf_ready => pf_layer2_out_73_U_pf_ready,
        pf_done => pf_layer2_out_73_U_pf_done,
        data_out_read => ap_const_logic_1,
        ap_start => ap_const_logic_0,
        num_valid_datasets => frp_pipeline_valid_U_num_valid_datasets);

    pf_layer2_out_74_U : component myproject_frp_fifoout
    generic map (
        BlockingType => 0,
        PipeLatency => 6,
        PipelineII => 1,
        DataWidth => 33,
        NumWrites => 1,
        CeilLog2Stages => 3,
        CeilLog2FDepth => 3,
        PfAllDoneEnable => 2)
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        data_in => grp_layernormalize_ap_fixed_16_6_5_3_0_ap_fixed_33_13_5_3_0_config2_s_fu_754_ap_return_74,
        data_out => pf_layer2_out_74_U_data_out,
        valid => frp_pipeline_valid_U_valid_out,
        data_in_vld => pf_layer2_out_74_U_data_in_vld,
        data_out_vld => pf_layer2_out_74_U_data_out_vld,
        data_in_last => pf_data_in_last,
        pf_continue => pf_all_done,
        pf_all_done => pf_all_done,
        pf_ready => pf_layer2_out_74_U_pf_ready,
        pf_done => pf_layer2_out_74_U_pf_done,
        data_out_read => ap_const_logic_1,
        ap_start => ap_const_logic_0,
        num_valid_datasets => frp_pipeline_valid_U_num_valid_datasets);

    pf_layer2_out_75_U : component myproject_frp_fifoout
    generic map (
        BlockingType => 0,
        PipeLatency => 6,
        PipelineII => 1,
        DataWidth => 33,
        NumWrites => 1,
        CeilLog2Stages => 3,
        CeilLog2FDepth => 3,
        PfAllDoneEnable => 2)
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        data_in => grp_layernormalize_ap_fixed_16_6_5_3_0_ap_fixed_33_13_5_3_0_config2_s_fu_754_ap_return_75,
        data_out => pf_layer2_out_75_U_data_out,
        valid => frp_pipeline_valid_U_valid_out,
        data_in_vld => pf_layer2_out_75_U_data_in_vld,
        data_out_vld => pf_layer2_out_75_U_data_out_vld,
        data_in_last => pf_data_in_last,
        pf_continue => pf_all_done,
        pf_all_done => pf_all_done,
        pf_ready => pf_layer2_out_75_U_pf_ready,
        pf_done => pf_layer2_out_75_U_pf_done,
        data_out_read => ap_const_logic_1,
        ap_start => ap_const_logic_0,
        num_valid_datasets => frp_pipeline_valid_U_num_valid_datasets);

    pf_layer2_out_76_U : component myproject_frp_fifoout
    generic map (
        BlockingType => 0,
        PipeLatency => 6,
        PipelineII => 1,
        DataWidth => 33,
        NumWrites => 1,
        CeilLog2Stages => 3,
        CeilLog2FDepth => 3,
        PfAllDoneEnable => 2)
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        data_in => grp_layernormalize_ap_fixed_16_6_5_3_0_ap_fixed_33_13_5_3_0_config2_s_fu_754_ap_return_76,
        data_out => pf_layer2_out_76_U_data_out,
        valid => frp_pipeline_valid_U_valid_out,
        data_in_vld => pf_layer2_out_76_U_data_in_vld,
        data_out_vld => pf_layer2_out_76_U_data_out_vld,
        data_in_last => pf_data_in_last,
        pf_continue => pf_all_done,
        pf_all_done => pf_all_done,
        pf_ready => pf_layer2_out_76_U_pf_ready,
        pf_done => pf_layer2_out_76_U_pf_done,
        data_out_read => ap_const_logic_1,
        ap_start => ap_const_logic_0,
        num_valid_datasets => frp_pipeline_valid_U_num_valid_datasets);

    pf_layer2_out_77_U : component myproject_frp_fifoout
    generic map (
        BlockingType => 0,
        PipeLatency => 6,
        PipelineII => 1,
        DataWidth => 33,
        NumWrites => 1,
        CeilLog2Stages => 3,
        CeilLog2FDepth => 3,
        PfAllDoneEnable => 2)
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        data_in => grp_layernormalize_ap_fixed_16_6_5_3_0_ap_fixed_33_13_5_3_0_config2_s_fu_754_ap_return_77,
        data_out => pf_layer2_out_77_U_data_out,
        valid => frp_pipeline_valid_U_valid_out,
        data_in_vld => pf_layer2_out_77_U_data_in_vld,
        data_out_vld => pf_layer2_out_77_U_data_out_vld,
        data_in_last => pf_data_in_last,
        pf_continue => pf_all_done,
        pf_all_done => pf_all_done,
        pf_ready => pf_layer2_out_77_U_pf_ready,
        pf_done => pf_layer2_out_77_U_pf_done,
        data_out_read => ap_const_logic_1,
        ap_start => ap_const_logic_0,
        num_valid_datasets => frp_pipeline_valid_U_num_valid_datasets);

    pf_layer2_out_78_U : component myproject_frp_fifoout
    generic map (
        BlockingType => 0,
        PipeLatency => 6,
        PipelineII => 1,
        DataWidth => 33,
        NumWrites => 1,
        CeilLog2Stages => 3,
        CeilLog2FDepth => 3,
        PfAllDoneEnable => 2)
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        data_in => grp_layernormalize_ap_fixed_16_6_5_3_0_ap_fixed_33_13_5_3_0_config2_s_fu_754_ap_return_78,
        data_out => pf_layer2_out_78_U_data_out,
        valid => frp_pipeline_valid_U_valid_out,
        data_in_vld => pf_layer2_out_78_U_data_in_vld,
        data_out_vld => pf_layer2_out_78_U_data_out_vld,
        data_in_last => pf_data_in_last,
        pf_continue => pf_all_done,
        pf_all_done => pf_all_done,
        pf_ready => pf_layer2_out_78_U_pf_ready,
        pf_done => pf_layer2_out_78_U_pf_done,
        data_out_read => ap_const_logic_1,
        ap_start => ap_const_logic_0,
        num_valid_datasets => frp_pipeline_valid_U_num_valid_datasets);

    pf_layer2_out_79_U : component myproject_frp_fifoout
    generic map (
        BlockingType => 0,
        PipeLatency => 6,
        PipelineII => 1,
        DataWidth => 33,
        NumWrites => 1,
        CeilLog2Stages => 3,
        CeilLog2FDepth => 3,
        PfAllDoneEnable => 2)
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        data_in => grp_layernormalize_ap_fixed_16_6_5_3_0_ap_fixed_33_13_5_3_0_config2_s_fu_754_ap_return_79,
        data_out => pf_layer2_out_79_U_data_out,
        valid => frp_pipeline_valid_U_valid_out,
        data_in_vld => pf_layer2_out_79_U_data_in_vld,
        data_out_vld => pf_layer2_out_79_U_data_out_vld,
        data_in_last => pf_data_in_last,
        pf_continue => pf_all_done,
        pf_all_done => pf_all_done,
        pf_ready => pf_layer2_out_79_U_pf_ready,
        pf_done => pf_layer2_out_79_U_pf_done,
        data_out_read => ap_const_logic_1,
        ap_start => ap_const_logic_0,
        num_valid_datasets => frp_pipeline_valid_U_num_valid_datasets);

    pf_layer2_out_7_U : component myproject_frp_fifoout
    generic map (
        BlockingType => 0,
        PipeLatency => 6,
        PipelineII => 1,
        DataWidth => 33,
        NumWrites => 1,
        CeilLog2Stages => 3,
        CeilLog2FDepth => 3,
        PfAllDoneEnable => 2)
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        data_in => grp_layernormalize_ap_fixed_16_6_5_3_0_ap_fixed_33_13_5_3_0_config2_s_fu_754_ap_return_7,
        data_out => pf_layer2_out_7_U_data_out,
        valid => frp_pipeline_valid_U_valid_out,
        data_in_vld => pf_layer2_out_7_U_data_in_vld,
        data_out_vld => pf_layer2_out_7_U_data_out_vld,
        data_in_last => pf_data_in_last,
        pf_continue => pf_all_done,
        pf_all_done => pf_all_done,
        pf_ready => pf_layer2_out_7_U_pf_ready,
        pf_done => pf_layer2_out_7_U_pf_done,
        data_out_read => ap_const_logic_1,
        ap_start => ap_const_logic_0,
        num_valid_datasets => frp_pipeline_valid_U_num_valid_datasets);

    pf_layer2_out_8_U : component myproject_frp_fifoout
    generic map (
        BlockingType => 0,
        PipeLatency => 6,
        PipelineII => 1,
        DataWidth => 33,
        NumWrites => 1,
        CeilLog2Stages => 3,
        CeilLog2FDepth => 3,
        PfAllDoneEnable => 2)
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        data_in => grp_layernormalize_ap_fixed_16_6_5_3_0_ap_fixed_33_13_5_3_0_config2_s_fu_754_ap_return_8,
        data_out => pf_layer2_out_8_U_data_out,
        valid => frp_pipeline_valid_U_valid_out,
        data_in_vld => pf_layer2_out_8_U_data_in_vld,
        data_out_vld => pf_layer2_out_8_U_data_out_vld,
        data_in_last => pf_data_in_last,
        pf_continue => pf_all_done,
        pf_all_done => pf_all_done,
        pf_ready => pf_layer2_out_8_U_pf_ready,
        pf_done => pf_layer2_out_8_U_pf_done,
        data_out_read => ap_const_logic_1,
        ap_start => ap_const_logic_0,
        num_valid_datasets => frp_pipeline_valid_U_num_valid_datasets);

    pf_layer2_out_9_U : component myproject_frp_fifoout
    generic map (
        BlockingType => 0,
        PipeLatency => 6,
        PipelineII => 1,
        DataWidth => 33,
        NumWrites => 1,
        CeilLog2Stages => 3,
        CeilLog2FDepth => 3,
        PfAllDoneEnable => 2)
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        data_in => grp_layernormalize_ap_fixed_16_6_5_3_0_ap_fixed_33_13_5_3_0_config2_s_fu_754_ap_return_9,
        data_out => pf_layer2_out_9_U_data_out,
        valid => frp_pipeline_valid_U_valid_out,
        data_in_vld => pf_layer2_out_9_U_data_in_vld,
        data_out_vld => pf_layer2_out_9_U_data_out_vld,
        data_in_last => pf_data_in_last,
        pf_continue => pf_all_done,
        pf_all_done => pf_all_done,
        pf_ready => pf_layer2_out_9_U_pf_ready,
        pf_done => pf_layer2_out_9_U_pf_done,
        data_out_read => ap_const_logic_1,
        ap_start => ap_const_logic_0,
        num_valid_datasets => frp_pipeline_valid_U_num_valid_datasets);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    layer_normalization_input_ap_vld_preg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                layer_normalization_input_ap_vld_preg <= ap_const_logic_0;
            else
                if (((frp_pipeline_valid_U_valid_out(0) = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
                    layer_normalization_input_ap_vld_preg <= ap_const_logic_0;
                elsif ((not(((ap_start = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) and (layer_normalization_input_ap_vld = ap_const_logic_1))) then 
                    layer_normalization_input_ap_vld_preg <= layer_normalization_input_ap_vld;
                end if; 
            end if;
        end if;
    end process;


    layer_normalization_input_preg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                layer_normalization_input_preg <= ap_const_lv1280_lc_1;
            else
                if ((not(((ap_start = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) and (layer_normalization_input_ap_vld = ap_const_logic_1))) then 
                    layer_normalization_input_preg <= layer_normalization_input;
                end if; 
            end if;
        end if;
    end process;


    pf_all_done_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                pf_all_done <= ap_const_logic_0;
            else
                pf_all_done <= (pf_layer2_out_9_U_pf_done and pf_layer2_out_8_U_pf_done and pf_layer2_out_7_U_pf_done and pf_layer2_out_79_U_pf_done and pf_layer2_out_78_U_pf_done and pf_layer2_out_77_U_pf_done and pf_layer2_out_76_U_pf_done and pf_layer2_out_75_U_pf_done and pf_layer2_out_74_U_pf_done and pf_layer2_out_73_U_pf_done and pf_layer2_out_72_U_pf_done and pf_layer2_out_71_U_pf_done and pf_layer2_out_70_U_pf_done and pf_layer2_out_6_U_pf_done and pf_layer2_out_69_U_pf_done and pf_layer2_out_68_U_pf_done and pf_layer2_out_67_U_pf_done and pf_layer2_out_66_U_pf_done and pf_layer2_out_65_U_pf_done and pf_layer2_out_64_U_pf_done and pf_layer2_out_63_U_pf_done and pf_layer2_out_62_U_pf_done and pf_layer2_out_61_U_pf_done and pf_layer2_out_60_U_pf_done and pf_layer2_out_5_U_pf_done and pf_layer2_out_59_U_pf_done and pf_layer2_out_58_U_pf_done and pf_layer2_out_57_U_pf_done and pf_layer2_out_56_U_pf_done and pf_layer2_out_55_U_pf_done and pf_layer2_out_54_U_pf_done and pf_layer2_out_53_U_pf_done and pf_layer2_out_52_U_pf_done and pf_layer2_out_51_U_pf_done 
    and pf_layer2_out_50_U_pf_done and pf_layer2_out_4_U_pf_done and pf_layer2_out_49_U_pf_done and pf_layer2_out_48_U_pf_done and pf_layer2_out_47_U_pf_done and pf_layer2_out_46_U_pf_done and pf_layer2_out_45_U_pf_done and pf_layer2_out_44_U_pf_done and pf_layer2_out_43_U_pf_done and pf_layer2_out_42_U_pf_done and pf_layer2_out_41_U_pf_done and pf_layer2_out_40_U_pf_done and pf_layer2_out_3_U_pf_done and pf_layer2_out_39_U_pf_done and pf_layer2_out_38_U_pf_done and pf_layer2_out_37_U_pf_done and pf_layer2_out_36_U_pf_done and pf_layer2_out_35_U_pf_done and pf_layer2_out_34_U_pf_done and pf_layer2_out_33_U_pf_done and pf_layer2_out_32_U_pf_done and pf_layer2_out_31_U_pf_done and pf_layer2_out_30_U_pf_done and pf_layer2_out_2_U_pf_done and pf_layer2_out_29_U_pf_done and pf_layer2_out_28_U_pf_done and pf_layer2_out_27_U_pf_done and pf_layer2_out_26_U_pf_done and pf_layer2_out_25_U_pf_done and pf_layer2_out_24_U_pf_done and pf_layer2_out_23_U_pf_done and pf_layer2_out_22_U_pf_done and pf_layer2_out_21_U_pf_done and pf_layer2_out_20_U_pf_done 
    and pf_layer2_out_1_U_pf_done and pf_layer2_out_19_U_pf_done and pf_layer2_out_18_U_pf_done and pf_layer2_out_17_U_pf_done and pf_layer2_out_16_U_pf_done and pf_layer2_out_15_U_pf_done and pf_layer2_out_14_U_pf_done and pf_layer2_out_13_U_pf_done and pf_layer2_out_12_U_pf_done and pf_layer2_out_11_U_pf_done and pf_layer2_out_10_U_pf_done and pf_layer2_out_0_U_pf_done);
            end if;
        end if;
    end process;


    ap_NS_fsm_assign_proc : process (ap_CS_fsm, ap_block_pp0_stage0_subdone, ap_reset_idle_pp0)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_pp0_stage0 => 
                ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
            when others =>  
                ap_NS_fsm <= "X";
        end case;
    end process;
    ap_CS_fsm_pp0_stage0 <= ap_CS_fsm(0);
    ap_block_pp0_stage0 <= ap_const_boolean_0;
    ap_block_pp0_stage0_01001 <= ap_const_boolean_0;
    ap_block_pp0_stage0_11001 <= ap_const_boolean_0;
    ap_block_pp0_stage0_11001_ignoreCallOp8 <= ap_const_boolean_0;
    ap_block_pp0_stage0_ignoreCallOp8 <= ap_const_boolean_0;
    ap_block_pp0_stage0_subdone <= ap_const_boolean_0;
        ap_block_state1_pp0_stage0_iter0 <= (ap_const_logic_1 = ap_const_logic_0);
        ap_block_state1_pp0_stage0_iter0_ignore_call165 <= (ap_const_logic_1 = ap_const_logic_0);

    ap_condition_frp_pvb_no_bkwd_prs_assign_proc : process(pf_layer2_out_0_U_pf_ready, pf_layer2_out_10_U_pf_ready, pf_layer2_out_11_U_pf_ready, pf_layer2_out_12_U_pf_ready, pf_layer2_out_13_U_pf_ready, pf_layer2_out_14_U_pf_ready, pf_layer2_out_15_U_pf_ready, pf_layer2_out_16_U_pf_ready, pf_layer2_out_17_U_pf_ready, pf_layer2_out_18_U_pf_ready, pf_layer2_out_19_U_pf_ready, pf_layer2_out_1_U_pf_ready, pf_layer2_out_20_U_pf_ready, pf_layer2_out_21_U_pf_ready, pf_layer2_out_22_U_pf_ready, pf_layer2_out_23_U_pf_ready, pf_layer2_out_24_U_pf_ready, pf_layer2_out_25_U_pf_ready, pf_layer2_out_26_U_pf_ready, pf_layer2_out_27_U_pf_ready, pf_layer2_out_28_U_pf_ready, pf_layer2_out_29_U_pf_ready, pf_layer2_out_2_U_pf_ready, pf_layer2_out_30_U_pf_ready, pf_layer2_out_31_U_pf_ready, pf_layer2_out_32_U_pf_ready, pf_layer2_out_33_U_pf_ready, pf_layer2_out_34_U_pf_ready, pf_layer2_out_35_U_pf_ready, pf_layer2_out_36_U_pf_ready, pf_layer2_out_37_U_pf_ready, pf_layer2_out_38_U_pf_ready, pf_layer2_out_39_U_pf_ready, pf_layer2_out_3_U_pf_ready, pf_layer2_out_40_U_pf_ready, pf_layer2_out_41_U_pf_ready, pf_layer2_out_42_U_pf_ready, pf_layer2_out_43_U_pf_ready, pf_layer2_out_44_U_pf_ready, pf_layer2_out_45_U_pf_ready, pf_layer2_out_46_U_pf_ready, pf_layer2_out_47_U_pf_ready, pf_layer2_out_48_U_pf_ready, pf_layer2_out_49_U_pf_ready, pf_layer2_out_4_U_pf_ready, pf_layer2_out_50_U_pf_ready, pf_layer2_out_51_U_pf_ready, pf_layer2_out_52_U_pf_ready, pf_layer2_out_53_U_pf_ready, pf_layer2_out_54_U_pf_ready, pf_layer2_out_55_U_pf_ready, pf_layer2_out_56_U_pf_ready, pf_layer2_out_57_U_pf_ready, pf_layer2_out_58_U_pf_ready, pf_layer2_out_59_U_pf_ready, pf_layer2_out_5_U_pf_ready, pf_layer2_out_60_U_pf_ready, pf_layer2_out_61_U_pf_ready, pf_layer2_out_62_U_pf_ready, pf_layer2_out_63_U_pf_ready, pf_layer2_out_64_U_pf_ready, pf_layer2_out_65_U_pf_ready, pf_layer2_out_66_U_pf_ready, pf_layer2_out_67_U_pf_ready, pf_layer2_out_68_U_pf_ready, pf_layer2_out_69_U_pf_ready, pf_layer2_out_6_U_pf_ready, pf_layer2_out_70_U_pf_ready, pf_layer2_out_71_U_pf_ready, pf_layer2_out_72_U_pf_ready, pf_layer2_out_73_U_pf_ready, pf_layer2_out_74_U_pf_ready, pf_layer2_out_75_U_pf_ready, pf_layer2_out_76_U_pf_ready, pf_layer2_out_77_U_pf_ready, pf_layer2_out_78_U_pf_ready, pf_layer2_out_79_U_pf_ready, pf_layer2_out_7_U_pf_ready, pf_layer2_out_8_U_pf_ready, pf_layer2_out_9_U_pf_ready)
    begin
                ap_condition_frp_pvb_no_bkwd_prs <= ((pf_layer2_out_9_U_pf_ready = ap_const_logic_1) and (pf_layer2_out_8_U_pf_ready = ap_const_logic_1) and (pf_layer2_out_7_U_pf_ready = ap_const_logic_1) and (pf_layer2_out_79_U_pf_ready = ap_const_logic_1) and (pf_layer2_out_78_U_pf_ready = ap_const_logic_1) and (pf_layer2_out_77_U_pf_ready = ap_const_logic_1) and (pf_layer2_out_76_U_pf_ready = ap_const_logic_1) and (pf_layer2_out_75_U_pf_ready = ap_const_logic_1) and (pf_layer2_out_74_U_pf_ready = ap_const_logic_1) and (pf_layer2_out_73_U_pf_ready = ap_const_logic_1) and (pf_layer2_out_72_U_pf_ready = ap_const_logic_1) and (pf_layer2_out_71_U_pf_ready = ap_const_logic_1) and (pf_layer2_out_70_U_pf_ready = ap_const_logic_1) and (pf_layer2_out_6_U_pf_ready = ap_const_logic_1) and (pf_layer2_out_69_U_pf_ready = ap_const_logic_1) and (pf_layer2_out_68_U_pf_ready = ap_const_logic_1) and (pf_layer2_out_67_U_pf_ready = ap_const_logic_1) and (pf_layer2_out_66_U_pf_ready = ap_const_logic_1) and (pf_layer2_out_65_U_pf_ready = ap_const_logic_1) and (pf_layer2_out_64_U_pf_ready 
    = ap_const_logic_1) and (pf_layer2_out_63_U_pf_ready = ap_const_logic_1) and (pf_layer2_out_62_U_pf_ready = ap_const_logic_1) and (pf_layer2_out_61_U_pf_ready = ap_const_logic_1) and (pf_layer2_out_60_U_pf_ready = ap_const_logic_1) and (pf_layer2_out_5_U_pf_ready = ap_const_logic_1) and (pf_layer2_out_59_U_pf_ready = ap_const_logic_1) and (pf_layer2_out_58_U_pf_ready = ap_const_logic_1) and (pf_layer2_out_57_U_pf_ready = ap_const_logic_1) and (pf_layer2_out_56_U_pf_ready = ap_const_logic_1) and (pf_layer2_out_55_U_pf_ready = ap_const_logic_1) and (pf_layer2_out_54_U_pf_ready = ap_const_logic_1) and (pf_layer2_out_53_U_pf_ready = ap_const_logic_1) and (pf_layer2_out_52_U_pf_ready = ap_const_logic_1) and (pf_layer2_out_51_U_pf_ready = ap_const_logic_1) and (pf_layer2_out_50_U_pf_ready = ap_const_logic_1) and (pf_layer2_out_4_U_pf_ready = ap_const_logic_1) and (pf_layer2_out_49_U_pf_ready = ap_const_logic_1) and (pf_layer2_out_48_U_pf_ready = ap_const_logic_1) and (pf_layer2_out_47_U_pf_ready = ap_const_logic_1) 
    and (pf_layer2_out_46_U_pf_ready = ap_const_logic_1) and (pf_layer2_out_45_U_pf_ready = ap_const_logic_1) and (pf_layer2_out_44_U_pf_ready = ap_const_logic_1) and (pf_layer2_out_43_U_pf_ready = ap_const_logic_1) and (pf_layer2_out_42_U_pf_ready = ap_const_logic_1) and (pf_layer2_out_41_U_pf_ready = ap_const_logic_1) and (pf_layer2_out_40_U_pf_ready = ap_const_logic_1) and (pf_layer2_out_3_U_pf_ready = ap_const_logic_1) and (pf_layer2_out_39_U_pf_ready = ap_const_logic_1) and (pf_layer2_out_38_U_pf_ready = ap_const_logic_1) and (pf_layer2_out_37_U_pf_ready = ap_const_logic_1) and (pf_layer2_out_36_U_pf_ready = ap_const_logic_1) and (pf_layer2_out_35_U_pf_ready = ap_const_logic_1) and (pf_layer2_out_34_U_pf_ready = ap_const_logic_1) and (pf_layer2_out_33_U_pf_ready = ap_const_logic_1) and (pf_layer2_out_32_U_pf_ready = ap_const_logic_1) and (pf_layer2_out_31_U_pf_ready = ap_const_logic_1) and (pf_layer2_out_30_U_pf_ready = ap_const_logic_1) and (pf_layer2_out_2_U_pf_ready = ap_const_logic_1) and (pf_layer2_out_29_U_pf_ready 
    = ap_const_logic_1) and (pf_layer2_out_28_U_pf_ready = ap_const_logic_1) and (pf_layer2_out_27_U_pf_ready = ap_const_logic_1) and (pf_layer2_out_26_U_pf_ready = ap_const_logic_1) and (pf_layer2_out_25_U_pf_ready = ap_const_logic_1) and (pf_layer2_out_24_U_pf_ready = ap_const_logic_1) and (pf_layer2_out_23_U_pf_ready = ap_const_logic_1) and (pf_layer2_out_22_U_pf_ready = ap_const_logic_1) and (pf_layer2_out_21_U_pf_ready = ap_const_logic_1) and (pf_layer2_out_20_U_pf_ready = ap_const_logic_1) and (pf_layer2_out_1_U_pf_ready = ap_const_logic_1) and (pf_layer2_out_19_U_pf_ready = ap_const_logic_1) and (pf_layer2_out_18_U_pf_ready = ap_const_logic_1) and (pf_layer2_out_17_U_pf_ready = ap_const_logic_1) and (pf_layer2_out_16_U_pf_ready = ap_const_logic_1) and (pf_layer2_out_15_U_pf_ready = ap_const_logic_1) and (pf_layer2_out_14_U_pf_ready = ap_const_logic_1) and (pf_layer2_out_13_U_pf_ready = ap_const_logic_1) and (pf_layer2_out_12_U_pf_ready = ap_const_logic_1) and (pf_layer2_out_11_U_pf_ready = ap_const_logic_1) 
    and (pf_layer2_out_10_U_pf_ready = ap_const_logic_1) and (pf_layer2_out_0_U_pf_ready = ap_const_logic_1));
    end process;


    ap_condition_frp_pvb_no_fwd_prs_assign_proc : process(layer_normalization_input_ap_vld_in_sig)
    begin
                ap_condition_frp_pvb_no_fwd_prs <= (layer_normalization_input_ap_vld_in_sig = ap_const_logic_1);
    end process;


    ap_condition_frp_pvb_pf_start_assign_proc : process(ap_start, ap_CS_fsm_pp0_stage0)
    begin
                ap_condition_frp_pvb_pf_start <= ((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0));
    end process;


    ap_done_assign_proc : process(ap_enable_reg_pp0_iter5, ap_block_pp0_stage0_subdone, pf_all_done)
    begin
        ap_done <= pf_all_done;
    end process;

    ap_enable_pp0 <= (ap_idle_pp0 xor ap_const_logic_1);
    ap_enable_reg_pp0_iter0 <= ap_start;

    ap_enable_reg_pp0_iter1_assign_proc : process(frp_pipeline_valid_U_valid_out)
    begin
        if ((frp_pipeline_valid_U_valid_out(1) = ap_const_logic_1)) then 
            ap_enable_reg_pp0_iter1 <= ap_const_logic_1;
        else 
            ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
        end if; 
    end process;


    ap_enable_reg_pp0_iter2_assign_proc : process(frp_pipeline_valid_U_valid_out)
    begin
        if ((frp_pipeline_valid_U_valid_out(2) = ap_const_logic_1)) then 
            ap_enable_reg_pp0_iter2 <= ap_const_logic_1;
        else 
            ap_enable_reg_pp0_iter2 <= ap_const_logic_0;
        end if; 
    end process;


    ap_enable_reg_pp0_iter3_assign_proc : process(frp_pipeline_valid_U_valid_out)
    begin
        if ((frp_pipeline_valid_U_valid_out(3) = ap_const_logic_1)) then 
            ap_enable_reg_pp0_iter3 <= ap_const_logic_1;
        else 
            ap_enable_reg_pp0_iter3 <= ap_const_logic_0;
        end if; 
    end process;


    ap_enable_reg_pp0_iter4_assign_proc : process(frp_pipeline_valid_U_valid_out)
    begin
        if ((frp_pipeline_valid_U_valid_out(4) = ap_const_logic_1)) then 
            ap_enable_reg_pp0_iter4 <= ap_const_logic_1;
        else 
            ap_enable_reg_pp0_iter4 <= ap_const_logic_0;
        end if; 
    end process;


    ap_enable_reg_pp0_iter5_assign_proc : process(frp_pipeline_valid_U_valid_out)
    begin
        if ((frp_pipeline_valid_U_valid_out(5) = ap_const_logic_1)) then 
            ap_enable_reg_pp0_iter5 <= ap_const_logic_1;
        else 
            ap_enable_reg_pp0_iter5 <= ap_const_logic_0;
        end if; 
    end process;


    ap_frp_vld_in_assign_proc : process(ap_condition_frp_pvb_no_fwd_prs, ap_condition_frp_pvb_no_bkwd_prs, ap_condition_frp_pvb_pf_start)
    begin
        if (((ap_const_boolean_1 = ap_condition_frp_pvb_pf_start) and (ap_const_boolean_1 = ap_condition_frp_pvb_no_bkwd_prs) and (ap_const_boolean_1 = ap_condition_frp_pvb_no_fwd_prs))) then 
            ap_frp_vld_in <= ap_const_logic_1;
        else 
            ap_frp_vld_in <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_assign_proc : process(ap_start, ap_CS_fsm_pp0_stage0, ap_idle_pp0)
    begin
        if (((ap_start = ap_const_logic_0) and (ap_idle_pp0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp0_assign_proc : process(ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter2, ap_enable_reg_pp0_iter3, ap_enable_reg_pp0_iter4, ap_enable_reg_pp0_iter5)
    begin
        if (((ap_enable_reg_pp0_iter5 = ap_const_logic_0) and (ap_enable_reg_pp0_iter4 = ap_const_logic_0) and (ap_enable_reg_pp0_iter3 = ap_const_logic_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_0))) then 
            ap_idle_pp0 <= ap_const_logic_1;
        else 
            ap_idle_pp0 <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp0_0to4_assign_proc : process(ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter2, ap_enable_reg_pp0_iter3, ap_enable_reg_pp0_iter4)
    begin
        if (((ap_enable_reg_pp0_iter4 = ap_const_logic_0) and (ap_enable_reg_pp0_iter3 = ap_const_logic_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_0))) then 
            ap_idle_pp0_0to4 <= ap_const_logic_1;
        else 
            ap_idle_pp0_0to4 <= ap_const_logic_0;
        end if; 
    end process;


    ap_ready_assign_proc : process(frp_valid_for_ap_ready)
    begin
        if ((frp_valid_for_ap_ready = ap_const_logic_1)) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;


    ap_reset_idle_pp0_assign_proc : process(ap_start, ap_idle_pp0_0to4)
    begin
        if (((ap_start = ap_const_logic_0) and (ap_idle_pp0_0to4 = ap_const_logic_1))) then 
            ap_reset_idle_pp0 <= ap_const_logic_1;
        else 
            ap_reset_idle_pp0 <= ap_const_logic_0;
        end if; 
    end process;

    frp_valid_for_ap_ready <= frp_pipeline_valid_U_valid_out(0);
    layer2_out_0 <= pf_layer2_out_0_U_data_out;

    layer2_out_0_ap_vld_assign_proc : process(pf_layer2_out_0_U_data_out_vld)
    begin
        if ((pf_layer2_out_0_U_data_out_vld = ap_const_logic_1)) then 
            layer2_out_0_ap_vld <= ap_const_logic_1;
        else 
            layer2_out_0_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    layer2_out_1 <= pf_layer2_out_1_U_data_out;
    layer2_out_10 <= pf_layer2_out_10_U_data_out;

    layer2_out_10_ap_vld_assign_proc : process(pf_layer2_out_10_U_data_out_vld)
    begin
        if ((pf_layer2_out_10_U_data_out_vld = ap_const_logic_1)) then 
            layer2_out_10_ap_vld <= ap_const_logic_1;
        else 
            layer2_out_10_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    layer2_out_11 <= pf_layer2_out_11_U_data_out;

    layer2_out_11_ap_vld_assign_proc : process(pf_layer2_out_11_U_data_out_vld)
    begin
        if ((pf_layer2_out_11_U_data_out_vld = ap_const_logic_1)) then 
            layer2_out_11_ap_vld <= ap_const_logic_1;
        else 
            layer2_out_11_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    layer2_out_12 <= pf_layer2_out_12_U_data_out;

    layer2_out_12_ap_vld_assign_proc : process(pf_layer2_out_12_U_data_out_vld)
    begin
        if ((pf_layer2_out_12_U_data_out_vld = ap_const_logic_1)) then 
            layer2_out_12_ap_vld <= ap_const_logic_1;
        else 
            layer2_out_12_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    layer2_out_13 <= pf_layer2_out_13_U_data_out;

    layer2_out_13_ap_vld_assign_proc : process(pf_layer2_out_13_U_data_out_vld)
    begin
        if ((pf_layer2_out_13_U_data_out_vld = ap_const_logic_1)) then 
            layer2_out_13_ap_vld <= ap_const_logic_1;
        else 
            layer2_out_13_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    layer2_out_14 <= pf_layer2_out_14_U_data_out;

    layer2_out_14_ap_vld_assign_proc : process(pf_layer2_out_14_U_data_out_vld)
    begin
        if ((pf_layer2_out_14_U_data_out_vld = ap_const_logic_1)) then 
            layer2_out_14_ap_vld <= ap_const_logic_1;
        else 
            layer2_out_14_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    layer2_out_15 <= pf_layer2_out_15_U_data_out;

    layer2_out_15_ap_vld_assign_proc : process(pf_layer2_out_15_U_data_out_vld)
    begin
        if ((pf_layer2_out_15_U_data_out_vld = ap_const_logic_1)) then 
            layer2_out_15_ap_vld <= ap_const_logic_1;
        else 
            layer2_out_15_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    layer2_out_16 <= pf_layer2_out_16_U_data_out;

    layer2_out_16_ap_vld_assign_proc : process(pf_layer2_out_16_U_data_out_vld)
    begin
        if ((pf_layer2_out_16_U_data_out_vld = ap_const_logic_1)) then 
            layer2_out_16_ap_vld <= ap_const_logic_1;
        else 
            layer2_out_16_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    layer2_out_17 <= pf_layer2_out_17_U_data_out;

    layer2_out_17_ap_vld_assign_proc : process(pf_layer2_out_17_U_data_out_vld)
    begin
        if ((pf_layer2_out_17_U_data_out_vld = ap_const_logic_1)) then 
            layer2_out_17_ap_vld <= ap_const_logic_1;
        else 
            layer2_out_17_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    layer2_out_18 <= pf_layer2_out_18_U_data_out;

    layer2_out_18_ap_vld_assign_proc : process(pf_layer2_out_18_U_data_out_vld)
    begin
        if ((pf_layer2_out_18_U_data_out_vld = ap_const_logic_1)) then 
            layer2_out_18_ap_vld <= ap_const_logic_1;
        else 
            layer2_out_18_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    layer2_out_19 <= pf_layer2_out_19_U_data_out;

    layer2_out_19_ap_vld_assign_proc : process(pf_layer2_out_19_U_data_out_vld)
    begin
        if ((pf_layer2_out_19_U_data_out_vld = ap_const_logic_1)) then 
            layer2_out_19_ap_vld <= ap_const_logic_1;
        else 
            layer2_out_19_ap_vld <= ap_const_logic_0;
        end if; 
    end process;


    layer2_out_1_ap_vld_assign_proc : process(pf_layer2_out_1_U_data_out_vld)
    begin
        if ((pf_layer2_out_1_U_data_out_vld = ap_const_logic_1)) then 
            layer2_out_1_ap_vld <= ap_const_logic_1;
        else 
            layer2_out_1_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    layer2_out_2 <= pf_layer2_out_2_U_data_out;
    layer2_out_20 <= pf_layer2_out_20_U_data_out;

    layer2_out_20_ap_vld_assign_proc : process(pf_layer2_out_20_U_data_out_vld)
    begin
        if ((pf_layer2_out_20_U_data_out_vld = ap_const_logic_1)) then 
            layer2_out_20_ap_vld <= ap_const_logic_1;
        else 
            layer2_out_20_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    layer2_out_21 <= pf_layer2_out_21_U_data_out;

    layer2_out_21_ap_vld_assign_proc : process(pf_layer2_out_21_U_data_out_vld)
    begin
        if ((pf_layer2_out_21_U_data_out_vld = ap_const_logic_1)) then 
            layer2_out_21_ap_vld <= ap_const_logic_1;
        else 
            layer2_out_21_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    layer2_out_22 <= pf_layer2_out_22_U_data_out;

    layer2_out_22_ap_vld_assign_proc : process(pf_layer2_out_22_U_data_out_vld)
    begin
        if ((pf_layer2_out_22_U_data_out_vld = ap_const_logic_1)) then 
            layer2_out_22_ap_vld <= ap_const_logic_1;
        else 
            layer2_out_22_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    layer2_out_23 <= pf_layer2_out_23_U_data_out;

    layer2_out_23_ap_vld_assign_proc : process(pf_layer2_out_23_U_data_out_vld)
    begin
        if ((pf_layer2_out_23_U_data_out_vld = ap_const_logic_1)) then 
            layer2_out_23_ap_vld <= ap_const_logic_1;
        else 
            layer2_out_23_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    layer2_out_24 <= pf_layer2_out_24_U_data_out;

    layer2_out_24_ap_vld_assign_proc : process(pf_layer2_out_24_U_data_out_vld)
    begin
        if ((pf_layer2_out_24_U_data_out_vld = ap_const_logic_1)) then 
            layer2_out_24_ap_vld <= ap_const_logic_1;
        else 
            layer2_out_24_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    layer2_out_25 <= pf_layer2_out_25_U_data_out;

    layer2_out_25_ap_vld_assign_proc : process(pf_layer2_out_25_U_data_out_vld)
    begin
        if ((pf_layer2_out_25_U_data_out_vld = ap_const_logic_1)) then 
            layer2_out_25_ap_vld <= ap_const_logic_1;
        else 
            layer2_out_25_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    layer2_out_26 <= pf_layer2_out_26_U_data_out;

    layer2_out_26_ap_vld_assign_proc : process(pf_layer2_out_26_U_data_out_vld)
    begin
        if ((pf_layer2_out_26_U_data_out_vld = ap_const_logic_1)) then 
            layer2_out_26_ap_vld <= ap_const_logic_1;
        else 
            layer2_out_26_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    layer2_out_27 <= pf_layer2_out_27_U_data_out;

    layer2_out_27_ap_vld_assign_proc : process(pf_layer2_out_27_U_data_out_vld)
    begin
        if ((pf_layer2_out_27_U_data_out_vld = ap_const_logic_1)) then 
            layer2_out_27_ap_vld <= ap_const_logic_1;
        else 
            layer2_out_27_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    layer2_out_28 <= pf_layer2_out_28_U_data_out;

    layer2_out_28_ap_vld_assign_proc : process(pf_layer2_out_28_U_data_out_vld)
    begin
        if ((pf_layer2_out_28_U_data_out_vld = ap_const_logic_1)) then 
            layer2_out_28_ap_vld <= ap_const_logic_1;
        else 
            layer2_out_28_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    layer2_out_29 <= pf_layer2_out_29_U_data_out;

    layer2_out_29_ap_vld_assign_proc : process(pf_layer2_out_29_U_data_out_vld)
    begin
        if ((pf_layer2_out_29_U_data_out_vld = ap_const_logic_1)) then 
            layer2_out_29_ap_vld <= ap_const_logic_1;
        else 
            layer2_out_29_ap_vld <= ap_const_logic_0;
        end if; 
    end process;


    layer2_out_2_ap_vld_assign_proc : process(pf_layer2_out_2_U_data_out_vld)
    begin
        if ((pf_layer2_out_2_U_data_out_vld = ap_const_logic_1)) then 
            layer2_out_2_ap_vld <= ap_const_logic_1;
        else 
            layer2_out_2_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    layer2_out_3 <= pf_layer2_out_3_U_data_out;
    layer2_out_30 <= pf_layer2_out_30_U_data_out;

    layer2_out_30_ap_vld_assign_proc : process(pf_layer2_out_30_U_data_out_vld)
    begin
        if ((pf_layer2_out_30_U_data_out_vld = ap_const_logic_1)) then 
            layer2_out_30_ap_vld <= ap_const_logic_1;
        else 
            layer2_out_30_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    layer2_out_31 <= pf_layer2_out_31_U_data_out;

    layer2_out_31_ap_vld_assign_proc : process(pf_layer2_out_31_U_data_out_vld)
    begin
        if ((pf_layer2_out_31_U_data_out_vld = ap_const_logic_1)) then 
            layer2_out_31_ap_vld <= ap_const_logic_1;
        else 
            layer2_out_31_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    layer2_out_32 <= pf_layer2_out_32_U_data_out;

    layer2_out_32_ap_vld_assign_proc : process(pf_layer2_out_32_U_data_out_vld)
    begin
        if ((pf_layer2_out_32_U_data_out_vld = ap_const_logic_1)) then 
            layer2_out_32_ap_vld <= ap_const_logic_1;
        else 
            layer2_out_32_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    layer2_out_33 <= pf_layer2_out_33_U_data_out;

    layer2_out_33_ap_vld_assign_proc : process(pf_layer2_out_33_U_data_out_vld)
    begin
        if ((pf_layer2_out_33_U_data_out_vld = ap_const_logic_1)) then 
            layer2_out_33_ap_vld <= ap_const_logic_1;
        else 
            layer2_out_33_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    layer2_out_34 <= pf_layer2_out_34_U_data_out;

    layer2_out_34_ap_vld_assign_proc : process(pf_layer2_out_34_U_data_out_vld)
    begin
        if ((pf_layer2_out_34_U_data_out_vld = ap_const_logic_1)) then 
            layer2_out_34_ap_vld <= ap_const_logic_1;
        else 
            layer2_out_34_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    layer2_out_35 <= pf_layer2_out_35_U_data_out;

    layer2_out_35_ap_vld_assign_proc : process(pf_layer2_out_35_U_data_out_vld)
    begin
        if ((pf_layer2_out_35_U_data_out_vld = ap_const_logic_1)) then 
            layer2_out_35_ap_vld <= ap_const_logic_1;
        else 
            layer2_out_35_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    layer2_out_36 <= pf_layer2_out_36_U_data_out;

    layer2_out_36_ap_vld_assign_proc : process(pf_layer2_out_36_U_data_out_vld)
    begin
        if ((pf_layer2_out_36_U_data_out_vld = ap_const_logic_1)) then 
            layer2_out_36_ap_vld <= ap_const_logic_1;
        else 
            layer2_out_36_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    layer2_out_37 <= pf_layer2_out_37_U_data_out;

    layer2_out_37_ap_vld_assign_proc : process(pf_layer2_out_37_U_data_out_vld)
    begin
        if ((pf_layer2_out_37_U_data_out_vld = ap_const_logic_1)) then 
            layer2_out_37_ap_vld <= ap_const_logic_1;
        else 
            layer2_out_37_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    layer2_out_38 <= pf_layer2_out_38_U_data_out;

    layer2_out_38_ap_vld_assign_proc : process(pf_layer2_out_38_U_data_out_vld)
    begin
        if ((pf_layer2_out_38_U_data_out_vld = ap_const_logic_1)) then 
            layer2_out_38_ap_vld <= ap_const_logic_1;
        else 
            layer2_out_38_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    layer2_out_39 <= pf_layer2_out_39_U_data_out;

    layer2_out_39_ap_vld_assign_proc : process(pf_layer2_out_39_U_data_out_vld)
    begin
        if ((pf_layer2_out_39_U_data_out_vld = ap_const_logic_1)) then 
            layer2_out_39_ap_vld <= ap_const_logic_1;
        else 
            layer2_out_39_ap_vld <= ap_const_logic_0;
        end if; 
    end process;


    layer2_out_3_ap_vld_assign_proc : process(pf_layer2_out_3_U_data_out_vld)
    begin
        if ((pf_layer2_out_3_U_data_out_vld = ap_const_logic_1)) then 
            layer2_out_3_ap_vld <= ap_const_logic_1;
        else 
            layer2_out_3_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    layer2_out_4 <= pf_layer2_out_4_U_data_out;
    layer2_out_40 <= pf_layer2_out_40_U_data_out;

    layer2_out_40_ap_vld_assign_proc : process(pf_layer2_out_40_U_data_out_vld)
    begin
        if ((pf_layer2_out_40_U_data_out_vld = ap_const_logic_1)) then 
            layer2_out_40_ap_vld <= ap_const_logic_1;
        else 
            layer2_out_40_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    layer2_out_41 <= pf_layer2_out_41_U_data_out;

    layer2_out_41_ap_vld_assign_proc : process(pf_layer2_out_41_U_data_out_vld)
    begin
        if ((pf_layer2_out_41_U_data_out_vld = ap_const_logic_1)) then 
            layer2_out_41_ap_vld <= ap_const_logic_1;
        else 
            layer2_out_41_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    layer2_out_42 <= pf_layer2_out_42_U_data_out;

    layer2_out_42_ap_vld_assign_proc : process(pf_layer2_out_42_U_data_out_vld)
    begin
        if ((pf_layer2_out_42_U_data_out_vld = ap_const_logic_1)) then 
            layer2_out_42_ap_vld <= ap_const_logic_1;
        else 
            layer2_out_42_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    layer2_out_43 <= pf_layer2_out_43_U_data_out;

    layer2_out_43_ap_vld_assign_proc : process(pf_layer2_out_43_U_data_out_vld)
    begin
        if ((pf_layer2_out_43_U_data_out_vld = ap_const_logic_1)) then 
            layer2_out_43_ap_vld <= ap_const_logic_1;
        else 
            layer2_out_43_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    layer2_out_44 <= pf_layer2_out_44_U_data_out;

    layer2_out_44_ap_vld_assign_proc : process(pf_layer2_out_44_U_data_out_vld)
    begin
        if ((pf_layer2_out_44_U_data_out_vld = ap_const_logic_1)) then 
            layer2_out_44_ap_vld <= ap_const_logic_1;
        else 
            layer2_out_44_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    layer2_out_45 <= pf_layer2_out_45_U_data_out;

    layer2_out_45_ap_vld_assign_proc : process(pf_layer2_out_45_U_data_out_vld)
    begin
        if ((pf_layer2_out_45_U_data_out_vld = ap_const_logic_1)) then 
            layer2_out_45_ap_vld <= ap_const_logic_1;
        else 
            layer2_out_45_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    layer2_out_46 <= pf_layer2_out_46_U_data_out;

    layer2_out_46_ap_vld_assign_proc : process(pf_layer2_out_46_U_data_out_vld)
    begin
        if ((pf_layer2_out_46_U_data_out_vld = ap_const_logic_1)) then 
            layer2_out_46_ap_vld <= ap_const_logic_1;
        else 
            layer2_out_46_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    layer2_out_47 <= pf_layer2_out_47_U_data_out;

    layer2_out_47_ap_vld_assign_proc : process(pf_layer2_out_47_U_data_out_vld)
    begin
        if ((pf_layer2_out_47_U_data_out_vld = ap_const_logic_1)) then 
            layer2_out_47_ap_vld <= ap_const_logic_1;
        else 
            layer2_out_47_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    layer2_out_48 <= pf_layer2_out_48_U_data_out;

    layer2_out_48_ap_vld_assign_proc : process(pf_layer2_out_48_U_data_out_vld)
    begin
        if ((pf_layer2_out_48_U_data_out_vld = ap_const_logic_1)) then 
            layer2_out_48_ap_vld <= ap_const_logic_1;
        else 
            layer2_out_48_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    layer2_out_49 <= pf_layer2_out_49_U_data_out;

    layer2_out_49_ap_vld_assign_proc : process(pf_layer2_out_49_U_data_out_vld)
    begin
        if ((pf_layer2_out_49_U_data_out_vld = ap_const_logic_1)) then 
            layer2_out_49_ap_vld <= ap_const_logic_1;
        else 
            layer2_out_49_ap_vld <= ap_const_logic_0;
        end if; 
    end process;


    layer2_out_4_ap_vld_assign_proc : process(pf_layer2_out_4_U_data_out_vld)
    begin
        if ((pf_layer2_out_4_U_data_out_vld = ap_const_logic_1)) then 
            layer2_out_4_ap_vld <= ap_const_logic_1;
        else 
            layer2_out_4_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    layer2_out_5 <= pf_layer2_out_5_U_data_out;
    layer2_out_50 <= pf_layer2_out_50_U_data_out;

    layer2_out_50_ap_vld_assign_proc : process(pf_layer2_out_50_U_data_out_vld)
    begin
        if ((pf_layer2_out_50_U_data_out_vld = ap_const_logic_1)) then 
            layer2_out_50_ap_vld <= ap_const_logic_1;
        else 
            layer2_out_50_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    layer2_out_51 <= pf_layer2_out_51_U_data_out;

    layer2_out_51_ap_vld_assign_proc : process(pf_layer2_out_51_U_data_out_vld)
    begin
        if ((pf_layer2_out_51_U_data_out_vld = ap_const_logic_1)) then 
            layer2_out_51_ap_vld <= ap_const_logic_1;
        else 
            layer2_out_51_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    layer2_out_52 <= pf_layer2_out_52_U_data_out;

    layer2_out_52_ap_vld_assign_proc : process(pf_layer2_out_52_U_data_out_vld)
    begin
        if ((pf_layer2_out_52_U_data_out_vld = ap_const_logic_1)) then 
            layer2_out_52_ap_vld <= ap_const_logic_1;
        else 
            layer2_out_52_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    layer2_out_53 <= pf_layer2_out_53_U_data_out;

    layer2_out_53_ap_vld_assign_proc : process(pf_layer2_out_53_U_data_out_vld)
    begin
        if ((pf_layer2_out_53_U_data_out_vld = ap_const_logic_1)) then 
            layer2_out_53_ap_vld <= ap_const_logic_1;
        else 
            layer2_out_53_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    layer2_out_54 <= pf_layer2_out_54_U_data_out;

    layer2_out_54_ap_vld_assign_proc : process(pf_layer2_out_54_U_data_out_vld)
    begin
        if ((pf_layer2_out_54_U_data_out_vld = ap_const_logic_1)) then 
            layer2_out_54_ap_vld <= ap_const_logic_1;
        else 
            layer2_out_54_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    layer2_out_55 <= pf_layer2_out_55_U_data_out;

    layer2_out_55_ap_vld_assign_proc : process(pf_layer2_out_55_U_data_out_vld)
    begin
        if ((pf_layer2_out_55_U_data_out_vld = ap_const_logic_1)) then 
            layer2_out_55_ap_vld <= ap_const_logic_1;
        else 
            layer2_out_55_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    layer2_out_56 <= pf_layer2_out_56_U_data_out;

    layer2_out_56_ap_vld_assign_proc : process(pf_layer2_out_56_U_data_out_vld)
    begin
        if ((pf_layer2_out_56_U_data_out_vld = ap_const_logic_1)) then 
            layer2_out_56_ap_vld <= ap_const_logic_1;
        else 
            layer2_out_56_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    layer2_out_57 <= pf_layer2_out_57_U_data_out;

    layer2_out_57_ap_vld_assign_proc : process(pf_layer2_out_57_U_data_out_vld)
    begin
        if ((pf_layer2_out_57_U_data_out_vld = ap_const_logic_1)) then 
            layer2_out_57_ap_vld <= ap_const_logic_1;
        else 
            layer2_out_57_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    layer2_out_58 <= pf_layer2_out_58_U_data_out;

    layer2_out_58_ap_vld_assign_proc : process(pf_layer2_out_58_U_data_out_vld)
    begin
        if ((pf_layer2_out_58_U_data_out_vld = ap_const_logic_1)) then 
            layer2_out_58_ap_vld <= ap_const_logic_1;
        else 
            layer2_out_58_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    layer2_out_59 <= pf_layer2_out_59_U_data_out;

    layer2_out_59_ap_vld_assign_proc : process(pf_layer2_out_59_U_data_out_vld)
    begin
        if ((pf_layer2_out_59_U_data_out_vld = ap_const_logic_1)) then 
            layer2_out_59_ap_vld <= ap_const_logic_1;
        else 
            layer2_out_59_ap_vld <= ap_const_logic_0;
        end if; 
    end process;


    layer2_out_5_ap_vld_assign_proc : process(pf_layer2_out_5_U_data_out_vld)
    begin
        if ((pf_layer2_out_5_U_data_out_vld = ap_const_logic_1)) then 
            layer2_out_5_ap_vld <= ap_const_logic_1;
        else 
            layer2_out_5_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    layer2_out_6 <= pf_layer2_out_6_U_data_out;
    layer2_out_60 <= pf_layer2_out_60_U_data_out;

    layer2_out_60_ap_vld_assign_proc : process(pf_layer2_out_60_U_data_out_vld)
    begin
        if ((pf_layer2_out_60_U_data_out_vld = ap_const_logic_1)) then 
            layer2_out_60_ap_vld <= ap_const_logic_1;
        else 
            layer2_out_60_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    layer2_out_61 <= pf_layer2_out_61_U_data_out;

    layer2_out_61_ap_vld_assign_proc : process(pf_layer2_out_61_U_data_out_vld)
    begin
        if ((pf_layer2_out_61_U_data_out_vld = ap_const_logic_1)) then 
            layer2_out_61_ap_vld <= ap_const_logic_1;
        else 
            layer2_out_61_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    layer2_out_62 <= pf_layer2_out_62_U_data_out;

    layer2_out_62_ap_vld_assign_proc : process(pf_layer2_out_62_U_data_out_vld)
    begin
        if ((pf_layer2_out_62_U_data_out_vld = ap_const_logic_1)) then 
            layer2_out_62_ap_vld <= ap_const_logic_1;
        else 
            layer2_out_62_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    layer2_out_63 <= pf_layer2_out_63_U_data_out;

    layer2_out_63_ap_vld_assign_proc : process(pf_layer2_out_63_U_data_out_vld)
    begin
        if ((pf_layer2_out_63_U_data_out_vld = ap_const_logic_1)) then 
            layer2_out_63_ap_vld <= ap_const_logic_1;
        else 
            layer2_out_63_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    layer2_out_64 <= pf_layer2_out_64_U_data_out;

    layer2_out_64_ap_vld_assign_proc : process(pf_layer2_out_64_U_data_out_vld)
    begin
        if ((pf_layer2_out_64_U_data_out_vld = ap_const_logic_1)) then 
            layer2_out_64_ap_vld <= ap_const_logic_1;
        else 
            layer2_out_64_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    layer2_out_65 <= pf_layer2_out_65_U_data_out;

    layer2_out_65_ap_vld_assign_proc : process(pf_layer2_out_65_U_data_out_vld)
    begin
        if ((pf_layer2_out_65_U_data_out_vld = ap_const_logic_1)) then 
            layer2_out_65_ap_vld <= ap_const_logic_1;
        else 
            layer2_out_65_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    layer2_out_66 <= pf_layer2_out_66_U_data_out;

    layer2_out_66_ap_vld_assign_proc : process(pf_layer2_out_66_U_data_out_vld)
    begin
        if ((pf_layer2_out_66_U_data_out_vld = ap_const_logic_1)) then 
            layer2_out_66_ap_vld <= ap_const_logic_1;
        else 
            layer2_out_66_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    layer2_out_67 <= pf_layer2_out_67_U_data_out;

    layer2_out_67_ap_vld_assign_proc : process(pf_layer2_out_67_U_data_out_vld)
    begin
        if ((pf_layer2_out_67_U_data_out_vld = ap_const_logic_1)) then 
            layer2_out_67_ap_vld <= ap_const_logic_1;
        else 
            layer2_out_67_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    layer2_out_68 <= pf_layer2_out_68_U_data_out;

    layer2_out_68_ap_vld_assign_proc : process(pf_layer2_out_68_U_data_out_vld)
    begin
        if ((pf_layer2_out_68_U_data_out_vld = ap_const_logic_1)) then 
            layer2_out_68_ap_vld <= ap_const_logic_1;
        else 
            layer2_out_68_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    layer2_out_69 <= pf_layer2_out_69_U_data_out;

    layer2_out_69_ap_vld_assign_proc : process(pf_layer2_out_69_U_data_out_vld)
    begin
        if ((pf_layer2_out_69_U_data_out_vld = ap_const_logic_1)) then 
            layer2_out_69_ap_vld <= ap_const_logic_1;
        else 
            layer2_out_69_ap_vld <= ap_const_logic_0;
        end if; 
    end process;


    layer2_out_6_ap_vld_assign_proc : process(pf_layer2_out_6_U_data_out_vld)
    begin
        if ((pf_layer2_out_6_U_data_out_vld = ap_const_logic_1)) then 
            layer2_out_6_ap_vld <= ap_const_logic_1;
        else 
            layer2_out_6_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    layer2_out_7 <= pf_layer2_out_7_U_data_out;
    layer2_out_70 <= pf_layer2_out_70_U_data_out;

    layer2_out_70_ap_vld_assign_proc : process(pf_layer2_out_70_U_data_out_vld)
    begin
        if ((pf_layer2_out_70_U_data_out_vld = ap_const_logic_1)) then 
            layer2_out_70_ap_vld <= ap_const_logic_1;
        else 
            layer2_out_70_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    layer2_out_71 <= pf_layer2_out_71_U_data_out;

    layer2_out_71_ap_vld_assign_proc : process(pf_layer2_out_71_U_data_out_vld)
    begin
        if ((pf_layer2_out_71_U_data_out_vld = ap_const_logic_1)) then 
            layer2_out_71_ap_vld <= ap_const_logic_1;
        else 
            layer2_out_71_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    layer2_out_72 <= pf_layer2_out_72_U_data_out;

    layer2_out_72_ap_vld_assign_proc : process(pf_layer2_out_72_U_data_out_vld)
    begin
        if ((pf_layer2_out_72_U_data_out_vld = ap_const_logic_1)) then 
            layer2_out_72_ap_vld <= ap_const_logic_1;
        else 
            layer2_out_72_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    layer2_out_73 <= pf_layer2_out_73_U_data_out;

    layer2_out_73_ap_vld_assign_proc : process(pf_layer2_out_73_U_data_out_vld)
    begin
        if ((pf_layer2_out_73_U_data_out_vld = ap_const_logic_1)) then 
            layer2_out_73_ap_vld <= ap_const_logic_1;
        else 
            layer2_out_73_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    layer2_out_74 <= pf_layer2_out_74_U_data_out;

    layer2_out_74_ap_vld_assign_proc : process(pf_layer2_out_74_U_data_out_vld)
    begin
        if ((pf_layer2_out_74_U_data_out_vld = ap_const_logic_1)) then 
            layer2_out_74_ap_vld <= ap_const_logic_1;
        else 
            layer2_out_74_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    layer2_out_75 <= pf_layer2_out_75_U_data_out;

    layer2_out_75_ap_vld_assign_proc : process(pf_layer2_out_75_U_data_out_vld)
    begin
        if ((pf_layer2_out_75_U_data_out_vld = ap_const_logic_1)) then 
            layer2_out_75_ap_vld <= ap_const_logic_1;
        else 
            layer2_out_75_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    layer2_out_76 <= pf_layer2_out_76_U_data_out;

    layer2_out_76_ap_vld_assign_proc : process(pf_layer2_out_76_U_data_out_vld)
    begin
        if ((pf_layer2_out_76_U_data_out_vld = ap_const_logic_1)) then 
            layer2_out_76_ap_vld <= ap_const_logic_1;
        else 
            layer2_out_76_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    layer2_out_77 <= pf_layer2_out_77_U_data_out;

    layer2_out_77_ap_vld_assign_proc : process(pf_layer2_out_77_U_data_out_vld)
    begin
        if ((pf_layer2_out_77_U_data_out_vld = ap_const_logic_1)) then 
            layer2_out_77_ap_vld <= ap_const_logic_1;
        else 
            layer2_out_77_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    layer2_out_78 <= pf_layer2_out_78_U_data_out;

    layer2_out_78_ap_vld_assign_proc : process(pf_layer2_out_78_U_data_out_vld)
    begin
        if ((pf_layer2_out_78_U_data_out_vld = ap_const_logic_1)) then 
            layer2_out_78_ap_vld <= ap_const_logic_1;
        else 
            layer2_out_78_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    layer2_out_79 <= pf_layer2_out_79_U_data_out;

    layer2_out_79_ap_vld_assign_proc : process(pf_layer2_out_79_U_data_out_vld)
    begin
        if ((pf_layer2_out_79_U_data_out_vld = ap_const_logic_1)) then 
            layer2_out_79_ap_vld <= ap_const_logic_1;
        else 
            layer2_out_79_ap_vld <= ap_const_logic_0;
        end if; 
    end process;


    layer2_out_7_ap_vld_assign_proc : process(pf_layer2_out_7_U_data_out_vld)
    begin
        if ((pf_layer2_out_7_U_data_out_vld = ap_const_logic_1)) then 
            layer2_out_7_ap_vld <= ap_const_logic_1;
        else 
            layer2_out_7_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    layer2_out_8 <= pf_layer2_out_8_U_data_out;

    layer2_out_8_ap_vld_assign_proc : process(pf_layer2_out_8_U_data_out_vld)
    begin
        if ((pf_layer2_out_8_U_data_out_vld = ap_const_logic_1)) then 
            layer2_out_8_ap_vld <= ap_const_logic_1;
        else 
            layer2_out_8_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    layer2_out_9 <= pf_layer2_out_9_U_data_out;

    layer2_out_9_ap_vld_assign_proc : process(pf_layer2_out_9_U_data_out_vld)
    begin
        if ((pf_layer2_out_9_U_data_out_vld = ap_const_logic_1)) then 
            layer2_out_9_ap_vld <= ap_const_logic_1;
        else 
            layer2_out_9_ap_vld <= ap_const_logic_0;
        end if; 
    end process;


    layer_normalization_input_ap_vld_in_sig_assign_proc : process(layer_normalization_input_ap_vld, layer_normalization_input_ap_vld_preg)
    begin
        if ((layer_normalization_input_ap_vld = ap_const_logic_1)) then 
            layer_normalization_input_ap_vld_in_sig <= layer_normalization_input_ap_vld;
        else 
            layer_normalization_input_ap_vld_in_sig <= layer_normalization_input_ap_vld_preg;
        end if; 
    end process;


    layer_normalization_input_blk_n_assign_proc : process(layer_normalization_input_ap_vld, ap_block_pp0_stage0, frp_pipeline_valid_U_valid_out)
    begin
        if (((frp_pipeline_valid_U_valid_out(0) = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0))) then 
            layer_normalization_input_blk_n <= layer_normalization_input_ap_vld;
        else 
            layer_normalization_input_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    layer_normalization_input_in_sig_assign_proc : process(layer_normalization_input_ap_vld, layer_normalization_input, layer_normalization_input_preg)
    begin
        if ((layer_normalization_input_ap_vld = ap_const_logic_1)) then 
            layer_normalization_input_in_sig <= layer_normalization_input;
        else 
            layer_normalization_input_in_sig <= layer_normalization_input_preg;
        end if; 
    end process;


    pf_data_in_last_assign_proc : process(frp_pipeline_valid_U_valid_out)
    begin
        if ((frp_pipeline_valid_U_valid_out(5) = ap_const_logic_1)) then 
            pf_data_in_last <= ap_const_logic_1;
        else 
            pf_data_in_last <= ap_const_logic_0;
        end if; 
    end process;


    pf_layer2_out_0_U_data_in_vld_assign_proc : process(ap_enable_reg_pp0_iter5, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter5 = ap_const_logic_1))) then 
            pf_layer2_out_0_U_data_in_vld <= ap_const_logic_1;
        else 
            pf_layer2_out_0_U_data_in_vld <= ap_const_logic_0;
        end if; 
    end process;


    pf_layer2_out_10_U_data_in_vld_assign_proc : process(ap_enable_reg_pp0_iter5, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter5 = ap_const_logic_1))) then 
            pf_layer2_out_10_U_data_in_vld <= ap_const_logic_1;
        else 
            pf_layer2_out_10_U_data_in_vld <= ap_const_logic_0;
        end if; 
    end process;


    pf_layer2_out_11_U_data_in_vld_assign_proc : process(ap_enable_reg_pp0_iter5, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter5 = ap_const_logic_1))) then 
            pf_layer2_out_11_U_data_in_vld <= ap_const_logic_1;
        else 
            pf_layer2_out_11_U_data_in_vld <= ap_const_logic_0;
        end if; 
    end process;


    pf_layer2_out_12_U_data_in_vld_assign_proc : process(ap_enable_reg_pp0_iter5, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter5 = ap_const_logic_1))) then 
            pf_layer2_out_12_U_data_in_vld <= ap_const_logic_1;
        else 
            pf_layer2_out_12_U_data_in_vld <= ap_const_logic_0;
        end if; 
    end process;


    pf_layer2_out_13_U_data_in_vld_assign_proc : process(ap_enable_reg_pp0_iter5, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter5 = ap_const_logic_1))) then 
            pf_layer2_out_13_U_data_in_vld <= ap_const_logic_1;
        else 
            pf_layer2_out_13_U_data_in_vld <= ap_const_logic_0;
        end if; 
    end process;


    pf_layer2_out_14_U_data_in_vld_assign_proc : process(ap_enable_reg_pp0_iter5, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter5 = ap_const_logic_1))) then 
            pf_layer2_out_14_U_data_in_vld <= ap_const_logic_1;
        else 
            pf_layer2_out_14_U_data_in_vld <= ap_const_logic_0;
        end if; 
    end process;


    pf_layer2_out_15_U_data_in_vld_assign_proc : process(ap_enable_reg_pp0_iter5, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter5 = ap_const_logic_1))) then 
            pf_layer2_out_15_U_data_in_vld <= ap_const_logic_1;
        else 
            pf_layer2_out_15_U_data_in_vld <= ap_const_logic_0;
        end if; 
    end process;


    pf_layer2_out_16_U_data_in_vld_assign_proc : process(ap_enable_reg_pp0_iter5, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter5 = ap_const_logic_1))) then 
            pf_layer2_out_16_U_data_in_vld <= ap_const_logic_1;
        else 
            pf_layer2_out_16_U_data_in_vld <= ap_const_logic_0;
        end if; 
    end process;


    pf_layer2_out_17_U_data_in_vld_assign_proc : process(ap_enable_reg_pp0_iter5, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter5 = ap_const_logic_1))) then 
            pf_layer2_out_17_U_data_in_vld <= ap_const_logic_1;
        else 
            pf_layer2_out_17_U_data_in_vld <= ap_const_logic_0;
        end if; 
    end process;


    pf_layer2_out_18_U_data_in_vld_assign_proc : process(ap_enable_reg_pp0_iter5, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter5 = ap_const_logic_1))) then 
            pf_layer2_out_18_U_data_in_vld <= ap_const_logic_1;
        else 
            pf_layer2_out_18_U_data_in_vld <= ap_const_logic_0;
        end if; 
    end process;


    pf_layer2_out_19_U_data_in_vld_assign_proc : process(ap_enable_reg_pp0_iter5, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter5 = ap_const_logic_1))) then 
            pf_layer2_out_19_U_data_in_vld <= ap_const_logic_1;
        else 
            pf_layer2_out_19_U_data_in_vld <= ap_const_logic_0;
        end if; 
    end process;


    pf_layer2_out_1_U_data_in_vld_assign_proc : process(ap_enable_reg_pp0_iter5, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter5 = ap_const_logic_1))) then 
            pf_layer2_out_1_U_data_in_vld <= ap_const_logic_1;
        else 
            pf_layer2_out_1_U_data_in_vld <= ap_const_logic_0;
        end if; 
    end process;


    pf_layer2_out_20_U_data_in_vld_assign_proc : process(ap_enable_reg_pp0_iter5, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter5 = ap_const_logic_1))) then 
            pf_layer2_out_20_U_data_in_vld <= ap_const_logic_1;
        else 
            pf_layer2_out_20_U_data_in_vld <= ap_const_logic_0;
        end if; 
    end process;


    pf_layer2_out_21_U_data_in_vld_assign_proc : process(ap_enable_reg_pp0_iter5, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter5 = ap_const_logic_1))) then 
            pf_layer2_out_21_U_data_in_vld <= ap_const_logic_1;
        else 
            pf_layer2_out_21_U_data_in_vld <= ap_const_logic_0;
        end if; 
    end process;


    pf_layer2_out_22_U_data_in_vld_assign_proc : process(ap_enable_reg_pp0_iter5, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter5 = ap_const_logic_1))) then 
            pf_layer2_out_22_U_data_in_vld <= ap_const_logic_1;
        else 
            pf_layer2_out_22_U_data_in_vld <= ap_const_logic_0;
        end if; 
    end process;


    pf_layer2_out_23_U_data_in_vld_assign_proc : process(ap_enable_reg_pp0_iter5, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter5 = ap_const_logic_1))) then 
            pf_layer2_out_23_U_data_in_vld <= ap_const_logic_1;
        else 
            pf_layer2_out_23_U_data_in_vld <= ap_const_logic_0;
        end if; 
    end process;


    pf_layer2_out_24_U_data_in_vld_assign_proc : process(ap_enable_reg_pp0_iter5, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter5 = ap_const_logic_1))) then 
            pf_layer2_out_24_U_data_in_vld <= ap_const_logic_1;
        else 
            pf_layer2_out_24_U_data_in_vld <= ap_const_logic_0;
        end if; 
    end process;


    pf_layer2_out_25_U_data_in_vld_assign_proc : process(ap_enable_reg_pp0_iter5, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter5 = ap_const_logic_1))) then 
            pf_layer2_out_25_U_data_in_vld <= ap_const_logic_1;
        else 
            pf_layer2_out_25_U_data_in_vld <= ap_const_logic_0;
        end if; 
    end process;


    pf_layer2_out_26_U_data_in_vld_assign_proc : process(ap_enable_reg_pp0_iter5, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter5 = ap_const_logic_1))) then 
            pf_layer2_out_26_U_data_in_vld <= ap_const_logic_1;
        else 
            pf_layer2_out_26_U_data_in_vld <= ap_const_logic_0;
        end if; 
    end process;


    pf_layer2_out_27_U_data_in_vld_assign_proc : process(ap_enable_reg_pp0_iter5, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter5 = ap_const_logic_1))) then 
            pf_layer2_out_27_U_data_in_vld <= ap_const_logic_1;
        else 
            pf_layer2_out_27_U_data_in_vld <= ap_const_logic_0;
        end if; 
    end process;


    pf_layer2_out_28_U_data_in_vld_assign_proc : process(ap_enable_reg_pp0_iter5, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter5 = ap_const_logic_1))) then 
            pf_layer2_out_28_U_data_in_vld <= ap_const_logic_1;
        else 
            pf_layer2_out_28_U_data_in_vld <= ap_const_logic_0;
        end if; 
    end process;


    pf_layer2_out_29_U_data_in_vld_assign_proc : process(ap_enable_reg_pp0_iter5, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter5 = ap_const_logic_1))) then 
            pf_layer2_out_29_U_data_in_vld <= ap_const_logic_1;
        else 
            pf_layer2_out_29_U_data_in_vld <= ap_const_logic_0;
        end if; 
    end process;


    pf_layer2_out_2_U_data_in_vld_assign_proc : process(ap_enable_reg_pp0_iter5, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter5 = ap_const_logic_1))) then 
            pf_layer2_out_2_U_data_in_vld <= ap_const_logic_1;
        else 
            pf_layer2_out_2_U_data_in_vld <= ap_const_logic_0;
        end if; 
    end process;


    pf_layer2_out_30_U_data_in_vld_assign_proc : process(ap_enable_reg_pp0_iter5, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter5 = ap_const_logic_1))) then 
            pf_layer2_out_30_U_data_in_vld <= ap_const_logic_1;
        else 
            pf_layer2_out_30_U_data_in_vld <= ap_const_logic_0;
        end if; 
    end process;


    pf_layer2_out_31_U_data_in_vld_assign_proc : process(ap_enable_reg_pp0_iter5, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter5 = ap_const_logic_1))) then 
            pf_layer2_out_31_U_data_in_vld <= ap_const_logic_1;
        else 
            pf_layer2_out_31_U_data_in_vld <= ap_const_logic_0;
        end if; 
    end process;


    pf_layer2_out_32_U_data_in_vld_assign_proc : process(ap_enable_reg_pp0_iter5, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter5 = ap_const_logic_1))) then 
            pf_layer2_out_32_U_data_in_vld <= ap_const_logic_1;
        else 
            pf_layer2_out_32_U_data_in_vld <= ap_const_logic_0;
        end if; 
    end process;


    pf_layer2_out_33_U_data_in_vld_assign_proc : process(ap_enable_reg_pp0_iter5, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter5 = ap_const_logic_1))) then 
            pf_layer2_out_33_U_data_in_vld <= ap_const_logic_1;
        else 
            pf_layer2_out_33_U_data_in_vld <= ap_const_logic_0;
        end if; 
    end process;


    pf_layer2_out_34_U_data_in_vld_assign_proc : process(ap_enable_reg_pp0_iter5, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter5 = ap_const_logic_1))) then 
            pf_layer2_out_34_U_data_in_vld <= ap_const_logic_1;
        else 
            pf_layer2_out_34_U_data_in_vld <= ap_const_logic_0;
        end if; 
    end process;


    pf_layer2_out_35_U_data_in_vld_assign_proc : process(ap_enable_reg_pp0_iter5, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter5 = ap_const_logic_1))) then 
            pf_layer2_out_35_U_data_in_vld <= ap_const_logic_1;
        else 
            pf_layer2_out_35_U_data_in_vld <= ap_const_logic_0;
        end if; 
    end process;


    pf_layer2_out_36_U_data_in_vld_assign_proc : process(ap_enable_reg_pp0_iter5, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter5 = ap_const_logic_1))) then 
            pf_layer2_out_36_U_data_in_vld <= ap_const_logic_1;
        else 
            pf_layer2_out_36_U_data_in_vld <= ap_const_logic_0;
        end if; 
    end process;


    pf_layer2_out_37_U_data_in_vld_assign_proc : process(ap_enable_reg_pp0_iter5, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter5 = ap_const_logic_1))) then 
            pf_layer2_out_37_U_data_in_vld <= ap_const_logic_1;
        else 
            pf_layer2_out_37_U_data_in_vld <= ap_const_logic_0;
        end if; 
    end process;


    pf_layer2_out_38_U_data_in_vld_assign_proc : process(ap_enable_reg_pp0_iter5, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter5 = ap_const_logic_1))) then 
            pf_layer2_out_38_U_data_in_vld <= ap_const_logic_1;
        else 
            pf_layer2_out_38_U_data_in_vld <= ap_const_logic_0;
        end if; 
    end process;


    pf_layer2_out_39_U_data_in_vld_assign_proc : process(ap_enable_reg_pp0_iter5, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter5 = ap_const_logic_1))) then 
            pf_layer2_out_39_U_data_in_vld <= ap_const_logic_1;
        else 
            pf_layer2_out_39_U_data_in_vld <= ap_const_logic_0;
        end if; 
    end process;


    pf_layer2_out_3_U_data_in_vld_assign_proc : process(ap_enable_reg_pp0_iter5, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter5 = ap_const_logic_1))) then 
            pf_layer2_out_3_U_data_in_vld <= ap_const_logic_1;
        else 
            pf_layer2_out_3_U_data_in_vld <= ap_const_logic_0;
        end if; 
    end process;


    pf_layer2_out_40_U_data_in_vld_assign_proc : process(ap_enable_reg_pp0_iter5, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter5 = ap_const_logic_1))) then 
            pf_layer2_out_40_U_data_in_vld <= ap_const_logic_1;
        else 
            pf_layer2_out_40_U_data_in_vld <= ap_const_logic_0;
        end if; 
    end process;


    pf_layer2_out_41_U_data_in_vld_assign_proc : process(ap_enable_reg_pp0_iter5, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter5 = ap_const_logic_1))) then 
            pf_layer2_out_41_U_data_in_vld <= ap_const_logic_1;
        else 
            pf_layer2_out_41_U_data_in_vld <= ap_const_logic_0;
        end if; 
    end process;


    pf_layer2_out_42_U_data_in_vld_assign_proc : process(ap_enable_reg_pp0_iter5, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter5 = ap_const_logic_1))) then 
            pf_layer2_out_42_U_data_in_vld <= ap_const_logic_1;
        else 
            pf_layer2_out_42_U_data_in_vld <= ap_const_logic_0;
        end if; 
    end process;


    pf_layer2_out_43_U_data_in_vld_assign_proc : process(ap_enable_reg_pp0_iter5, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter5 = ap_const_logic_1))) then 
            pf_layer2_out_43_U_data_in_vld <= ap_const_logic_1;
        else 
            pf_layer2_out_43_U_data_in_vld <= ap_const_logic_0;
        end if; 
    end process;


    pf_layer2_out_44_U_data_in_vld_assign_proc : process(ap_enable_reg_pp0_iter5, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter5 = ap_const_logic_1))) then 
            pf_layer2_out_44_U_data_in_vld <= ap_const_logic_1;
        else 
            pf_layer2_out_44_U_data_in_vld <= ap_const_logic_0;
        end if; 
    end process;


    pf_layer2_out_45_U_data_in_vld_assign_proc : process(ap_enable_reg_pp0_iter5, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter5 = ap_const_logic_1))) then 
            pf_layer2_out_45_U_data_in_vld <= ap_const_logic_1;
        else 
            pf_layer2_out_45_U_data_in_vld <= ap_const_logic_0;
        end if; 
    end process;


    pf_layer2_out_46_U_data_in_vld_assign_proc : process(ap_enable_reg_pp0_iter5, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter5 = ap_const_logic_1))) then 
            pf_layer2_out_46_U_data_in_vld <= ap_const_logic_1;
        else 
            pf_layer2_out_46_U_data_in_vld <= ap_const_logic_0;
        end if; 
    end process;


    pf_layer2_out_47_U_data_in_vld_assign_proc : process(ap_enable_reg_pp0_iter5, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter5 = ap_const_logic_1))) then 
            pf_layer2_out_47_U_data_in_vld <= ap_const_logic_1;
        else 
            pf_layer2_out_47_U_data_in_vld <= ap_const_logic_0;
        end if; 
    end process;


    pf_layer2_out_48_U_data_in_vld_assign_proc : process(ap_enable_reg_pp0_iter5, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter5 = ap_const_logic_1))) then 
            pf_layer2_out_48_U_data_in_vld <= ap_const_logic_1;
        else 
            pf_layer2_out_48_U_data_in_vld <= ap_const_logic_0;
        end if; 
    end process;


    pf_layer2_out_49_U_data_in_vld_assign_proc : process(ap_enable_reg_pp0_iter5, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter5 = ap_const_logic_1))) then 
            pf_layer2_out_49_U_data_in_vld <= ap_const_logic_1;
        else 
            pf_layer2_out_49_U_data_in_vld <= ap_const_logic_0;
        end if; 
    end process;


    pf_layer2_out_4_U_data_in_vld_assign_proc : process(ap_enable_reg_pp0_iter5, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter5 = ap_const_logic_1))) then 
            pf_layer2_out_4_U_data_in_vld <= ap_const_logic_1;
        else 
            pf_layer2_out_4_U_data_in_vld <= ap_const_logic_0;
        end if; 
    end process;


    pf_layer2_out_50_U_data_in_vld_assign_proc : process(ap_enable_reg_pp0_iter5, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter5 = ap_const_logic_1))) then 
            pf_layer2_out_50_U_data_in_vld <= ap_const_logic_1;
        else 
            pf_layer2_out_50_U_data_in_vld <= ap_const_logic_0;
        end if; 
    end process;


    pf_layer2_out_51_U_data_in_vld_assign_proc : process(ap_enable_reg_pp0_iter5, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter5 = ap_const_logic_1))) then 
            pf_layer2_out_51_U_data_in_vld <= ap_const_logic_1;
        else 
            pf_layer2_out_51_U_data_in_vld <= ap_const_logic_0;
        end if; 
    end process;


    pf_layer2_out_52_U_data_in_vld_assign_proc : process(ap_enable_reg_pp0_iter5, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter5 = ap_const_logic_1))) then 
            pf_layer2_out_52_U_data_in_vld <= ap_const_logic_1;
        else 
            pf_layer2_out_52_U_data_in_vld <= ap_const_logic_0;
        end if; 
    end process;


    pf_layer2_out_53_U_data_in_vld_assign_proc : process(ap_enable_reg_pp0_iter5, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter5 = ap_const_logic_1))) then 
            pf_layer2_out_53_U_data_in_vld <= ap_const_logic_1;
        else 
            pf_layer2_out_53_U_data_in_vld <= ap_const_logic_0;
        end if; 
    end process;


    pf_layer2_out_54_U_data_in_vld_assign_proc : process(ap_enable_reg_pp0_iter5, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter5 = ap_const_logic_1))) then 
            pf_layer2_out_54_U_data_in_vld <= ap_const_logic_1;
        else 
            pf_layer2_out_54_U_data_in_vld <= ap_const_logic_0;
        end if; 
    end process;


    pf_layer2_out_55_U_data_in_vld_assign_proc : process(ap_enable_reg_pp0_iter5, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter5 = ap_const_logic_1))) then 
            pf_layer2_out_55_U_data_in_vld <= ap_const_logic_1;
        else 
            pf_layer2_out_55_U_data_in_vld <= ap_const_logic_0;
        end if; 
    end process;


    pf_layer2_out_56_U_data_in_vld_assign_proc : process(ap_enable_reg_pp0_iter5, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter5 = ap_const_logic_1))) then 
            pf_layer2_out_56_U_data_in_vld <= ap_const_logic_1;
        else 
            pf_layer2_out_56_U_data_in_vld <= ap_const_logic_0;
        end if; 
    end process;


    pf_layer2_out_57_U_data_in_vld_assign_proc : process(ap_enable_reg_pp0_iter5, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter5 = ap_const_logic_1))) then 
            pf_layer2_out_57_U_data_in_vld <= ap_const_logic_1;
        else 
            pf_layer2_out_57_U_data_in_vld <= ap_const_logic_0;
        end if; 
    end process;


    pf_layer2_out_58_U_data_in_vld_assign_proc : process(ap_enable_reg_pp0_iter5, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter5 = ap_const_logic_1))) then 
            pf_layer2_out_58_U_data_in_vld <= ap_const_logic_1;
        else 
            pf_layer2_out_58_U_data_in_vld <= ap_const_logic_0;
        end if; 
    end process;


    pf_layer2_out_59_U_data_in_vld_assign_proc : process(ap_enable_reg_pp0_iter5, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter5 = ap_const_logic_1))) then 
            pf_layer2_out_59_U_data_in_vld <= ap_const_logic_1;
        else 
            pf_layer2_out_59_U_data_in_vld <= ap_const_logic_0;
        end if; 
    end process;


    pf_layer2_out_5_U_data_in_vld_assign_proc : process(ap_enable_reg_pp0_iter5, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter5 = ap_const_logic_1))) then 
            pf_layer2_out_5_U_data_in_vld <= ap_const_logic_1;
        else 
            pf_layer2_out_5_U_data_in_vld <= ap_const_logic_0;
        end if; 
    end process;


    pf_layer2_out_60_U_data_in_vld_assign_proc : process(ap_enable_reg_pp0_iter5, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter5 = ap_const_logic_1))) then 
            pf_layer2_out_60_U_data_in_vld <= ap_const_logic_1;
        else 
            pf_layer2_out_60_U_data_in_vld <= ap_const_logic_0;
        end if; 
    end process;


    pf_layer2_out_61_U_data_in_vld_assign_proc : process(ap_enable_reg_pp0_iter5, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter5 = ap_const_logic_1))) then 
            pf_layer2_out_61_U_data_in_vld <= ap_const_logic_1;
        else 
            pf_layer2_out_61_U_data_in_vld <= ap_const_logic_0;
        end if; 
    end process;


    pf_layer2_out_62_U_data_in_vld_assign_proc : process(ap_enable_reg_pp0_iter5, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter5 = ap_const_logic_1))) then 
            pf_layer2_out_62_U_data_in_vld <= ap_const_logic_1;
        else 
            pf_layer2_out_62_U_data_in_vld <= ap_const_logic_0;
        end if; 
    end process;


    pf_layer2_out_63_U_data_in_vld_assign_proc : process(ap_enable_reg_pp0_iter5, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter5 = ap_const_logic_1))) then 
            pf_layer2_out_63_U_data_in_vld <= ap_const_logic_1;
        else 
            pf_layer2_out_63_U_data_in_vld <= ap_const_logic_0;
        end if; 
    end process;


    pf_layer2_out_64_U_data_in_vld_assign_proc : process(ap_enable_reg_pp0_iter5, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter5 = ap_const_logic_1))) then 
            pf_layer2_out_64_U_data_in_vld <= ap_const_logic_1;
        else 
            pf_layer2_out_64_U_data_in_vld <= ap_const_logic_0;
        end if; 
    end process;


    pf_layer2_out_65_U_data_in_vld_assign_proc : process(ap_enable_reg_pp0_iter5, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter5 = ap_const_logic_1))) then 
            pf_layer2_out_65_U_data_in_vld <= ap_const_logic_1;
        else 
            pf_layer2_out_65_U_data_in_vld <= ap_const_logic_0;
        end if; 
    end process;


    pf_layer2_out_66_U_data_in_vld_assign_proc : process(ap_enable_reg_pp0_iter5, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter5 = ap_const_logic_1))) then 
            pf_layer2_out_66_U_data_in_vld <= ap_const_logic_1;
        else 
            pf_layer2_out_66_U_data_in_vld <= ap_const_logic_0;
        end if; 
    end process;


    pf_layer2_out_67_U_data_in_vld_assign_proc : process(ap_enable_reg_pp0_iter5, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter5 = ap_const_logic_1))) then 
            pf_layer2_out_67_U_data_in_vld <= ap_const_logic_1;
        else 
            pf_layer2_out_67_U_data_in_vld <= ap_const_logic_0;
        end if; 
    end process;


    pf_layer2_out_68_U_data_in_vld_assign_proc : process(ap_enable_reg_pp0_iter5, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter5 = ap_const_logic_1))) then 
            pf_layer2_out_68_U_data_in_vld <= ap_const_logic_1;
        else 
            pf_layer2_out_68_U_data_in_vld <= ap_const_logic_0;
        end if; 
    end process;


    pf_layer2_out_69_U_data_in_vld_assign_proc : process(ap_enable_reg_pp0_iter5, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter5 = ap_const_logic_1))) then 
            pf_layer2_out_69_U_data_in_vld <= ap_const_logic_1;
        else 
            pf_layer2_out_69_U_data_in_vld <= ap_const_logic_0;
        end if; 
    end process;


    pf_layer2_out_6_U_data_in_vld_assign_proc : process(ap_enable_reg_pp0_iter5, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter5 = ap_const_logic_1))) then 
            pf_layer2_out_6_U_data_in_vld <= ap_const_logic_1;
        else 
            pf_layer2_out_6_U_data_in_vld <= ap_const_logic_0;
        end if; 
    end process;


    pf_layer2_out_70_U_data_in_vld_assign_proc : process(ap_enable_reg_pp0_iter5, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter5 = ap_const_logic_1))) then 
            pf_layer2_out_70_U_data_in_vld <= ap_const_logic_1;
        else 
            pf_layer2_out_70_U_data_in_vld <= ap_const_logic_0;
        end if; 
    end process;


    pf_layer2_out_71_U_data_in_vld_assign_proc : process(ap_enable_reg_pp0_iter5, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter5 = ap_const_logic_1))) then 
            pf_layer2_out_71_U_data_in_vld <= ap_const_logic_1;
        else 
            pf_layer2_out_71_U_data_in_vld <= ap_const_logic_0;
        end if; 
    end process;


    pf_layer2_out_72_U_data_in_vld_assign_proc : process(ap_enable_reg_pp0_iter5, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter5 = ap_const_logic_1))) then 
            pf_layer2_out_72_U_data_in_vld <= ap_const_logic_1;
        else 
            pf_layer2_out_72_U_data_in_vld <= ap_const_logic_0;
        end if; 
    end process;


    pf_layer2_out_73_U_data_in_vld_assign_proc : process(ap_enable_reg_pp0_iter5, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter5 = ap_const_logic_1))) then 
            pf_layer2_out_73_U_data_in_vld <= ap_const_logic_1;
        else 
            pf_layer2_out_73_U_data_in_vld <= ap_const_logic_0;
        end if; 
    end process;


    pf_layer2_out_74_U_data_in_vld_assign_proc : process(ap_enable_reg_pp0_iter5, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter5 = ap_const_logic_1))) then 
            pf_layer2_out_74_U_data_in_vld <= ap_const_logic_1;
        else 
            pf_layer2_out_74_U_data_in_vld <= ap_const_logic_0;
        end if; 
    end process;


    pf_layer2_out_75_U_data_in_vld_assign_proc : process(ap_enable_reg_pp0_iter5, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter5 = ap_const_logic_1))) then 
            pf_layer2_out_75_U_data_in_vld <= ap_const_logic_1;
        else 
            pf_layer2_out_75_U_data_in_vld <= ap_const_logic_0;
        end if; 
    end process;


    pf_layer2_out_76_U_data_in_vld_assign_proc : process(ap_enable_reg_pp0_iter5, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter5 = ap_const_logic_1))) then 
            pf_layer2_out_76_U_data_in_vld <= ap_const_logic_1;
        else 
            pf_layer2_out_76_U_data_in_vld <= ap_const_logic_0;
        end if; 
    end process;


    pf_layer2_out_77_U_data_in_vld_assign_proc : process(ap_enable_reg_pp0_iter5, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter5 = ap_const_logic_1))) then 
            pf_layer2_out_77_U_data_in_vld <= ap_const_logic_1;
        else 
            pf_layer2_out_77_U_data_in_vld <= ap_const_logic_0;
        end if; 
    end process;


    pf_layer2_out_78_U_data_in_vld_assign_proc : process(ap_enable_reg_pp0_iter5, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter5 = ap_const_logic_1))) then 
            pf_layer2_out_78_U_data_in_vld <= ap_const_logic_1;
        else 
            pf_layer2_out_78_U_data_in_vld <= ap_const_logic_0;
        end if; 
    end process;


    pf_layer2_out_79_U_data_in_vld_assign_proc : process(ap_enable_reg_pp0_iter5, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter5 = ap_const_logic_1))) then 
            pf_layer2_out_79_U_data_in_vld <= ap_const_logic_1;
        else 
            pf_layer2_out_79_U_data_in_vld <= ap_const_logic_0;
        end if; 
    end process;


    pf_layer2_out_7_U_data_in_vld_assign_proc : process(ap_enable_reg_pp0_iter5, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter5 = ap_const_logic_1))) then 
            pf_layer2_out_7_U_data_in_vld <= ap_const_logic_1;
        else 
            pf_layer2_out_7_U_data_in_vld <= ap_const_logic_0;
        end if; 
    end process;


    pf_layer2_out_8_U_data_in_vld_assign_proc : process(ap_enable_reg_pp0_iter5, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter5 = ap_const_logic_1))) then 
            pf_layer2_out_8_U_data_in_vld <= ap_const_logic_1;
        else 
            pf_layer2_out_8_U_data_in_vld <= ap_const_logic_0;
        end if; 
    end process;


    pf_layer2_out_9_U_data_in_vld_assign_proc : process(ap_enable_reg_pp0_iter5, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter5 = ap_const_logic_1))) then 
            pf_layer2_out_9_U_data_in_vld <= ap_const_logic_1;
        else 
            pf_layer2_out_9_U_data_in_vld <= ap_const_logic_0;
        end if; 
    end process;

    pf_sync_continue <= pf_all_done;
end behav;
