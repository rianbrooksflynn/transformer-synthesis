// ==============================================================
// RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL
// Version: 2020.1
// Copyright (C) 1986-2020 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module myproject_layernorm_1d_ap_fixed_16_6_5_3_0_ap_fixed_33_13_5_3_0_config2_s (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        ap_ce,
        p_read,
        p_read1,
        p_read2,
        p_read3,
        p_read4,
        ap_return_0,
        ap_return_1,
        ap_return_2,
        ap_return_3,
        ap_return_4
);

parameter    ap_ST_fsm_pp0_stage0 = 1'd1;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
input   ap_ce;
input  [15:0] p_read;
input  [15:0] p_read1;
input  [15:0] p_read2;
input  [15:0] p_read3;
input  [15:0] p_read4;
output  [32:0] ap_return_0;
output  [32:0] ap_return_1;
output  [32:0] ap_return_2;
output  [32:0] ap_return_3;
output  [32:0] ap_return_4;

reg ap_done;
reg ap_idle;
reg ap_ready;

(* fsm_encoding = "none" *) reg   [0:0] ap_CS_fsm;
wire    ap_CS_fsm_pp0_stage0;
wire    ap_enable_reg_pp0_iter0;
wire    ap_block_pp0_stage0;
reg    ap_enable_reg_pp0_iter1;
reg    ap_enable_reg_pp0_iter2;
reg    ap_enable_reg_pp0_iter3;
reg    ap_enable_reg_pp0_iter4;
reg    ap_enable_reg_pp0_iter5;
reg    ap_idle_pp0;
reg    ap_block_state1_pp0_stage0_iter0;
wire    ap_block_state2_pp0_stage0_iter1;
wire    ap_block_state3_pp0_stage0_iter2;
wire    ap_block_state4_pp0_stage0_iter3;
wire    ap_block_state5_pp0_stage0_iter4;
wire    ap_block_state6_pp0_stage0_iter5;
reg    ap_block_pp0_stage0_11001;
wire   [21:0] shl_ln_fu_87_p3;
reg   [21:0] shl_ln_reg_499;
wire   [21:0] shl_ln728_1_fu_95_p3;
reg   [21:0] shl_ln728_1_reg_504;
wire   [21:0] shl_ln728_2_fu_103_p3;
reg   [21:0] shl_ln728_2_reg_509;
wire   [21:0] shl_ln728_3_fu_111_p3;
reg   [21:0] shl_ln728_3_reg_514;
wire   [21:0] shl_ln728_4_fu_119_p3;
reg   [21:0] shl_ln728_4_reg_519;
reg   [20:0] mean_V_reg_524;
wire  signed [21:0] data_diff_V_0_fu_167_p2;
reg  signed [21:0] data_diff_V_0_reg_529;
reg  signed [21:0] data_diff_V_0_reg_529_pp0_iter2_reg;
reg  signed [21:0] data_diff_V_0_reg_529_pp0_iter3_reg;
reg  signed [21:0] data_diff_V_0_reg_529_pp0_iter4_reg;
wire  signed [21:0] data_diff_V_1_fu_192_p2;
reg  signed [21:0] data_diff_V_1_reg_534;
reg  signed [21:0] data_diff_V_1_reg_534_pp0_iter2_reg;
reg  signed [21:0] data_diff_V_1_reg_534_pp0_iter3_reg;
reg  signed [21:0] data_diff_V_1_reg_534_pp0_iter4_reg;
wire  signed [21:0] data_diff_V_2_fu_217_p2;
reg  signed [21:0] data_diff_V_2_reg_539;
reg  signed [21:0] data_diff_V_2_reg_539_pp0_iter2_reg;
reg  signed [21:0] data_diff_V_2_reg_539_pp0_iter3_reg;
reg  signed [21:0] data_diff_V_2_reg_539_pp0_iter4_reg;
reg   [21:0] trunc_ln708_2_reg_544;
wire  signed [21:0] data_diff_V_3_fu_242_p2;
reg  signed [21:0] data_diff_V_3_reg_549;
reg  signed [21:0] data_diff_V_3_reg_549_pp0_iter2_reg;
reg  signed [21:0] data_diff_V_3_reg_549_pp0_iter3_reg;
reg  signed [21:0] data_diff_V_3_reg_549_pp0_iter4_reg;
wire  signed [21:0] data_diff_V_4_fu_267_p2;
reg  signed [21:0] data_diff_V_4_reg_554;
reg  signed [21:0] data_diff_V_4_reg_554_pp0_iter2_reg;
reg  signed [21:0] data_diff_V_4_reg_554_pp0_iter3_reg;
reg  signed [21:0] data_diff_V_4_reg_554_pp0_iter4_reg;
wire   [21:0] add_ln703_4_fu_292_p2;
reg   [21:0] add_ln703_4_reg_559;
wire   [21:0] add_ln703_5_fu_298_p2;
reg   [21:0] add_ln703_5_reg_564;
reg   [20:0] var_V_reg_569;
reg    ap_block_pp0_stage0_subdone;
wire    grp_lookup_invert_sqr_config2_s_fu_80_ap_start;
wire    grp_lookup_invert_sqr_config2_s_fu_80_ap_done;
wire    grp_lookup_invert_sqr_config2_s_fu_80_ap_idle;
wire    grp_lookup_invert_sqr_config2_s_fu_80_ap_ready;
reg    grp_lookup_invert_sqr_config2_s_fu_80_ap_ce;
wire   [21:0] grp_lookup_invert_sqr_config2_s_fu_80_x;
wire   [18:0] grp_lookup_invert_sqr_config2_s_fu_80_ap_return;
reg    ap_block_state1_pp0_stage0_iter0_ignore_call48;
wire    ap_block_state2_pp0_stage0_iter1_ignore_call48;
wire    ap_block_state3_pp0_stage0_iter2_ignore_call48;
wire    ap_block_state4_pp0_stage0_iter3_ignore_call48;
wire    ap_block_state5_pp0_stage0_iter4_ignore_call48;
wire    ap_block_state6_pp0_stage0_iter5_ignore_call48;
reg    ap_block_pp0_stage0_11001_ignoreCallOp54;
reg    grp_lookup_invert_sqr_config2_s_fu_80_ap_start_reg;
wire   [21:0] add_ln703_1_fu_133_p2;
wire   [21:0] add_ln703_fu_127_p2;
wire   [21:0] add_ln703_2_fu_139_p2;
wire  signed [21:0] add_ln703_3_fu_145_p2;
wire  signed [36:0] r_V_fu_485_p2;
wire  signed [21:0] sext_ln708_5_fu_164_p1;
wire  signed [21:0] mul_ln708_fu_176_p0;
wire  signed [37:0] sext_ln1118_1_fu_172_p1;
wire  signed [21:0] mul_ln708_fu_176_p1;
wire   [37:0] mul_ln708_fu_176_p2;
wire  signed [21:0] mul_ln708_1_fu_201_p0;
wire  signed [37:0] sext_ln1118_2_fu_197_p1;
wire  signed [21:0] mul_ln708_1_fu_201_p1;
wire   [37:0] mul_ln708_1_fu_201_p2;
wire  signed [21:0] mul_ln708_2_fu_226_p0;
wire  signed [37:0] sext_ln1118_3_fu_222_p1;
wire  signed [21:0] mul_ln708_2_fu_226_p1;
wire   [37:0] mul_ln708_2_fu_226_p2;
wire  signed [21:0] mul_ln708_3_fu_251_p0;
wire  signed [37:0] sext_ln1118_4_fu_247_p1;
wire  signed [21:0] mul_ln708_3_fu_251_p1;
wire   [37:0] mul_ln708_3_fu_251_p2;
wire  signed [21:0] mul_ln708_4_fu_276_p0;
wire  signed [37:0] sext_ln1118_5_fu_272_p1;
wire  signed [21:0] mul_ln708_4_fu_276_p1;
wire   [37:0] mul_ln708_4_fu_276_p2;
wire   [21:0] trunc_ln_fu_182_p4;
wire   [21:0] trunc_ln708_1_fu_207_p4;
wire   [21:0] trunc_ln708_4_fu_282_p4;
wire   [21:0] trunc_ln708_3_fu_257_p4;
wire   [21:0] add_ln703_6_fu_304_p2;
wire  signed [21:0] add_ln703_7_fu_308_p2;
wire  signed [36:0] r_V_1_fu_492_p2;
wire  signed [21:0] sext_ln708_6_fu_326_p1;
wire   [18:0] mul_ln1118_fu_343_p0;
wire   [40:0] zext_ln1116_fu_336_p1;
wire   [40:0] mul_ln1118_fu_343_p2;
wire   [30:0] trunc_ln708_7_fu_349_p4;
wire   [18:0] mul_ln1118_1_fu_366_p0;
wire   [40:0] mul_ln1118_1_fu_366_p2;
wire   [30:0] trunc_ln708_8_fu_372_p4;
wire   [18:0] mul_ln1118_2_fu_389_p0;
wire   [40:0] mul_ln1118_2_fu_389_p2;
wire   [30:0] trunc_ln708_9_fu_395_p4;
wire   [18:0] mul_ln1118_3_fu_412_p0;
wire   [40:0] mul_ln1118_3_fu_412_p2;
wire   [30:0] trunc_ln708_s_fu_418_p4;
wire   [18:0] mul_ln1118_4_fu_435_p0;
wire   [40:0] mul_ln1118_4_fu_435_p2;
wire   [30:0] trunc_ln708_5_fu_441_p4;
wire  signed [32:0] sext_ln708_fu_359_p1;
wire  signed [32:0] sext_ln708_1_fu_382_p1;
wire  signed [32:0] sext_ln708_2_fu_405_p1;
wire  signed [32:0] sext_ln708_3_fu_428_p1;
wire  signed [32:0] sext_ln708_4_fu_451_p1;
wire   [14:0] r_V_fu_485_p1;
wire   [14:0] r_V_1_fu_492_p1;
reg   [0:0] ap_NS_fsm;
reg    ap_idle_pp0_0to4;
reg    ap_reset_idle_pp0;
wire    ap_enable_pp0;

// power-on initialization
initial begin
#0 ap_CS_fsm = 1'd1;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter2 = 1'b0;
#0 ap_enable_reg_pp0_iter3 = 1'b0;
#0 ap_enable_reg_pp0_iter4 = 1'b0;
#0 ap_enable_reg_pp0_iter5 = 1'b0;
#0 grp_lookup_invert_sqr_config2_s_fu_80_ap_start_reg = 1'b0;
end

myproject_lookup_invert_sqr_config2_s grp_lookup_invert_sqr_config2_s_fu_80(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_lookup_invert_sqr_config2_s_fu_80_ap_start),
    .ap_done(grp_lookup_invert_sqr_config2_s_fu_80_ap_done),
    .ap_idle(grp_lookup_invert_sqr_config2_s_fu_80_ap_idle),
    .ap_ready(grp_lookup_invert_sqr_config2_s_fu_80_ap_ready),
    .ap_ce(grp_lookup_invert_sqr_config2_s_fu_80_ap_ce),
    .x(grp_lookup_invert_sqr_config2_s_fu_80_x),
    .ap_return(grp_lookup_invert_sqr_config2_s_fu_80_ap_return)
);

myproject_mul_22s_22s_38_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 22 ),
    .din1_WIDTH( 22 ),
    .dout_WIDTH( 38 ))
mul_22s_22s_38_1_1_U3(
    .din0(mul_ln708_fu_176_p0),
    .din1(mul_ln708_fu_176_p1),
    .dout(mul_ln708_fu_176_p2)
);

myproject_mul_22s_22s_38_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 22 ),
    .din1_WIDTH( 22 ),
    .dout_WIDTH( 38 ))
mul_22s_22s_38_1_1_U4(
    .din0(mul_ln708_1_fu_201_p0),
    .din1(mul_ln708_1_fu_201_p1),
    .dout(mul_ln708_1_fu_201_p2)
);

myproject_mul_22s_22s_38_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 22 ),
    .din1_WIDTH( 22 ),
    .dout_WIDTH( 38 ))
mul_22s_22s_38_1_1_U5(
    .din0(mul_ln708_2_fu_226_p0),
    .din1(mul_ln708_2_fu_226_p1),
    .dout(mul_ln708_2_fu_226_p2)
);

myproject_mul_22s_22s_38_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 22 ),
    .din1_WIDTH( 22 ),
    .dout_WIDTH( 38 ))
mul_22s_22s_38_1_1_U6(
    .din0(mul_ln708_3_fu_251_p0),
    .din1(mul_ln708_3_fu_251_p1),
    .dout(mul_ln708_3_fu_251_p2)
);

myproject_mul_22s_22s_38_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 22 ),
    .din1_WIDTH( 22 ),
    .dout_WIDTH( 38 ))
mul_22s_22s_38_1_1_U7(
    .din0(mul_ln708_4_fu_276_p0),
    .din1(mul_ln708_4_fu_276_p1),
    .dout(mul_ln708_4_fu_276_p2)
);

myproject_mul_19ns_22s_41_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 19 ),
    .din1_WIDTH( 22 ),
    .dout_WIDTH( 41 ))
mul_19ns_22s_41_1_1_U8(
    .din0(mul_ln1118_fu_343_p0),
    .din1(data_diff_V_0_reg_529_pp0_iter4_reg),
    .dout(mul_ln1118_fu_343_p2)
);

myproject_mul_19ns_22s_41_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 19 ),
    .din1_WIDTH( 22 ),
    .dout_WIDTH( 41 ))
mul_19ns_22s_41_1_1_U9(
    .din0(mul_ln1118_1_fu_366_p0),
    .din1(data_diff_V_1_reg_534_pp0_iter4_reg),
    .dout(mul_ln1118_1_fu_366_p2)
);

myproject_mul_19ns_22s_41_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 19 ),
    .din1_WIDTH( 22 ),
    .dout_WIDTH( 41 ))
mul_19ns_22s_41_1_1_U10(
    .din0(mul_ln1118_2_fu_389_p0),
    .din1(data_diff_V_2_reg_539_pp0_iter4_reg),
    .dout(mul_ln1118_2_fu_389_p2)
);

myproject_mul_19ns_22s_41_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 19 ),
    .din1_WIDTH( 22 ),
    .dout_WIDTH( 41 ))
mul_19ns_22s_41_1_1_U11(
    .din0(mul_ln1118_3_fu_412_p0),
    .din1(data_diff_V_3_reg_549_pp0_iter4_reg),
    .dout(mul_ln1118_3_fu_412_p2)
);

myproject_mul_19ns_22s_41_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 19 ),
    .din1_WIDTH( 22 ),
    .dout_WIDTH( 41 ))
mul_19ns_22s_41_1_1_U12(
    .din0(mul_ln1118_4_fu_435_p0),
    .din1(data_diff_V_4_reg_554_pp0_iter4_reg),
    .dout(mul_ln1118_4_fu_435_p2)
);

myproject_mul_mul_22s_15ns_37_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 22 ),
    .din1_WIDTH( 15 ),
    .dout_WIDTH( 37 ))
mul_mul_22s_15ns_37_1_1_U13(
    .din0(add_ln703_3_fu_145_p2),
    .din1(r_V_fu_485_p1),
    .dout(r_V_fu_485_p2)
);

myproject_mul_mul_22s_15ns_37_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 22 ),
    .din1_WIDTH( 15 ),
    .dout_WIDTH( 37 ))
mul_mul_22s_15ns_37_1_1_U14(
    .din0(add_ln703_7_fu_308_p2),
    .din1(r_V_1_fu_492_p1),
    .dout(r_V_1_fu_492_p2)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            ap_enable_reg_pp0_iter1 <= ap_start;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter2 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter3 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter4 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter4 <= ap_enable_reg_pp0_iter3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter5 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter5 <= ap_enable_reg_pp0_iter4;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_lookup_invert_sqr_config2_s_fu_80_ap_start_reg <= 1'b0;
    end else begin
        if (((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_ce))) begin
            grp_lookup_invert_sqr_config2_s_fu_80_ap_start_reg <= 1'b1;
        end else if ((grp_lookup_invert_sqr_config2_s_fu_80_ap_ready == 1'b1)) begin
            grp_lookup_invert_sqr_config2_s_fu_80_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_ce) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        add_ln703_4_reg_559 <= add_ln703_4_fu_292_p2;
        add_ln703_5_reg_564 <= add_ln703_5_fu_298_p2;
        data_diff_V_0_reg_529 <= data_diff_V_0_fu_167_p2;
        data_diff_V_1_reg_534 <= data_diff_V_1_fu_192_p2;
        data_diff_V_2_reg_539 <= data_diff_V_2_fu_217_p2;
        data_diff_V_3_reg_549 <= data_diff_V_3_fu_242_p2;
        data_diff_V_4_reg_554 <= data_diff_V_4_fu_267_p2;
        mean_V_reg_524 <= {{r_V_fu_485_p2[36:16]}};
        shl_ln728_1_reg_504[21 : 6] <= shl_ln728_1_fu_95_p3[21 : 6];
        shl_ln728_2_reg_509[21 : 6] <= shl_ln728_2_fu_103_p3[21 : 6];
        shl_ln728_3_reg_514[21 : 6] <= shl_ln728_3_fu_111_p3[21 : 6];
        shl_ln728_4_reg_519[21 : 6] <= shl_ln728_4_fu_119_p3[21 : 6];
        shl_ln_reg_499[21 : 6] <= shl_ln_fu_87_p3[21 : 6];
        trunc_ln708_2_reg_544 <= {{mul_ln708_2_fu_226_p2[37:16]}};
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_ce))) begin
        data_diff_V_0_reg_529_pp0_iter2_reg <= data_diff_V_0_reg_529;
        data_diff_V_0_reg_529_pp0_iter3_reg <= data_diff_V_0_reg_529_pp0_iter2_reg;
        data_diff_V_0_reg_529_pp0_iter4_reg <= data_diff_V_0_reg_529_pp0_iter3_reg;
        data_diff_V_1_reg_534_pp0_iter2_reg <= data_diff_V_1_reg_534;
        data_diff_V_1_reg_534_pp0_iter3_reg <= data_diff_V_1_reg_534_pp0_iter2_reg;
        data_diff_V_1_reg_534_pp0_iter4_reg <= data_diff_V_1_reg_534_pp0_iter3_reg;
        data_diff_V_2_reg_539_pp0_iter2_reg <= data_diff_V_2_reg_539;
        data_diff_V_2_reg_539_pp0_iter3_reg <= data_diff_V_2_reg_539_pp0_iter2_reg;
        data_diff_V_2_reg_539_pp0_iter4_reg <= data_diff_V_2_reg_539_pp0_iter3_reg;
        data_diff_V_3_reg_549_pp0_iter2_reg <= data_diff_V_3_reg_549;
        data_diff_V_3_reg_549_pp0_iter3_reg <= data_diff_V_3_reg_549_pp0_iter2_reg;
        data_diff_V_3_reg_549_pp0_iter4_reg <= data_diff_V_3_reg_549_pp0_iter3_reg;
        data_diff_V_4_reg_554_pp0_iter2_reg <= data_diff_V_4_reg_554;
        data_diff_V_4_reg_554_pp0_iter3_reg <= data_diff_V_4_reg_554_pp0_iter2_reg;
        data_diff_V_4_reg_554_pp0_iter4_reg <= data_diff_V_4_reg_554_pp0_iter3_reg;
        var_V_reg_569 <= {{r_V_1_fu_492_p2[36:16]}};
    end
end

always @ (*) begin
    if ((((ap_start == 1'b0) & (1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_start == 1'b1)) | ((ap_enable_reg_pp0_iter5 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_ce)))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (ap_idle_pp0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter5 == 1'b0) & (ap_enable_reg_pp0_iter4 == 1'b0) & (ap_enable_reg_pp0_iter3 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter4 == 1'b0) & (ap_enable_reg_pp0_iter3 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0_0to4 = 1'b1;
    end else begin
        ap_idle_pp0_0to4 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_ce) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_start == 1'b1))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (ap_idle_pp0_0to4 == 1'b1))) begin
        ap_reset_idle_pp0 = 1'b1;
    end else begin
        ap_reset_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001_ignoreCallOp54) & (1'b1 == ap_ce) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_lookup_invert_sqr_config2_s_fu_80_ap_ce = 1'b1;
    end else begin
        grp_lookup_invert_sqr_config2_s_fu_80_ap_ce = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_pp0_stage0 : begin
            ap_NS_fsm = ap_ST_fsm_pp0_stage0;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign add_ln703_1_fu_133_p2 = (shl_ln728_4_fu_119_p3 + shl_ln728_3_fu_111_p3);

assign add_ln703_2_fu_139_p2 = (shl_ln728_2_fu_103_p3 + add_ln703_1_fu_133_p2);

assign add_ln703_3_fu_145_p2 = (add_ln703_fu_127_p2 + add_ln703_2_fu_139_p2);

assign add_ln703_4_fu_292_p2 = (trunc_ln_fu_182_p4 + trunc_ln708_1_fu_207_p4);

assign add_ln703_5_fu_298_p2 = (trunc_ln708_4_fu_282_p4 + trunc_ln708_3_fu_257_p4);

assign add_ln703_6_fu_304_p2 = (trunc_ln708_2_reg_544 + add_ln703_5_reg_564);

assign add_ln703_7_fu_308_p2 = (add_ln703_4_reg_559 + add_ln703_6_fu_304_p2);

assign add_ln703_fu_127_p2 = (shl_ln_fu_87_p3 + shl_ln728_1_fu_95_p3);

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd0];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage0_11001 = ((ap_start == 1'b0) & (ap_start == 1'b1));
end

always @ (*) begin
    ap_block_pp0_stage0_11001_ignoreCallOp54 = ((ap_start == 1'b0) & (ap_start == 1'b1));
end

always @ (*) begin
    ap_block_pp0_stage0_subdone = ((1'b0 == ap_ce) | ((ap_start == 1'b0) & (ap_start == 1'b1)));
end

always @ (*) begin
    ap_block_state1_pp0_stage0_iter0 = (ap_start == 1'b0);
end

always @ (*) begin
    ap_block_state1_pp0_stage0_iter0_ignore_call48 = (ap_start == 1'b0);
end

assign ap_block_state2_pp0_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state2_pp0_stage0_iter1_ignore_call48 = ~(1'b1 == 1'b1);

assign ap_block_state3_pp0_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state3_pp0_stage0_iter2_ignore_call48 = ~(1'b1 == 1'b1);

assign ap_block_state4_pp0_stage0_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state4_pp0_stage0_iter3_ignore_call48 = ~(1'b1 == 1'b1);

assign ap_block_state5_pp0_stage0_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state5_pp0_stage0_iter4_ignore_call48 = ~(1'b1 == 1'b1);

assign ap_block_state6_pp0_stage0_iter5 = ~(1'b1 == 1'b1);

assign ap_block_state6_pp0_stage0_iter5_ignore_call48 = ~(1'b1 == 1'b1);

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_enable_reg_pp0_iter0 = ap_start;

assign ap_return_0 = sext_ln708_fu_359_p1;

assign ap_return_1 = sext_ln708_1_fu_382_p1;

assign ap_return_2 = sext_ln708_2_fu_405_p1;

assign ap_return_3 = sext_ln708_3_fu_428_p1;

assign ap_return_4 = sext_ln708_4_fu_451_p1;

assign data_diff_V_0_fu_167_p2 = ($signed(shl_ln_reg_499) - $signed(sext_ln708_5_fu_164_p1));

assign data_diff_V_1_fu_192_p2 = ($signed(shl_ln728_1_reg_504) - $signed(sext_ln708_5_fu_164_p1));

assign data_diff_V_2_fu_217_p2 = ($signed(shl_ln728_2_reg_509) - $signed(sext_ln708_5_fu_164_p1));

assign data_diff_V_3_fu_242_p2 = ($signed(shl_ln728_3_reg_514) - $signed(sext_ln708_5_fu_164_p1));

assign data_diff_V_4_fu_267_p2 = ($signed(shl_ln728_4_reg_519) - $signed(sext_ln708_5_fu_164_p1));

assign grp_lookup_invert_sqr_config2_s_fu_80_ap_start = grp_lookup_invert_sqr_config2_s_fu_80_ap_start_reg;

assign grp_lookup_invert_sqr_config2_s_fu_80_x = ($signed(sext_ln708_6_fu_326_p1) + $signed(22'd65));

assign mul_ln1118_1_fu_366_p0 = zext_ln1116_fu_336_p1;

assign mul_ln1118_2_fu_389_p0 = zext_ln1116_fu_336_p1;

assign mul_ln1118_3_fu_412_p0 = zext_ln1116_fu_336_p1;

assign mul_ln1118_4_fu_435_p0 = zext_ln1116_fu_336_p1;

assign mul_ln1118_fu_343_p0 = zext_ln1116_fu_336_p1;

assign mul_ln708_1_fu_201_p0 = sext_ln1118_2_fu_197_p1;

assign mul_ln708_1_fu_201_p1 = sext_ln1118_2_fu_197_p1;

assign mul_ln708_2_fu_226_p0 = sext_ln1118_3_fu_222_p1;

assign mul_ln708_2_fu_226_p1 = sext_ln1118_3_fu_222_p1;

assign mul_ln708_3_fu_251_p0 = sext_ln1118_4_fu_247_p1;

assign mul_ln708_3_fu_251_p1 = sext_ln1118_4_fu_247_p1;

assign mul_ln708_4_fu_276_p0 = sext_ln1118_5_fu_272_p1;

assign mul_ln708_4_fu_276_p1 = sext_ln1118_5_fu_272_p1;

assign mul_ln708_fu_176_p0 = sext_ln1118_1_fu_172_p1;

assign mul_ln708_fu_176_p1 = sext_ln1118_1_fu_172_p1;

assign r_V_1_fu_492_p1 = 37'd13107;

assign r_V_fu_485_p1 = 37'd13107;

assign sext_ln1118_1_fu_172_p1 = data_diff_V_0_fu_167_p2;

assign sext_ln1118_2_fu_197_p1 = data_diff_V_1_fu_192_p2;

assign sext_ln1118_3_fu_222_p1 = data_diff_V_2_fu_217_p2;

assign sext_ln1118_4_fu_247_p1 = data_diff_V_3_fu_242_p2;

assign sext_ln1118_5_fu_272_p1 = data_diff_V_4_fu_267_p2;

assign sext_ln708_1_fu_382_p1 = $signed(trunc_ln708_8_fu_372_p4);

assign sext_ln708_2_fu_405_p1 = $signed(trunc_ln708_9_fu_395_p4);

assign sext_ln708_3_fu_428_p1 = $signed(trunc_ln708_s_fu_418_p4);

assign sext_ln708_4_fu_451_p1 = $signed(trunc_ln708_5_fu_441_p4);

assign sext_ln708_5_fu_164_p1 = $signed(mean_V_reg_524);

assign sext_ln708_6_fu_326_p1 = $signed(var_V_reg_569);

assign sext_ln708_fu_359_p1 = $signed(trunc_ln708_7_fu_349_p4);

assign shl_ln728_1_fu_95_p3 = {{p_read1}, {6'd0}};

assign shl_ln728_2_fu_103_p3 = {{p_read2}, {6'd0}};

assign shl_ln728_3_fu_111_p3 = {{p_read3}, {6'd0}};

assign shl_ln728_4_fu_119_p3 = {{p_read4}, {6'd0}};

assign shl_ln_fu_87_p3 = {{p_read}, {6'd0}};

assign trunc_ln708_1_fu_207_p4 = {{mul_ln708_1_fu_201_p2[37:16]}};

assign trunc_ln708_3_fu_257_p4 = {{mul_ln708_3_fu_251_p2[37:16]}};

assign trunc_ln708_4_fu_282_p4 = {{mul_ln708_4_fu_276_p2[37:16]}};

assign trunc_ln708_5_fu_441_p4 = {{mul_ln1118_4_fu_435_p2[40:10]}};

assign trunc_ln708_7_fu_349_p4 = {{mul_ln1118_fu_343_p2[40:10]}};

assign trunc_ln708_8_fu_372_p4 = {{mul_ln1118_1_fu_366_p2[40:10]}};

assign trunc_ln708_9_fu_395_p4 = {{mul_ln1118_2_fu_389_p2[40:10]}};

assign trunc_ln708_s_fu_418_p4 = {{mul_ln1118_3_fu_412_p2[40:10]}};

assign trunc_ln_fu_182_p4 = {{mul_ln708_fu_176_p2[37:16]}};

assign zext_ln1116_fu_336_p1 = grp_lookup_invert_sqr_config2_s_fu_80_ap_return;

always @ (posedge ap_clk) begin
    shl_ln_reg_499[5:0] <= 6'b000000;
    shl_ln728_1_reg_504[5:0] <= 6'b000000;
    shl_ln728_2_reg_509[5:0] <= 6'b000000;
    shl_ln728_3_reg_514[5:0] <= 6'b000000;
    shl_ln728_4_reg_519[5:0] <= 6'b000000;
end

endmodule //myproject_layernorm_1d_ap_fixed_16_6_5_3_0_ap_fixed_33_13_5_3_0_config2_s
