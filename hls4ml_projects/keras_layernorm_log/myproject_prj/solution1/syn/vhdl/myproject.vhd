-- ==============================================================
-- Generated by Vitis HLS v2023.2
-- Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
-- Copyright 2022-2023 Advanced Micro Devices, Inc. All Rights Reserved.
-- ==============================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity myproject is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    layer_normalization_input_ap_vld : IN STD_LOGIC;
    layer_normalization_input : IN STD_LOGIC_VECTOR (319 downto 0);
    layer2_out_0 : OUT STD_LOGIC_VECTOR (32 downto 0);
    layer2_out_0_ap_vld : OUT STD_LOGIC;
    layer2_out_1 : OUT STD_LOGIC_VECTOR (32 downto 0);
    layer2_out_1_ap_vld : OUT STD_LOGIC;
    layer2_out_2 : OUT STD_LOGIC_VECTOR (32 downto 0);
    layer2_out_2_ap_vld : OUT STD_LOGIC;
    layer2_out_3 : OUT STD_LOGIC_VECTOR (32 downto 0);
    layer2_out_3_ap_vld : OUT STD_LOGIC;
    layer2_out_4 : OUT STD_LOGIC_VECTOR (32 downto 0);
    layer2_out_4_ap_vld : OUT STD_LOGIC;
    layer2_out_5 : OUT STD_LOGIC_VECTOR (32 downto 0);
    layer2_out_5_ap_vld : OUT STD_LOGIC;
    layer2_out_6 : OUT STD_LOGIC_VECTOR (32 downto 0);
    layer2_out_6_ap_vld : OUT STD_LOGIC;
    layer2_out_7 : OUT STD_LOGIC_VECTOR (32 downto 0);
    layer2_out_7_ap_vld : OUT STD_LOGIC;
    layer2_out_8 : OUT STD_LOGIC_VECTOR (32 downto 0);
    layer2_out_8_ap_vld : OUT STD_LOGIC;
    layer2_out_9 : OUT STD_LOGIC_VECTOR (32 downto 0);
    layer2_out_9_ap_vld : OUT STD_LOGIC;
    layer2_out_10 : OUT STD_LOGIC_VECTOR (32 downto 0);
    layer2_out_10_ap_vld : OUT STD_LOGIC;
    layer2_out_11 : OUT STD_LOGIC_VECTOR (32 downto 0);
    layer2_out_11_ap_vld : OUT STD_LOGIC;
    layer2_out_12 : OUT STD_LOGIC_VECTOR (32 downto 0);
    layer2_out_12_ap_vld : OUT STD_LOGIC;
    layer2_out_13 : OUT STD_LOGIC_VECTOR (32 downto 0);
    layer2_out_13_ap_vld : OUT STD_LOGIC;
    layer2_out_14 : OUT STD_LOGIC_VECTOR (32 downto 0);
    layer2_out_14_ap_vld : OUT STD_LOGIC;
    layer2_out_15 : OUT STD_LOGIC_VECTOR (32 downto 0);
    layer2_out_15_ap_vld : OUT STD_LOGIC;
    layer2_out_16 : OUT STD_LOGIC_VECTOR (32 downto 0);
    layer2_out_16_ap_vld : OUT STD_LOGIC;
    layer2_out_17 : OUT STD_LOGIC_VECTOR (32 downto 0);
    layer2_out_17_ap_vld : OUT STD_LOGIC;
    layer2_out_18 : OUT STD_LOGIC_VECTOR (32 downto 0);
    layer2_out_18_ap_vld : OUT STD_LOGIC;
    layer2_out_19 : OUT STD_LOGIC_VECTOR (32 downto 0);
    layer2_out_19_ap_vld : OUT STD_LOGIC );
end;


architecture behav of myproject is 
    attribute CORE_GENERATION_INFO : STRING;
    attribute CORE_GENERATION_INFO of behav : architecture is
    "myproject_myproject,hls_ip_2023_2,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xcvu13p-flga2577-2-e,HLS_INPUT_CLOCK=5.000000,HLS_INPUT_ARCH=pipeline,HLS_SYN_CLOCK=4.125857,HLS_SYN_LAT=4,HLS_SYN_TPT=1,HLS_SYN_MEM=4,HLS_SYN_DSP=0,HLS_SYN_FF=4150,HLS_SYN_LUT=68832,HLS_VERSION=2023_2}";
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_pp0_stage0 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_boolean_0 : BOOLEAN := false;
    constant ap_const_lv320_lc_1 : STD_LOGIC_VECTOR (319 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_const_lv32_10 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010000";
    constant ap_const_lv32_1F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011111";
    constant ap_const_lv32_20 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100000";
    constant ap_const_lv32_2F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000101111";
    constant ap_const_lv32_30 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000110000";
    constant ap_const_lv32_3F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000111111";
    constant ap_const_lv32_40 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001000000";
    constant ap_const_lv32_4F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001001111";
    constant ap_const_lv32_50 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001010000";
    constant ap_const_lv32_5F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001011111";
    constant ap_const_lv32_60 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001100000";
    constant ap_const_lv32_6F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001101111";
    constant ap_const_lv32_70 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001110000";
    constant ap_const_lv32_7F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001111111";
    constant ap_const_lv32_80 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000010000000";
    constant ap_const_lv32_8F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000010001111";
    constant ap_const_lv32_90 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000010010000";
    constant ap_const_lv32_9F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000010011111";
    constant ap_const_lv32_A0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000010100000";
    constant ap_const_lv32_AF : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000010101111";
    constant ap_const_lv32_B0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000010110000";
    constant ap_const_lv32_BF : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000010111111";
    constant ap_const_lv32_C0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000011000000";
    constant ap_const_lv32_CF : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000011001111";
    constant ap_const_lv32_D0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000011010000";
    constant ap_const_lv32_DF : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000011011111";
    constant ap_const_lv32_E0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000011100000";
    constant ap_const_lv32_EF : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000011101111";
    constant ap_const_lv32_F0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000011110000";
    constant ap_const_lv32_FF : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000011111111";
    constant ap_const_lv32_100 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000100000000";
    constant ap_const_lv32_10F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000100001111";
    constant ap_const_lv32_110 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000100010000";
    constant ap_const_lv32_11F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000100011111";
    constant ap_const_lv32_120 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000100100000";
    constant ap_const_lv32_12F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000100101111";
    constant ap_const_lv32_130 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000100110000";
    constant ap_const_lv32_13F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000100111111";

    signal ap_CS_fsm : STD_LOGIC_VECTOR (0 downto 0) := "1";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_pp0_stage0 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage0 : signal is "none";
    signal ap_enable_reg_pp0_iter0 : STD_LOGIC;
    signal ap_enable_reg_pp0_iter1 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter2 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter3 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter4 : STD_LOGIC := '0';
    signal ap_idle_pp0 : STD_LOGIC;
    signal layer_normalization_input_ap_vld_in_sig : STD_LOGIC;
    signal ap_block_state1_pp0_stage0_iter0 : BOOLEAN;
    signal ap_block_pp0_stage0_subdone : BOOLEAN;
    signal layer_normalization_input_preg : STD_LOGIC_VECTOR (319 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    signal layer_normalization_input_in_sig : STD_LOGIC_VECTOR (319 downto 0);
    signal layer_normalization_input_ap_vld_preg : STD_LOGIC := '0';
    signal layer_normalization_input_blk_n : STD_LOGIC;
    signal ap_block_pp0_stage0 : BOOLEAN;
    signal grp_layernorm_1d_ap_fixed_16_6_5_3_0_ap_fixed_33_13_5_3_0_config2_s_fu_292_ap_start : STD_LOGIC;
    signal grp_layernorm_1d_ap_fixed_16_6_5_3_0_ap_fixed_33_13_5_3_0_config2_s_fu_292_ap_done : STD_LOGIC;
    signal grp_layernorm_1d_ap_fixed_16_6_5_3_0_ap_fixed_33_13_5_3_0_config2_s_fu_292_ap_idle : STD_LOGIC;
    signal grp_layernorm_1d_ap_fixed_16_6_5_3_0_ap_fixed_33_13_5_3_0_config2_s_fu_292_ap_ready : STD_LOGIC;
    signal grp_layernorm_1d_ap_fixed_16_6_5_3_0_ap_fixed_33_13_5_3_0_config2_s_fu_292_ap_ce : STD_LOGIC;
    signal grp_layernorm_1d_ap_fixed_16_6_5_3_0_ap_fixed_33_13_5_3_0_config2_s_fu_292_data_0_val : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_layernorm_1d_ap_fixed_16_6_5_3_0_ap_fixed_33_13_5_3_0_config2_s_fu_292_data_1_val : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_layernorm_1d_ap_fixed_16_6_5_3_0_ap_fixed_33_13_5_3_0_config2_s_fu_292_data_2_val : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_layernorm_1d_ap_fixed_16_6_5_3_0_ap_fixed_33_13_5_3_0_config2_s_fu_292_data_3_val : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_layernorm_1d_ap_fixed_16_6_5_3_0_ap_fixed_33_13_5_3_0_config2_s_fu_292_data_4_val : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_layernorm_1d_ap_fixed_16_6_5_3_0_ap_fixed_33_13_5_3_0_config2_s_fu_292_ap_return_0 : STD_LOGIC_VECTOR (32 downto 0);
    signal grp_layernorm_1d_ap_fixed_16_6_5_3_0_ap_fixed_33_13_5_3_0_config2_s_fu_292_ap_return_1 : STD_LOGIC_VECTOR (32 downto 0);
    signal grp_layernorm_1d_ap_fixed_16_6_5_3_0_ap_fixed_33_13_5_3_0_config2_s_fu_292_ap_return_2 : STD_LOGIC_VECTOR (32 downto 0);
    signal grp_layernorm_1d_ap_fixed_16_6_5_3_0_ap_fixed_33_13_5_3_0_config2_s_fu_292_ap_return_3 : STD_LOGIC_VECTOR (32 downto 0);
    signal grp_layernorm_1d_ap_fixed_16_6_5_3_0_ap_fixed_33_13_5_3_0_config2_s_fu_292_ap_return_4 : STD_LOGIC_VECTOR (32 downto 0);
    signal ap_block_state1_pp0_stage0_iter0_ignore_call65 : BOOLEAN;
    signal ap_block_pp0_stage0_11001_ignoreCallOp27 : BOOLEAN;
    signal grp_layernorm_1d_ap_fixed_16_6_5_3_0_ap_fixed_33_13_5_3_0_config2_s_fu_303_ap_start : STD_LOGIC;
    signal grp_layernorm_1d_ap_fixed_16_6_5_3_0_ap_fixed_33_13_5_3_0_config2_s_fu_303_ap_done : STD_LOGIC;
    signal grp_layernorm_1d_ap_fixed_16_6_5_3_0_ap_fixed_33_13_5_3_0_config2_s_fu_303_ap_idle : STD_LOGIC;
    signal grp_layernorm_1d_ap_fixed_16_6_5_3_0_ap_fixed_33_13_5_3_0_config2_s_fu_303_ap_ready : STD_LOGIC;
    signal grp_layernorm_1d_ap_fixed_16_6_5_3_0_ap_fixed_33_13_5_3_0_config2_s_fu_303_ap_ce : STD_LOGIC;
    signal grp_layernorm_1d_ap_fixed_16_6_5_3_0_ap_fixed_33_13_5_3_0_config2_s_fu_303_data_0_val : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_layernorm_1d_ap_fixed_16_6_5_3_0_ap_fixed_33_13_5_3_0_config2_s_fu_303_data_1_val : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_layernorm_1d_ap_fixed_16_6_5_3_0_ap_fixed_33_13_5_3_0_config2_s_fu_303_data_2_val : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_layernorm_1d_ap_fixed_16_6_5_3_0_ap_fixed_33_13_5_3_0_config2_s_fu_303_data_3_val : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_layernorm_1d_ap_fixed_16_6_5_3_0_ap_fixed_33_13_5_3_0_config2_s_fu_303_data_4_val : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_layernorm_1d_ap_fixed_16_6_5_3_0_ap_fixed_33_13_5_3_0_config2_s_fu_303_ap_return_0 : STD_LOGIC_VECTOR (32 downto 0);
    signal grp_layernorm_1d_ap_fixed_16_6_5_3_0_ap_fixed_33_13_5_3_0_config2_s_fu_303_ap_return_1 : STD_LOGIC_VECTOR (32 downto 0);
    signal grp_layernorm_1d_ap_fixed_16_6_5_3_0_ap_fixed_33_13_5_3_0_config2_s_fu_303_ap_return_2 : STD_LOGIC_VECTOR (32 downto 0);
    signal grp_layernorm_1d_ap_fixed_16_6_5_3_0_ap_fixed_33_13_5_3_0_config2_s_fu_303_ap_return_3 : STD_LOGIC_VECTOR (32 downto 0);
    signal grp_layernorm_1d_ap_fixed_16_6_5_3_0_ap_fixed_33_13_5_3_0_config2_s_fu_303_ap_return_4 : STD_LOGIC_VECTOR (32 downto 0);
    signal ap_block_state1_pp0_stage0_iter0_ignore_call71 : BOOLEAN;
    signal ap_block_pp0_stage0_11001_ignoreCallOp28 : BOOLEAN;
    signal grp_layernorm_1d_ap_fixed_16_6_5_3_0_ap_fixed_33_13_5_3_0_config2_s_fu_314_ap_start : STD_LOGIC;
    signal grp_layernorm_1d_ap_fixed_16_6_5_3_0_ap_fixed_33_13_5_3_0_config2_s_fu_314_ap_done : STD_LOGIC;
    signal grp_layernorm_1d_ap_fixed_16_6_5_3_0_ap_fixed_33_13_5_3_0_config2_s_fu_314_ap_idle : STD_LOGIC;
    signal grp_layernorm_1d_ap_fixed_16_6_5_3_0_ap_fixed_33_13_5_3_0_config2_s_fu_314_ap_ready : STD_LOGIC;
    signal grp_layernorm_1d_ap_fixed_16_6_5_3_0_ap_fixed_33_13_5_3_0_config2_s_fu_314_ap_ce : STD_LOGIC;
    signal grp_layernorm_1d_ap_fixed_16_6_5_3_0_ap_fixed_33_13_5_3_0_config2_s_fu_314_data_0_val : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_layernorm_1d_ap_fixed_16_6_5_3_0_ap_fixed_33_13_5_3_0_config2_s_fu_314_data_1_val : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_layernorm_1d_ap_fixed_16_6_5_3_0_ap_fixed_33_13_5_3_0_config2_s_fu_314_data_2_val : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_layernorm_1d_ap_fixed_16_6_5_3_0_ap_fixed_33_13_5_3_0_config2_s_fu_314_data_3_val : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_layernorm_1d_ap_fixed_16_6_5_3_0_ap_fixed_33_13_5_3_0_config2_s_fu_314_data_4_val : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_layernorm_1d_ap_fixed_16_6_5_3_0_ap_fixed_33_13_5_3_0_config2_s_fu_314_ap_return_0 : STD_LOGIC_VECTOR (32 downto 0);
    signal grp_layernorm_1d_ap_fixed_16_6_5_3_0_ap_fixed_33_13_5_3_0_config2_s_fu_314_ap_return_1 : STD_LOGIC_VECTOR (32 downto 0);
    signal grp_layernorm_1d_ap_fixed_16_6_5_3_0_ap_fixed_33_13_5_3_0_config2_s_fu_314_ap_return_2 : STD_LOGIC_VECTOR (32 downto 0);
    signal grp_layernorm_1d_ap_fixed_16_6_5_3_0_ap_fixed_33_13_5_3_0_config2_s_fu_314_ap_return_3 : STD_LOGIC_VECTOR (32 downto 0);
    signal grp_layernorm_1d_ap_fixed_16_6_5_3_0_ap_fixed_33_13_5_3_0_config2_s_fu_314_ap_return_4 : STD_LOGIC_VECTOR (32 downto 0);
    signal ap_block_state1_pp0_stage0_iter0_ignore_call77 : BOOLEAN;
    signal ap_block_pp0_stage0_11001_ignoreCallOp29 : BOOLEAN;
    signal grp_layernorm_1d_ap_fixed_16_6_5_3_0_ap_fixed_33_13_5_3_0_config2_s_fu_325_ap_start : STD_LOGIC;
    signal grp_layernorm_1d_ap_fixed_16_6_5_3_0_ap_fixed_33_13_5_3_0_config2_s_fu_325_ap_done : STD_LOGIC;
    signal grp_layernorm_1d_ap_fixed_16_6_5_3_0_ap_fixed_33_13_5_3_0_config2_s_fu_325_ap_idle : STD_LOGIC;
    signal grp_layernorm_1d_ap_fixed_16_6_5_3_0_ap_fixed_33_13_5_3_0_config2_s_fu_325_ap_ready : STD_LOGIC;
    signal grp_layernorm_1d_ap_fixed_16_6_5_3_0_ap_fixed_33_13_5_3_0_config2_s_fu_325_ap_ce : STD_LOGIC;
    signal grp_layernorm_1d_ap_fixed_16_6_5_3_0_ap_fixed_33_13_5_3_0_config2_s_fu_325_data_0_val : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_layernorm_1d_ap_fixed_16_6_5_3_0_ap_fixed_33_13_5_3_0_config2_s_fu_325_data_1_val : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_layernorm_1d_ap_fixed_16_6_5_3_0_ap_fixed_33_13_5_3_0_config2_s_fu_325_data_2_val : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_layernorm_1d_ap_fixed_16_6_5_3_0_ap_fixed_33_13_5_3_0_config2_s_fu_325_data_3_val : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_layernorm_1d_ap_fixed_16_6_5_3_0_ap_fixed_33_13_5_3_0_config2_s_fu_325_data_4_val : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_layernorm_1d_ap_fixed_16_6_5_3_0_ap_fixed_33_13_5_3_0_config2_s_fu_325_ap_return_0 : STD_LOGIC_VECTOR (32 downto 0);
    signal grp_layernorm_1d_ap_fixed_16_6_5_3_0_ap_fixed_33_13_5_3_0_config2_s_fu_325_ap_return_1 : STD_LOGIC_VECTOR (32 downto 0);
    signal grp_layernorm_1d_ap_fixed_16_6_5_3_0_ap_fixed_33_13_5_3_0_config2_s_fu_325_ap_return_2 : STD_LOGIC_VECTOR (32 downto 0);
    signal grp_layernorm_1d_ap_fixed_16_6_5_3_0_ap_fixed_33_13_5_3_0_config2_s_fu_325_ap_return_3 : STD_LOGIC_VECTOR (32 downto 0);
    signal grp_layernorm_1d_ap_fixed_16_6_5_3_0_ap_fixed_33_13_5_3_0_config2_s_fu_325_ap_return_4 : STD_LOGIC_VECTOR (32 downto 0);
    signal ap_block_state1_pp0_stage0_iter0_ignore_call83 : BOOLEAN;
    signal ap_block_pp0_stage0_11001_ignoreCallOp30 : BOOLEAN;
    signal ap_block_pp0_stage0_11001 : BOOLEAN;
    signal ap_block_pp0_stage0_01001 : BOOLEAN;
    signal ap_NS_fsm : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_idle_pp0_0to3 : STD_LOGIC;
    signal ap_reset_idle_pp0 : STD_LOGIC;
    signal ap_enable_pp0 : STD_LOGIC;
    signal ap_ce_reg : STD_LOGIC;

    component myproject_layernorm_1d_ap_fixed_16_6_5_3_0_ap_fixed_33_13_5_3_0_config2_s IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        ap_ce : IN STD_LOGIC;
        data_0_val : IN STD_LOGIC_VECTOR (15 downto 0);
        data_1_val : IN STD_LOGIC_VECTOR (15 downto 0);
        data_2_val : IN STD_LOGIC_VECTOR (15 downto 0);
        data_3_val : IN STD_LOGIC_VECTOR (15 downto 0);
        data_4_val : IN STD_LOGIC_VECTOR (15 downto 0);
        ap_return_0 : OUT STD_LOGIC_VECTOR (32 downto 0);
        ap_return_1 : OUT STD_LOGIC_VECTOR (32 downto 0);
        ap_return_2 : OUT STD_LOGIC_VECTOR (32 downto 0);
        ap_return_3 : OUT STD_LOGIC_VECTOR (32 downto 0);
        ap_return_4 : OUT STD_LOGIC_VECTOR (32 downto 0) );
    end component;



begin
    grp_layernorm_1d_ap_fixed_16_6_5_3_0_ap_fixed_33_13_5_3_0_config2_s_fu_292 : component myproject_layernorm_1d_ap_fixed_16_6_5_3_0_ap_fixed_33_13_5_3_0_config2_s
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_layernorm_1d_ap_fixed_16_6_5_3_0_ap_fixed_33_13_5_3_0_config2_s_fu_292_ap_start,
        ap_done => grp_layernorm_1d_ap_fixed_16_6_5_3_0_ap_fixed_33_13_5_3_0_config2_s_fu_292_ap_done,
        ap_idle => grp_layernorm_1d_ap_fixed_16_6_5_3_0_ap_fixed_33_13_5_3_0_config2_s_fu_292_ap_idle,
        ap_ready => grp_layernorm_1d_ap_fixed_16_6_5_3_0_ap_fixed_33_13_5_3_0_config2_s_fu_292_ap_ready,
        ap_ce => grp_layernorm_1d_ap_fixed_16_6_5_3_0_ap_fixed_33_13_5_3_0_config2_s_fu_292_ap_ce,
        data_0_val => grp_layernorm_1d_ap_fixed_16_6_5_3_0_ap_fixed_33_13_5_3_0_config2_s_fu_292_data_0_val,
        data_1_val => grp_layernorm_1d_ap_fixed_16_6_5_3_0_ap_fixed_33_13_5_3_0_config2_s_fu_292_data_1_val,
        data_2_val => grp_layernorm_1d_ap_fixed_16_6_5_3_0_ap_fixed_33_13_5_3_0_config2_s_fu_292_data_2_val,
        data_3_val => grp_layernorm_1d_ap_fixed_16_6_5_3_0_ap_fixed_33_13_5_3_0_config2_s_fu_292_data_3_val,
        data_4_val => grp_layernorm_1d_ap_fixed_16_6_5_3_0_ap_fixed_33_13_5_3_0_config2_s_fu_292_data_4_val,
        ap_return_0 => grp_layernorm_1d_ap_fixed_16_6_5_3_0_ap_fixed_33_13_5_3_0_config2_s_fu_292_ap_return_0,
        ap_return_1 => grp_layernorm_1d_ap_fixed_16_6_5_3_0_ap_fixed_33_13_5_3_0_config2_s_fu_292_ap_return_1,
        ap_return_2 => grp_layernorm_1d_ap_fixed_16_6_5_3_0_ap_fixed_33_13_5_3_0_config2_s_fu_292_ap_return_2,
        ap_return_3 => grp_layernorm_1d_ap_fixed_16_6_5_3_0_ap_fixed_33_13_5_3_0_config2_s_fu_292_ap_return_3,
        ap_return_4 => grp_layernorm_1d_ap_fixed_16_6_5_3_0_ap_fixed_33_13_5_3_0_config2_s_fu_292_ap_return_4);

    grp_layernorm_1d_ap_fixed_16_6_5_3_0_ap_fixed_33_13_5_3_0_config2_s_fu_303 : component myproject_layernorm_1d_ap_fixed_16_6_5_3_0_ap_fixed_33_13_5_3_0_config2_s
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_layernorm_1d_ap_fixed_16_6_5_3_0_ap_fixed_33_13_5_3_0_config2_s_fu_303_ap_start,
        ap_done => grp_layernorm_1d_ap_fixed_16_6_5_3_0_ap_fixed_33_13_5_3_0_config2_s_fu_303_ap_done,
        ap_idle => grp_layernorm_1d_ap_fixed_16_6_5_3_0_ap_fixed_33_13_5_3_0_config2_s_fu_303_ap_idle,
        ap_ready => grp_layernorm_1d_ap_fixed_16_6_5_3_0_ap_fixed_33_13_5_3_0_config2_s_fu_303_ap_ready,
        ap_ce => grp_layernorm_1d_ap_fixed_16_6_5_3_0_ap_fixed_33_13_5_3_0_config2_s_fu_303_ap_ce,
        data_0_val => grp_layernorm_1d_ap_fixed_16_6_5_3_0_ap_fixed_33_13_5_3_0_config2_s_fu_303_data_0_val,
        data_1_val => grp_layernorm_1d_ap_fixed_16_6_5_3_0_ap_fixed_33_13_5_3_0_config2_s_fu_303_data_1_val,
        data_2_val => grp_layernorm_1d_ap_fixed_16_6_5_3_0_ap_fixed_33_13_5_3_0_config2_s_fu_303_data_2_val,
        data_3_val => grp_layernorm_1d_ap_fixed_16_6_5_3_0_ap_fixed_33_13_5_3_0_config2_s_fu_303_data_3_val,
        data_4_val => grp_layernorm_1d_ap_fixed_16_6_5_3_0_ap_fixed_33_13_5_3_0_config2_s_fu_303_data_4_val,
        ap_return_0 => grp_layernorm_1d_ap_fixed_16_6_5_3_0_ap_fixed_33_13_5_3_0_config2_s_fu_303_ap_return_0,
        ap_return_1 => grp_layernorm_1d_ap_fixed_16_6_5_3_0_ap_fixed_33_13_5_3_0_config2_s_fu_303_ap_return_1,
        ap_return_2 => grp_layernorm_1d_ap_fixed_16_6_5_3_0_ap_fixed_33_13_5_3_0_config2_s_fu_303_ap_return_2,
        ap_return_3 => grp_layernorm_1d_ap_fixed_16_6_5_3_0_ap_fixed_33_13_5_3_0_config2_s_fu_303_ap_return_3,
        ap_return_4 => grp_layernorm_1d_ap_fixed_16_6_5_3_0_ap_fixed_33_13_5_3_0_config2_s_fu_303_ap_return_4);

    grp_layernorm_1d_ap_fixed_16_6_5_3_0_ap_fixed_33_13_5_3_0_config2_s_fu_314 : component myproject_layernorm_1d_ap_fixed_16_6_5_3_0_ap_fixed_33_13_5_3_0_config2_s
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_layernorm_1d_ap_fixed_16_6_5_3_0_ap_fixed_33_13_5_3_0_config2_s_fu_314_ap_start,
        ap_done => grp_layernorm_1d_ap_fixed_16_6_5_3_0_ap_fixed_33_13_5_3_0_config2_s_fu_314_ap_done,
        ap_idle => grp_layernorm_1d_ap_fixed_16_6_5_3_0_ap_fixed_33_13_5_3_0_config2_s_fu_314_ap_idle,
        ap_ready => grp_layernorm_1d_ap_fixed_16_6_5_3_0_ap_fixed_33_13_5_3_0_config2_s_fu_314_ap_ready,
        ap_ce => grp_layernorm_1d_ap_fixed_16_6_5_3_0_ap_fixed_33_13_5_3_0_config2_s_fu_314_ap_ce,
        data_0_val => grp_layernorm_1d_ap_fixed_16_6_5_3_0_ap_fixed_33_13_5_3_0_config2_s_fu_314_data_0_val,
        data_1_val => grp_layernorm_1d_ap_fixed_16_6_5_3_0_ap_fixed_33_13_5_3_0_config2_s_fu_314_data_1_val,
        data_2_val => grp_layernorm_1d_ap_fixed_16_6_5_3_0_ap_fixed_33_13_5_3_0_config2_s_fu_314_data_2_val,
        data_3_val => grp_layernorm_1d_ap_fixed_16_6_5_3_0_ap_fixed_33_13_5_3_0_config2_s_fu_314_data_3_val,
        data_4_val => grp_layernorm_1d_ap_fixed_16_6_5_3_0_ap_fixed_33_13_5_3_0_config2_s_fu_314_data_4_val,
        ap_return_0 => grp_layernorm_1d_ap_fixed_16_6_5_3_0_ap_fixed_33_13_5_3_0_config2_s_fu_314_ap_return_0,
        ap_return_1 => grp_layernorm_1d_ap_fixed_16_6_5_3_0_ap_fixed_33_13_5_3_0_config2_s_fu_314_ap_return_1,
        ap_return_2 => grp_layernorm_1d_ap_fixed_16_6_5_3_0_ap_fixed_33_13_5_3_0_config2_s_fu_314_ap_return_2,
        ap_return_3 => grp_layernorm_1d_ap_fixed_16_6_5_3_0_ap_fixed_33_13_5_3_0_config2_s_fu_314_ap_return_3,
        ap_return_4 => grp_layernorm_1d_ap_fixed_16_6_5_3_0_ap_fixed_33_13_5_3_0_config2_s_fu_314_ap_return_4);

    grp_layernorm_1d_ap_fixed_16_6_5_3_0_ap_fixed_33_13_5_3_0_config2_s_fu_325 : component myproject_layernorm_1d_ap_fixed_16_6_5_3_0_ap_fixed_33_13_5_3_0_config2_s
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_layernorm_1d_ap_fixed_16_6_5_3_0_ap_fixed_33_13_5_3_0_config2_s_fu_325_ap_start,
        ap_done => grp_layernorm_1d_ap_fixed_16_6_5_3_0_ap_fixed_33_13_5_3_0_config2_s_fu_325_ap_done,
        ap_idle => grp_layernorm_1d_ap_fixed_16_6_5_3_0_ap_fixed_33_13_5_3_0_config2_s_fu_325_ap_idle,
        ap_ready => grp_layernorm_1d_ap_fixed_16_6_5_3_0_ap_fixed_33_13_5_3_0_config2_s_fu_325_ap_ready,
        ap_ce => grp_layernorm_1d_ap_fixed_16_6_5_3_0_ap_fixed_33_13_5_3_0_config2_s_fu_325_ap_ce,
        data_0_val => grp_layernorm_1d_ap_fixed_16_6_5_3_0_ap_fixed_33_13_5_3_0_config2_s_fu_325_data_0_val,
        data_1_val => grp_layernorm_1d_ap_fixed_16_6_5_3_0_ap_fixed_33_13_5_3_0_config2_s_fu_325_data_1_val,
        data_2_val => grp_layernorm_1d_ap_fixed_16_6_5_3_0_ap_fixed_33_13_5_3_0_config2_s_fu_325_data_2_val,
        data_3_val => grp_layernorm_1d_ap_fixed_16_6_5_3_0_ap_fixed_33_13_5_3_0_config2_s_fu_325_data_3_val,
        data_4_val => grp_layernorm_1d_ap_fixed_16_6_5_3_0_ap_fixed_33_13_5_3_0_config2_s_fu_325_data_4_val,
        ap_return_0 => grp_layernorm_1d_ap_fixed_16_6_5_3_0_ap_fixed_33_13_5_3_0_config2_s_fu_325_ap_return_0,
        ap_return_1 => grp_layernorm_1d_ap_fixed_16_6_5_3_0_ap_fixed_33_13_5_3_0_config2_s_fu_325_ap_return_1,
        ap_return_2 => grp_layernorm_1d_ap_fixed_16_6_5_3_0_ap_fixed_33_13_5_3_0_config2_s_fu_325_ap_return_2,
        ap_return_3 => grp_layernorm_1d_ap_fixed_16_6_5_3_0_ap_fixed_33_13_5_3_0_config2_s_fu_325_ap_return_3,
        ap_return_4 => grp_layernorm_1d_ap_fixed_16_6_5_3_0_ap_fixed_33_13_5_3_0_config2_s_fu_325_ap_return_4);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                    ap_enable_reg_pp0_iter1 <= ap_start;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter2_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter2 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter3_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter3 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter4_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter4 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter4 <= ap_enable_reg_pp0_iter3;
                end if; 
            end if;
        end if;
    end process;


    layer_normalization_input_ap_vld_preg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                layer_normalization_input_ap_vld_preg <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                    layer_normalization_input_ap_vld_preg <= ap_const_logic_0;
                elsif ((not(((ap_start = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) and (layer_normalization_input_ap_vld = ap_const_logic_1))) then 
                    layer_normalization_input_ap_vld_preg <= layer_normalization_input_ap_vld;
                end if; 
            end if;
        end if;
    end process;


    layer_normalization_input_preg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                layer_normalization_input_preg <= ap_const_lv320_lc_1;
            else
                if ((not(((ap_start = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) and (layer_normalization_input_ap_vld = ap_const_logic_1))) then 
                    layer_normalization_input_preg <= layer_normalization_input;
                end if; 
            end if;
        end if;
    end process;


    ap_NS_fsm_assign_proc : process (ap_CS_fsm, ap_block_pp0_stage0_subdone, ap_reset_idle_pp0)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_pp0_stage0 => 
                ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
            when others =>  
                ap_NS_fsm <= "X";
        end case;
    end process;
    ap_CS_fsm_pp0_stage0 <= ap_CS_fsm(0);
        ap_block_pp0_stage0 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage0_01001_assign_proc : process(ap_start, ap_block_state1_pp0_stage0_iter0)
    begin
                ap_block_pp0_stage0_01001 <= ((ap_start = ap_const_logic_1) and (ap_const_boolean_1 = ap_block_state1_pp0_stage0_iter0));
    end process;


    ap_block_pp0_stage0_11001_assign_proc : process(ap_start, ap_block_state1_pp0_stage0_iter0)
    begin
                ap_block_pp0_stage0_11001 <= ((ap_start = ap_const_logic_1) and (ap_const_boolean_1 = ap_block_state1_pp0_stage0_iter0));
    end process;


    ap_block_pp0_stage0_11001_ignoreCallOp27_assign_proc : process(ap_start, ap_block_state1_pp0_stage0_iter0_ignore_call65)
    begin
                ap_block_pp0_stage0_11001_ignoreCallOp27 <= ((ap_start = ap_const_logic_1) and (ap_const_boolean_1 = ap_block_state1_pp0_stage0_iter0_ignore_call65));
    end process;


    ap_block_pp0_stage0_11001_ignoreCallOp28_assign_proc : process(ap_start, ap_block_state1_pp0_stage0_iter0_ignore_call71)
    begin
                ap_block_pp0_stage0_11001_ignoreCallOp28 <= ((ap_start = ap_const_logic_1) and (ap_const_boolean_1 = ap_block_state1_pp0_stage0_iter0_ignore_call71));
    end process;


    ap_block_pp0_stage0_11001_ignoreCallOp29_assign_proc : process(ap_start, ap_block_state1_pp0_stage0_iter0_ignore_call77)
    begin
                ap_block_pp0_stage0_11001_ignoreCallOp29 <= ((ap_start = ap_const_logic_1) and (ap_const_boolean_1 = ap_block_state1_pp0_stage0_iter0_ignore_call77));
    end process;


    ap_block_pp0_stage0_11001_ignoreCallOp30_assign_proc : process(ap_start, ap_block_state1_pp0_stage0_iter0_ignore_call83)
    begin
                ap_block_pp0_stage0_11001_ignoreCallOp30 <= ((ap_start = ap_const_logic_1) and (ap_const_boolean_1 = ap_block_state1_pp0_stage0_iter0_ignore_call83));
    end process;


    ap_block_pp0_stage0_subdone_assign_proc : process(ap_start, ap_block_state1_pp0_stage0_iter0)
    begin
                ap_block_pp0_stage0_subdone <= ((ap_start = ap_const_logic_1) and (ap_const_boolean_1 = ap_block_state1_pp0_stage0_iter0));
    end process;


    ap_block_state1_pp0_stage0_iter0_assign_proc : process(layer_normalization_input_ap_vld_in_sig)
    begin
                ap_block_state1_pp0_stage0_iter0 <= (layer_normalization_input_ap_vld_in_sig = ap_const_logic_0);
    end process;


    ap_block_state1_pp0_stage0_iter0_ignore_call65_assign_proc : process(layer_normalization_input_ap_vld_in_sig)
    begin
                ap_block_state1_pp0_stage0_iter0_ignore_call65 <= (layer_normalization_input_ap_vld_in_sig = ap_const_logic_0);
    end process;


    ap_block_state1_pp0_stage0_iter0_ignore_call71_assign_proc : process(layer_normalization_input_ap_vld_in_sig)
    begin
                ap_block_state1_pp0_stage0_iter0_ignore_call71 <= (layer_normalization_input_ap_vld_in_sig = ap_const_logic_0);
    end process;


    ap_block_state1_pp0_stage0_iter0_ignore_call77_assign_proc : process(layer_normalization_input_ap_vld_in_sig)
    begin
                ap_block_state1_pp0_stage0_iter0_ignore_call77 <= (layer_normalization_input_ap_vld_in_sig = ap_const_logic_0);
    end process;


    ap_block_state1_pp0_stage0_iter0_ignore_call83_assign_proc : process(layer_normalization_input_ap_vld_in_sig)
    begin
                ap_block_state1_pp0_stage0_iter0_ignore_call83 <= (layer_normalization_input_ap_vld_in_sig = ap_const_logic_0);
    end process;


    ap_done_assign_proc : process(ap_enable_reg_pp0_iter4, ap_block_pp0_stage0_subdone)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_enable_reg_pp0_iter4 = ap_const_logic_1))) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_const_logic_0;
        end if; 
    end process;

    ap_enable_pp0 <= (ap_idle_pp0 xor ap_const_logic_1);
    ap_enable_reg_pp0_iter0 <= ap_start;

    ap_idle_assign_proc : process(ap_start, ap_CS_fsm_pp0_stage0, ap_idle_pp0)
    begin
        if (((ap_start = ap_const_logic_0) and (ap_idle_pp0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp0_assign_proc : process(ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter2, ap_enable_reg_pp0_iter3, ap_enable_reg_pp0_iter4)
    begin
        if (((ap_enable_reg_pp0_iter4 = ap_const_logic_0) and (ap_enable_reg_pp0_iter3 = ap_const_logic_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_0))) then 
            ap_idle_pp0 <= ap_const_logic_1;
        else 
            ap_idle_pp0 <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp0_0to3_assign_proc : process(ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter2, ap_enable_reg_pp0_iter3)
    begin
        if (((ap_enable_reg_pp0_iter3 = ap_const_logic_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_0))) then 
            ap_idle_pp0_0to3 <= ap_const_logic_1;
        else 
            ap_idle_pp0_0to3 <= ap_const_logic_0;
        end if; 
    end process;


    ap_ready_assign_proc : process(ap_start, ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_subdone)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;


    ap_reset_idle_pp0_assign_proc : process(ap_start, ap_idle_pp0_0to3)
    begin
        if (((ap_start = ap_const_logic_0) and (ap_idle_pp0_0to3 = ap_const_logic_1))) then 
            ap_reset_idle_pp0 <= ap_const_logic_1;
        else 
            ap_reset_idle_pp0 <= ap_const_logic_0;
        end if; 
    end process;


    grp_layernorm_1d_ap_fixed_16_6_5_3_0_ap_fixed_33_13_5_3_0_config2_s_fu_292_ap_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001_ignoreCallOp27)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001_ignoreCallOp27) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            grp_layernorm_1d_ap_fixed_16_6_5_3_0_ap_fixed_33_13_5_3_0_config2_s_fu_292_ap_ce <= ap_const_logic_1;
        else 
            grp_layernorm_1d_ap_fixed_16_6_5_3_0_ap_fixed_33_13_5_3_0_config2_s_fu_292_ap_ce <= ap_const_logic_0;
        end if; 
    end process;


    grp_layernorm_1d_ap_fixed_16_6_5_3_0_ap_fixed_33_13_5_3_0_config2_s_fu_292_ap_start_assign_proc : process(ap_start, ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            grp_layernorm_1d_ap_fixed_16_6_5_3_0_ap_fixed_33_13_5_3_0_config2_s_fu_292_ap_start <= ap_const_logic_1;
        else 
            grp_layernorm_1d_ap_fixed_16_6_5_3_0_ap_fixed_33_13_5_3_0_config2_s_fu_292_ap_start <= ap_const_logic_0;
        end if; 
    end process;

    grp_layernorm_1d_ap_fixed_16_6_5_3_0_ap_fixed_33_13_5_3_0_config2_s_fu_292_data_0_val <= layer_normalization_input_in_sig(16 - 1 downto 0);
    grp_layernorm_1d_ap_fixed_16_6_5_3_0_ap_fixed_33_13_5_3_0_config2_s_fu_292_data_1_val <= layer_normalization_input_in_sig(31 downto 16);
    grp_layernorm_1d_ap_fixed_16_6_5_3_0_ap_fixed_33_13_5_3_0_config2_s_fu_292_data_2_val <= layer_normalization_input_in_sig(47 downto 32);
    grp_layernorm_1d_ap_fixed_16_6_5_3_0_ap_fixed_33_13_5_3_0_config2_s_fu_292_data_3_val <= layer_normalization_input_in_sig(63 downto 48);
    grp_layernorm_1d_ap_fixed_16_6_5_3_0_ap_fixed_33_13_5_3_0_config2_s_fu_292_data_4_val <= layer_normalization_input_in_sig(79 downto 64);

    grp_layernorm_1d_ap_fixed_16_6_5_3_0_ap_fixed_33_13_5_3_0_config2_s_fu_303_ap_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001_ignoreCallOp28)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001_ignoreCallOp28) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            grp_layernorm_1d_ap_fixed_16_6_5_3_0_ap_fixed_33_13_5_3_0_config2_s_fu_303_ap_ce <= ap_const_logic_1;
        else 
            grp_layernorm_1d_ap_fixed_16_6_5_3_0_ap_fixed_33_13_5_3_0_config2_s_fu_303_ap_ce <= ap_const_logic_0;
        end if; 
    end process;


    grp_layernorm_1d_ap_fixed_16_6_5_3_0_ap_fixed_33_13_5_3_0_config2_s_fu_303_ap_start_assign_proc : process(ap_start, ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            grp_layernorm_1d_ap_fixed_16_6_5_3_0_ap_fixed_33_13_5_3_0_config2_s_fu_303_ap_start <= ap_const_logic_1;
        else 
            grp_layernorm_1d_ap_fixed_16_6_5_3_0_ap_fixed_33_13_5_3_0_config2_s_fu_303_ap_start <= ap_const_logic_0;
        end if; 
    end process;

    grp_layernorm_1d_ap_fixed_16_6_5_3_0_ap_fixed_33_13_5_3_0_config2_s_fu_303_data_0_val <= layer_normalization_input_in_sig(95 downto 80);
    grp_layernorm_1d_ap_fixed_16_6_5_3_0_ap_fixed_33_13_5_3_0_config2_s_fu_303_data_1_val <= layer_normalization_input_in_sig(111 downto 96);
    grp_layernorm_1d_ap_fixed_16_6_5_3_0_ap_fixed_33_13_5_3_0_config2_s_fu_303_data_2_val <= layer_normalization_input_in_sig(127 downto 112);
    grp_layernorm_1d_ap_fixed_16_6_5_3_0_ap_fixed_33_13_5_3_0_config2_s_fu_303_data_3_val <= layer_normalization_input_in_sig(143 downto 128);
    grp_layernorm_1d_ap_fixed_16_6_5_3_0_ap_fixed_33_13_5_3_0_config2_s_fu_303_data_4_val <= layer_normalization_input_in_sig(159 downto 144);

    grp_layernorm_1d_ap_fixed_16_6_5_3_0_ap_fixed_33_13_5_3_0_config2_s_fu_314_ap_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001_ignoreCallOp29)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001_ignoreCallOp29) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            grp_layernorm_1d_ap_fixed_16_6_5_3_0_ap_fixed_33_13_5_3_0_config2_s_fu_314_ap_ce <= ap_const_logic_1;
        else 
            grp_layernorm_1d_ap_fixed_16_6_5_3_0_ap_fixed_33_13_5_3_0_config2_s_fu_314_ap_ce <= ap_const_logic_0;
        end if; 
    end process;


    grp_layernorm_1d_ap_fixed_16_6_5_3_0_ap_fixed_33_13_5_3_0_config2_s_fu_314_ap_start_assign_proc : process(ap_start, ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            grp_layernorm_1d_ap_fixed_16_6_5_3_0_ap_fixed_33_13_5_3_0_config2_s_fu_314_ap_start <= ap_const_logic_1;
        else 
            grp_layernorm_1d_ap_fixed_16_6_5_3_0_ap_fixed_33_13_5_3_0_config2_s_fu_314_ap_start <= ap_const_logic_0;
        end if; 
    end process;

    grp_layernorm_1d_ap_fixed_16_6_5_3_0_ap_fixed_33_13_5_3_0_config2_s_fu_314_data_0_val <= layer_normalization_input_in_sig(175 downto 160);
    grp_layernorm_1d_ap_fixed_16_6_5_3_0_ap_fixed_33_13_5_3_0_config2_s_fu_314_data_1_val <= layer_normalization_input_in_sig(191 downto 176);
    grp_layernorm_1d_ap_fixed_16_6_5_3_0_ap_fixed_33_13_5_3_0_config2_s_fu_314_data_2_val <= layer_normalization_input_in_sig(207 downto 192);
    grp_layernorm_1d_ap_fixed_16_6_5_3_0_ap_fixed_33_13_5_3_0_config2_s_fu_314_data_3_val <= layer_normalization_input_in_sig(223 downto 208);
    grp_layernorm_1d_ap_fixed_16_6_5_3_0_ap_fixed_33_13_5_3_0_config2_s_fu_314_data_4_val <= layer_normalization_input_in_sig(239 downto 224);

    grp_layernorm_1d_ap_fixed_16_6_5_3_0_ap_fixed_33_13_5_3_0_config2_s_fu_325_ap_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001_ignoreCallOp30)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001_ignoreCallOp30) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            grp_layernorm_1d_ap_fixed_16_6_5_3_0_ap_fixed_33_13_5_3_0_config2_s_fu_325_ap_ce <= ap_const_logic_1;
        else 
            grp_layernorm_1d_ap_fixed_16_6_5_3_0_ap_fixed_33_13_5_3_0_config2_s_fu_325_ap_ce <= ap_const_logic_0;
        end if; 
    end process;


    grp_layernorm_1d_ap_fixed_16_6_5_3_0_ap_fixed_33_13_5_3_0_config2_s_fu_325_ap_start_assign_proc : process(ap_start, ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            grp_layernorm_1d_ap_fixed_16_6_5_3_0_ap_fixed_33_13_5_3_0_config2_s_fu_325_ap_start <= ap_const_logic_1;
        else 
            grp_layernorm_1d_ap_fixed_16_6_5_3_0_ap_fixed_33_13_5_3_0_config2_s_fu_325_ap_start <= ap_const_logic_0;
        end if; 
    end process;

    grp_layernorm_1d_ap_fixed_16_6_5_3_0_ap_fixed_33_13_5_3_0_config2_s_fu_325_data_0_val <= layer_normalization_input_in_sig(255 downto 240);
    grp_layernorm_1d_ap_fixed_16_6_5_3_0_ap_fixed_33_13_5_3_0_config2_s_fu_325_data_1_val <= layer_normalization_input_in_sig(271 downto 256);
    grp_layernorm_1d_ap_fixed_16_6_5_3_0_ap_fixed_33_13_5_3_0_config2_s_fu_325_data_2_val <= layer_normalization_input_in_sig(287 downto 272);
    grp_layernorm_1d_ap_fixed_16_6_5_3_0_ap_fixed_33_13_5_3_0_config2_s_fu_325_data_3_val <= layer_normalization_input_in_sig(303 downto 288);
    grp_layernorm_1d_ap_fixed_16_6_5_3_0_ap_fixed_33_13_5_3_0_config2_s_fu_325_data_4_val <= layer_normalization_input_in_sig(319 downto 304);
    layer2_out_0 <= grp_layernorm_1d_ap_fixed_16_6_5_3_0_ap_fixed_33_13_5_3_0_config2_s_fu_292_ap_return_0;

    layer2_out_0_ap_vld_assign_proc : process(ap_enable_reg_pp0_iter4, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter4 = ap_const_logic_1))) then 
            layer2_out_0_ap_vld <= ap_const_logic_1;
        else 
            layer2_out_0_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    layer2_out_1 <= grp_layernorm_1d_ap_fixed_16_6_5_3_0_ap_fixed_33_13_5_3_0_config2_s_fu_292_ap_return_1;
    layer2_out_10 <= grp_layernorm_1d_ap_fixed_16_6_5_3_0_ap_fixed_33_13_5_3_0_config2_s_fu_314_ap_return_0;

    layer2_out_10_ap_vld_assign_proc : process(ap_enable_reg_pp0_iter4, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter4 = ap_const_logic_1))) then 
            layer2_out_10_ap_vld <= ap_const_logic_1;
        else 
            layer2_out_10_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    layer2_out_11 <= grp_layernorm_1d_ap_fixed_16_6_5_3_0_ap_fixed_33_13_5_3_0_config2_s_fu_314_ap_return_1;

    layer2_out_11_ap_vld_assign_proc : process(ap_enable_reg_pp0_iter4, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter4 = ap_const_logic_1))) then 
            layer2_out_11_ap_vld <= ap_const_logic_1;
        else 
            layer2_out_11_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    layer2_out_12 <= grp_layernorm_1d_ap_fixed_16_6_5_3_0_ap_fixed_33_13_5_3_0_config2_s_fu_314_ap_return_2;

    layer2_out_12_ap_vld_assign_proc : process(ap_enable_reg_pp0_iter4, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter4 = ap_const_logic_1))) then 
            layer2_out_12_ap_vld <= ap_const_logic_1;
        else 
            layer2_out_12_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    layer2_out_13 <= grp_layernorm_1d_ap_fixed_16_6_5_3_0_ap_fixed_33_13_5_3_0_config2_s_fu_314_ap_return_3;

    layer2_out_13_ap_vld_assign_proc : process(ap_enable_reg_pp0_iter4, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter4 = ap_const_logic_1))) then 
            layer2_out_13_ap_vld <= ap_const_logic_1;
        else 
            layer2_out_13_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    layer2_out_14 <= grp_layernorm_1d_ap_fixed_16_6_5_3_0_ap_fixed_33_13_5_3_0_config2_s_fu_314_ap_return_4;

    layer2_out_14_ap_vld_assign_proc : process(ap_enable_reg_pp0_iter4, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter4 = ap_const_logic_1))) then 
            layer2_out_14_ap_vld <= ap_const_logic_1;
        else 
            layer2_out_14_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    layer2_out_15 <= grp_layernorm_1d_ap_fixed_16_6_5_3_0_ap_fixed_33_13_5_3_0_config2_s_fu_325_ap_return_0;

    layer2_out_15_ap_vld_assign_proc : process(ap_enable_reg_pp0_iter4, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter4 = ap_const_logic_1))) then 
            layer2_out_15_ap_vld <= ap_const_logic_1;
        else 
            layer2_out_15_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    layer2_out_16 <= grp_layernorm_1d_ap_fixed_16_6_5_3_0_ap_fixed_33_13_5_3_0_config2_s_fu_325_ap_return_1;

    layer2_out_16_ap_vld_assign_proc : process(ap_enable_reg_pp0_iter4, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter4 = ap_const_logic_1))) then 
            layer2_out_16_ap_vld <= ap_const_logic_1;
        else 
            layer2_out_16_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    layer2_out_17 <= grp_layernorm_1d_ap_fixed_16_6_5_3_0_ap_fixed_33_13_5_3_0_config2_s_fu_325_ap_return_2;

    layer2_out_17_ap_vld_assign_proc : process(ap_enable_reg_pp0_iter4, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter4 = ap_const_logic_1))) then 
            layer2_out_17_ap_vld <= ap_const_logic_1;
        else 
            layer2_out_17_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    layer2_out_18 <= grp_layernorm_1d_ap_fixed_16_6_5_3_0_ap_fixed_33_13_5_3_0_config2_s_fu_325_ap_return_3;

    layer2_out_18_ap_vld_assign_proc : process(ap_enable_reg_pp0_iter4, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter4 = ap_const_logic_1))) then 
            layer2_out_18_ap_vld <= ap_const_logic_1;
        else 
            layer2_out_18_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    layer2_out_19 <= grp_layernorm_1d_ap_fixed_16_6_5_3_0_ap_fixed_33_13_5_3_0_config2_s_fu_325_ap_return_4;

    layer2_out_19_ap_vld_assign_proc : process(ap_enable_reg_pp0_iter4, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter4 = ap_const_logic_1))) then 
            layer2_out_19_ap_vld <= ap_const_logic_1;
        else 
            layer2_out_19_ap_vld <= ap_const_logic_0;
        end if; 
    end process;


    layer2_out_1_ap_vld_assign_proc : process(ap_enable_reg_pp0_iter4, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter4 = ap_const_logic_1))) then 
            layer2_out_1_ap_vld <= ap_const_logic_1;
        else 
            layer2_out_1_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    layer2_out_2 <= grp_layernorm_1d_ap_fixed_16_6_5_3_0_ap_fixed_33_13_5_3_0_config2_s_fu_292_ap_return_2;

    layer2_out_2_ap_vld_assign_proc : process(ap_enable_reg_pp0_iter4, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter4 = ap_const_logic_1))) then 
            layer2_out_2_ap_vld <= ap_const_logic_1;
        else 
            layer2_out_2_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    layer2_out_3 <= grp_layernorm_1d_ap_fixed_16_6_5_3_0_ap_fixed_33_13_5_3_0_config2_s_fu_292_ap_return_3;

    layer2_out_3_ap_vld_assign_proc : process(ap_enable_reg_pp0_iter4, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter4 = ap_const_logic_1))) then 
            layer2_out_3_ap_vld <= ap_const_logic_1;
        else 
            layer2_out_3_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    layer2_out_4 <= grp_layernorm_1d_ap_fixed_16_6_5_3_0_ap_fixed_33_13_5_3_0_config2_s_fu_292_ap_return_4;

    layer2_out_4_ap_vld_assign_proc : process(ap_enable_reg_pp0_iter4, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter4 = ap_const_logic_1))) then 
            layer2_out_4_ap_vld <= ap_const_logic_1;
        else 
            layer2_out_4_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    layer2_out_5 <= grp_layernorm_1d_ap_fixed_16_6_5_3_0_ap_fixed_33_13_5_3_0_config2_s_fu_303_ap_return_0;

    layer2_out_5_ap_vld_assign_proc : process(ap_enable_reg_pp0_iter4, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter4 = ap_const_logic_1))) then 
            layer2_out_5_ap_vld <= ap_const_logic_1;
        else 
            layer2_out_5_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    layer2_out_6 <= grp_layernorm_1d_ap_fixed_16_6_5_3_0_ap_fixed_33_13_5_3_0_config2_s_fu_303_ap_return_1;

    layer2_out_6_ap_vld_assign_proc : process(ap_enable_reg_pp0_iter4, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter4 = ap_const_logic_1))) then 
            layer2_out_6_ap_vld <= ap_const_logic_1;
        else 
            layer2_out_6_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    layer2_out_7 <= grp_layernorm_1d_ap_fixed_16_6_5_3_0_ap_fixed_33_13_5_3_0_config2_s_fu_303_ap_return_2;

    layer2_out_7_ap_vld_assign_proc : process(ap_enable_reg_pp0_iter4, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter4 = ap_const_logic_1))) then 
            layer2_out_7_ap_vld <= ap_const_logic_1;
        else 
            layer2_out_7_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    layer2_out_8 <= grp_layernorm_1d_ap_fixed_16_6_5_3_0_ap_fixed_33_13_5_3_0_config2_s_fu_303_ap_return_3;

    layer2_out_8_ap_vld_assign_proc : process(ap_enable_reg_pp0_iter4, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter4 = ap_const_logic_1))) then 
            layer2_out_8_ap_vld <= ap_const_logic_1;
        else 
            layer2_out_8_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    layer2_out_9 <= grp_layernorm_1d_ap_fixed_16_6_5_3_0_ap_fixed_33_13_5_3_0_config2_s_fu_303_ap_return_4;

    layer2_out_9_ap_vld_assign_proc : process(ap_enable_reg_pp0_iter4, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter4 = ap_const_logic_1))) then 
            layer2_out_9_ap_vld <= ap_const_logic_1;
        else 
            layer2_out_9_ap_vld <= ap_const_logic_0;
        end if; 
    end process;


    layer_normalization_input_ap_vld_in_sig_assign_proc : process(layer_normalization_input_ap_vld, layer_normalization_input_ap_vld_preg)
    begin
        if ((layer_normalization_input_ap_vld = ap_const_logic_1)) then 
            layer_normalization_input_ap_vld_in_sig <= layer_normalization_input_ap_vld;
        else 
            layer_normalization_input_ap_vld_in_sig <= layer_normalization_input_ap_vld_preg;
        end if; 
    end process;


    layer_normalization_input_blk_n_assign_proc : process(ap_start, ap_CS_fsm_pp0_stage0, layer_normalization_input_ap_vld, ap_block_pp0_stage0)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            layer_normalization_input_blk_n <= layer_normalization_input_ap_vld;
        else 
            layer_normalization_input_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    layer_normalization_input_in_sig_assign_proc : process(layer_normalization_input_ap_vld, layer_normalization_input, layer_normalization_input_preg)
    begin
        if ((layer_normalization_input_ap_vld = ap_const_logic_1)) then 
            layer_normalization_input_in_sig <= layer_normalization_input;
        else 
            layer_normalization_input_in_sig <= layer_normalization_input_preg;
        end if; 
    end process;

end behav;
