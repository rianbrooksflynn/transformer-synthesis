# This script segment is generated automatically by AutoPilot

# Memory (RAM/ROM)  definition:
set ID 1
set hasByteEnable 0
set MemName myproject_lookup_invert_sqr_config2_s_invert_sqr_table_V
set CoreName ap_simcore_mem
set PortList { 1 }
set DataWd 19
set AddrRange 256
set AddrWd 8
set impl_style auto
set TrueReset 0
set IsROM 1
set ROMData { "1111110011111011011" "1111100110010100001" "1111011000111000100" "1111001011101000100" "1110111110100100000" "1110110001101010101" "1110100100111100011" "1110011000011001001" "1110001100000000101" "1101111111110010111" "1101110011101111101" "1101100111110110101" "1101011100001000000" "1101010000100011011" "1101000101001000111" "1100111001111000000" "1100101110110001000" "1100100011110011011" "1100011000111111011" "1100001110010100101" "1100000011110011000" "1011111001011010100" "1011101111001010111" "1011100101000100001" "1011011011000110000" "1011010001010000101" "1011000111100011101" "1010111101111110111" "1010110100100010100" "1010101011001110010" "1010100010000010000" "1010011000111101101" "1010010000000001001" "1010000111001100010" "1001111110011111000" "1001110101111001010" "1001101101011010111" "1001100101000011111" "1001011100110100000" "1001010100101011010" "1001001100101001100" "1001000100101110101" "1000111100111010101" "1000110101001101011" "1000101101100110110" "1000100110000110101" "1000011110101101000" "1000010111011001110" "1000010000001100110" "1000001001000110000" "1000000010000101010" "0111111011001010101" "0111110100010110000" "0111101101100111001" "0111100110111110001" "0111100000011010111" "0111011001111101010" "0111010011100101001" "0111001101010010101" "0111000111000101011" "0111000000111101100" "0110111010111011000" "0110110100111101101" "0110101111000101011" "0110101001010010010" "0110100011100100001" "0110011101111010111" "0110011000010110011" "0110010010110110111" "0110001101011100000" "0110001000000101110" "0110000010110100001" "0101111101100111001" "0101111000011110100" "0101110011011010011" "0101101110011010101" "0101101001011111001" "0101100100100111111" "0101011111110100111" "0101011011000101111" "0101010110011011000" "0101010001110100010" "0101001101010001011" "0101001000110010011" "0101000100010111011" "0101000000000000000" "0100111011101100100" "0100110111011100110" "0100110011010000100" "0100101111001000000" "0100101011000011000" "0100100111000001100" "0100100011000011100" "0100011111001000111" "0100011011010001101" "0100010111011101110" "0100010011101101001" "0100001111111111110" "0100001100010101100" "0100001000101110100" "0100000101001010101" "0100000001101001110" "0011111110001011111" "0011111010110001000" "0011110111011001001" "0011110100000100001" "0011110000110010000" "0011101101100010101" "0011101010010110001" "0011100111001100011" "0011100100000101010" "0011100001000000111" "0011011101111111001" "0011011011000000000" "0011011000000011100" "0011010101001001100" "0011010010010001111" "0011001111011100111" "0011001100101010010" "0011001001111010000" "0011000111001100010" "0011000100100000101" "0011000001110111100" "0010111111010000101" "0010111100101011111" "0010111010001001011" "0010110111101001001" "0010110101001011000" "0010110010101111000" "0010110000010101001" "0010101101111101011" "0010101011100111100" "0010101001010011110" "0010100111000010000" "0010100100110010010" "0010100010100100010" "0010100000011000011" "0010011110001110010" "0010011100000110000" "0010011001111111101" "0010010111111011000" "0010010101111000010" "0010010011110111001" "0010010001110111111" "0010001111111010010" "0010001101111110011" "0010001100000100001" "0010001010001011100" "0010001000010100100" "0010000110011111001" "0010000100101011011" "0010000010111001001" "0010000001001000011" "0001111111011001010" "0001111101101011100" "0001111011111111011" "0001111010010100101" "0001111000101011010" "0001110111000011011" "0001110101011100111" "0001110011110111110" "0001110010010100000" "0001110000110001100" "0001101111010000100" "0001101101110000101" "0001101100010010001" "0001101010110100111" "0001101001011000111" "0001100111111110001" "0001100110100100101" "0001100101001100011" "0001100011110101010" "0001100010011111010" "0001100001001010100" "0001011111110110110" "0001011110100100010" "0001011101010010111" "0001011100000010100" "0001011010110011010" "0001011001100101001" "0001011000011000000" "0001010111001011111" "0001010110000000110" "0001010100110110110" "0001010011101101101" "0001010010100101101" "0001010001011110100" "0001010000011000011" "0001001111010011001" "0001001110001110111" "0001001101001011100" "0001001100001001000" "0001001011000111100" "0001001010000110110" "0001001001000111000" "0001001000001000000" "0001000111001010000" "0001000110001100101" "0001000101010000010" "0001000100010100101" "0001000011011001110" "0001000010011111110" "0001000001100110100" "0001000000101110000" "0000111111110110010" "0000111110111111010" "0000111110001001001" "0000111101010011101" "0000111100011110110" "0000111011101010110" "0000111010110111011" "0000111010000100101" "0000111001010010101" "0000111000100001010" "0000110111110000101" "0000110111000000101" "0000110110010001010" "0000110101100010100" "0000110100110100100" "0000110100000111000" "0000110011011010001" "0000110010101101111" "0000110010000010001" "0000110001010111001" "0000110000101100101" "0000110000000010101" "0000101111011001010" "0000101110110000100" "0000101110001000010" "0000101101100000100" "0000101100111001011" "0000101100010010101" "0000101011101100100" "0000101011000110111" "0000101010100001110" "0000101001111101001" "0000101001011001000" "0000101000110101011" "0000101000010010010" "0000100111101111100" "0000100111001101011" "0000100110101011101" "0000100110001010010" "0000100101101001011" "0000100101001001000" "0000100100101001000" "0000100100001001100" "0000100011101010011" "0000100011001011101" "0000100010101101011" "0000100010001111100" "0000100001110010000" "0000100001010100111" "0000100000111000010" "0000100000011011111" "0000100000000000000" }
set HasInitializer 1
set Initializer $ROMData
set NumOfStage 2
set MaxLatency -1
set DelayBudget 1.158
set ClkPeriod 5
set RegisteredInput 0
if {${::AESL::PGuard_simmodel_gen}} {
if {[info proc ap_gen_simcore_mem] == "ap_gen_simcore_mem"} {
    eval "ap_gen_simcore_mem { \
    id ${ID} \
    name ${MemName} \
    corename ${CoreName}  \
    op mem \
    hasByteEnable ${hasByteEnable} \
    reset_level 1 \
    sync_rst true \
    stage_num ${NumOfStage}  \
    registered_input ${RegisteredInput} \
    port_num 1 \
    port_list \{${PortList}\} \
    data_wd ${DataWd} \
    addr_wd ${AddrWd} \
    addr_range ${AddrRange} \
    style ${impl_style} \
    true_reset ${TrueReset} \
    delay_budget ${DelayBudget} \
    clk_period ${ClkPeriod} \
    HasInitializer ${HasInitializer} \
    rom_data \{${ROMData}\} \
 } "
} else {
    puts "@W \[IMPL-102\] Cannot find ap_gen_simcore_mem, check your platform lib"
}
}


if {${::AESL::PGuard_rtl_comp_handler}} {
  ::AP::rtl_comp_handler $MemName
}


set CoreName ROM
if {${::AESL::PGuard_autocg_gen} && ${::AESL::PGuard_autocg_ipmgen}} {
if {[info proc ::AESL_LIB_VIRTEX::xil_gen_ROM] == "::AESL_LIB_VIRTEX::xil_gen_ROM"} {
    eval "::AESL_LIB_VIRTEX::xil_gen_ROM { \
    id ${ID} \
    name ${MemName} \
    corename ${CoreName}  \
    op mem \
    hasByteEnable ${hasByteEnable} \
    reset_level 1 \
    sync_rst true \
    stage_num ${NumOfStage}  \
    registered_input ${RegisteredInput} \
    port_num 1 \
    port_list \{${PortList}\} \
    data_wd ${DataWd} \
    addr_wd ${AddrWd} \
    addr_range ${AddrRange} \
    style ${impl_style} \
    true_reset ${TrueReset} \
    delay_budget ${DelayBudget} \
    clk_period ${ClkPeriod} \
    HasInitializer ${HasInitializer} \
    rom_data \{${ROMData}\} \
 } "
  } else {
    puts "@W \[IMPL-104\] Cannot find ::AESL_LIB_VIRTEX::xil_gen_ROM, check your platform lib"
  }
}


# clear list
if {${::AESL::PGuard_autoexp_gen}} {
    cg_default_interface_gen_dc_begin
    cg_default_interface_gen_bundle_begin
    AESL_LIB_XILADAPTER::native_axis_begin
}

# Direct connection:
if {${::AESL::PGuard_autoexp_gen}} {
eval "cg_default_interface_gen_dc { \
    id 2 \
    name x \
    type other \
    dir I \
    reset_level 1 \
    sync_rst true \
    corename dc_x \
    op interface \
    ports { x { I 22 vector } } \
} "
}

# Direct connection:
if {${::AESL::PGuard_autoexp_gen}} {
eval "cg_default_interface_gen_dc { \
    id -1 \
    name ap_ctrl \
    type ap_ctrl \
    reset_level 1 \
    sync_rst true \
    corename ap_ctrl \
    op interface \
    ports { ap_start { I 1 bit } ap_ready { O 1 bit } ap_done { O 1 bit } ap_idle { O 1 bit } } \
} "
}

# Direct connection:
if {${::AESL::PGuard_autoexp_gen}} {
eval "cg_default_interface_gen_dc { \
    id -2 \
    name ap_return \
    type ap_return \
    reset_level 1 \
    sync_rst true \
    corename ap_return \
    op interface \
    ports { ap_return { O 19 vector } } \
} "
}


# Adapter definition:
set PortName ap_clk
set DataWd 1 
if {${::AESL::PGuard_autoexp_gen}} {
if {[info proc cg_default_interface_gen_clock] == "cg_default_interface_gen_clock"} {
eval "cg_default_interface_gen_clock { \
    id -3 \
    name ${PortName} \
    reset_level 1 \
    sync_rst true \
    corename apif_ap_clk \
    data_wd ${DataWd} \
    op interface \
}"
} else {
puts "@W \[IMPL-113\] Cannot find bus interface model in the library. Ignored generation of bus interface for '${PortName}'"
}
}


# Adapter definition:
set PortName ap_rst
set DataWd 1 
if {${::AESL::PGuard_autoexp_gen}} {
if {[info proc cg_default_interface_gen_reset] == "cg_default_interface_gen_reset"} {
eval "cg_default_interface_gen_reset { \
    id -4 \
    name ${PortName} \
    reset_level 1 \
    sync_rst true \
    corename apif_ap_rst \
    data_wd ${DataWd} \
    op interface \
}"
} else {
puts "@W \[IMPL-114\] Cannot find bus interface model in the library. Ignored generation of bus interface for '${PortName}'"
}
}


# Adapter definition:
set PortName ap_ce
set DataWd 1 
if {${::AESL::PGuard_autoexp_gen}} {
if {[info proc cg_default_interface_gen_ce] == "cg_default_interface_gen_ce"} {
eval "cg_default_interface_gen_ce { \
    id -5 \
    name ${PortName} \
    reset_level 1 \
    sync_rst true \
    corename apif_ap_ce \
    data_wd ${DataWd} \
    op interface \
}"
} else {
puts "@W \[IMPL-113\] Cannot find bus interface model in the library. Ignored generation of bus interface for '${PortName}'"
}
}



# merge
if {${::AESL::PGuard_autoexp_gen}} {
    cg_default_interface_gen_dc_end
    cg_default_interface_gen_bundle_end
    AESL_LIB_XILADAPTER::native_axis_end
}


