// ==============================================================
// Generated by Vitis HLS v2023.2
// Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
// Copyright 2022-2023 Advanced Micro Devices, Inc. All Rights Reserved.
// ==============================================================

`timescale 1 ns / 1 ps 

module myproject_layernorm_1d_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config2_s (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        ap_ce,
        data_0_val,
        data_1_val,
        data_2_val,
        data_3_val,
        data_4_val,
        data_5_val,
        data_6_val,
        data_7_val,
        data_8_val,
        data_9_val,
        ap_return_0,
        ap_return_1,
        ap_return_2,
        ap_return_3,
        ap_return_4,
        ap_return_5,
        ap_return_6,
        ap_return_7,
        ap_return_8,
        ap_return_9
);

parameter    ap_ST_fsm_pp0_stage0 = 1'd1;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
input   ap_ce;
input  [15:0] data_0_val;
input  [15:0] data_1_val;
input  [15:0] data_2_val;
input  [15:0] data_3_val;
input  [15:0] data_4_val;
input  [15:0] data_5_val;
input  [15:0] data_6_val;
input  [15:0] data_7_val;
input  [15:0] data_8_val;
input  [15:0] data_9_val;
output  [15:0] ap_return_0;
output  [15:0] ap_return_1;
output  [15:0] ap_return_2;
output  [15:0] ap_return_3;
output  [15:0] ap_return_4;
output  [15:0] ap_return_5;
output  [15:0] ap_return_6;
output  [15:0] ap_return_7;
output  [15:0] ap_return_8;
output  [15:0] ap_return_9;

reg ap_done;
reg ap_idle;
reg ap_ready;

(* fsm_encoding = "none" *) reg   [0:0] ap_CS_fsm;
wire    ap_CS_fsm_pp0_stage0;
wire    ap_enable_reg_pp0_iter0;
reg    ap_enable_reg_pp0_iter1;
reg    ap_enable_reg_pp0_iter2;
reg    ap_enable_reg_pp0_iter3;
reg    ap_enable_reg_pp0_iter4;
reg    ap_enable_reg_pp0_iter5;
reg    ap_idle_pp0;
reg    ap_block_pp0_stage0_subdone;
wire   [13:0] invert_sqr_table_address0;
reg    invert_sqr_table_ce0;
wire   [10:0] invert_sqr_table_q0;
wire   [21:0] sum_cache_fu_203_p3;
reg   [21:0] sum_cache_reg_994;
wire    ap_block_pp0_stage0_11001;
wire   [21:0] shl_ln_fu_211_p3;
reg   [21:0] shl_ln_reg_999;
wire   [21:0] shl_ln128_1_fu_219_p3;
reg   [21:0] shl_ln128_1_reg_1004;
wire   [21:0] shl_ln128_2_fu_227_p3;
reg   [21:0] shl_ln128_2_reg_1009;
wire   [21:0] shl_ln128_3_fu_235_p3;
reg   [21:0] shl_ln128_3_reg_1014;
wire   [21:0] shl_ln128_4_fu_243_p3;
reg   [21:0] shl_ln128_4_reg_1019;
wire   [21:0] shl_ln128_5_fu_251_p3;
reg   [21:0] shl_ln128_5_reg_1024;
wire   [21:0] shl_ln128_6_fu_259_p3;
reg   [21:0] shl_ln128_6_reg_1029;
wire   [21:0] shl_ln128_7_fu_267_p3;
reg   [21:0] shl_ln128_7_reg_1034;
wire   [21:0] shl_ln128_8_fu_275_p3;
reg   [21:0] shl_ln128_8_reg_1039;
wire   [21:0] add_ln128_fu_331_p2;
reg  signed [21:0] add_ln128_reg_1044;
wire  signed [21:0] sub_ln134_fu_360_p2;
reg  signed [21:0] sub_ln134_reg_1049;
reg  signed [21:0] sub_ln134_reg_1049_pp0_iter2_reg;
reg  signed [21:0] sub_ln134_reg_1049_pp0_iter3_reg;
reg  signed [21:0] sub_ln134_reg_1049_pp0_iter4_reg;
wire  signed [21:0] sub_ln134_1_fu_365_p2;
reg  signed [21:0] sub_ln134_1_reg_1055;
reg  signed [21:0] sub_ln134_1_reg_1055_pp0_iter2_reg;
reg  signed [21:0] sub_ln134_1_reg_1055_pp0_iter3_reg;
reg  signed [21:0] sub_ln134_1_reg_1055_pp0_iter4_reg;
wire  signed [21:0] sub_ln134_2_fu_370_p2;
reg  signed [21:0] sub_ln134_2_reg_1061;
reg  signed [21:0] sub_ln134_2_reg_1061_pp0_iter2_reg;
reg  signed [21:0] sub_ln134_2_reg_1061_pp0_iter3_reg;
reg  signed [21:0] sub_ln134_2_reg_1061_pp0_iter4_reg;
wire  signed [21:0] sub_ln134_3_fu_375_p2;
reg  signed [21:0] sub_ln134_3_reg_1067;
reg  signed [21:0] sub_ln134_3_reg_1067_pp0_iter2_reg;
reg  signed [21:0] sub_ln134_3_reg_1067_pp0_iter3_reg;
reg  signed [21:0] sub_ln134_3_reg_1067_pp0_iter4_reg;
wire  signed [21:0] sub_ln134_4_fu_380_p2;
reg  signed [21:0] sub_ln134_4_reg_1073;
reg  signed [21:0] sub_ln134_4_reg_1073_pp0_iter2_reg;
reg  signed [21:0] sub_ln134_4_reg_1073_pp0_iter3_reg;
reg  signed [21:0] sub_ln134_4_reg_1073_pp0_iter4_reg;
wire  signed [21:0] sub_ln134_5_fu_385_p2;
reg  signed [21:0] sub_ln134_5_reg_1079;
reg  signed [21:0] sub_ln134_5_reg_1079_pp0_iter2_reg;
reg  signed [21:0] sub_ln134_5_reg_1079_pp0_iter3_reg;
reg  signed [21:0] sub_ln134_5_reg_1079_pp0_iter4_reg;
wire  signed [21:0] sub_ln134_6_fu_390_p2;
reg  signed [21:0] sub_ln134_6_reg_1085;
reg  signed [21:0] sub_ln134_6_reg_1085_pp0_iter2_reg;
reg  signed [21:0] sub_ln134_6_reg_1085_pp0_iter3_reg;
reg  signed [21:0] sub_ln134_6_reg_1085_pp0_iter4_reg;
wire  signed [21:0] sub_ln134_7_fu_395_p2;
reg  signed [21:0] sub_ln134_7_reg_1091;
reg  signed [21:0] sub_ln134_7_reg_1091_pp0_iter2_reg;
reg  signed [21:0] sub_ln134_7_reg_1091_pp0_iter3_reg;
reg  signed [21:0] sub_ln134_7_reg_1091_pp0_iter4_reg;
wire  signed [21:0] sub_ln134_8_fu_400_p2;
reg  signed [21:0] sub_ln134_8_reg_1097;
reg  signed [21:0] sub_ln134_8_reg_1097_pp0_iter2_reg;
reg  signed [21:0] sub_ln134_8_reg_1097_pp0_iter3_reg;
reg  signed [21:0] sub_ln134_8_reg_1097_pp0_iter4_reg;
wire  signed [21:0] sub_ln134_9_fu_405_p2;
reg  signed [21:0] sub_ln134_9_reg_1103;
reg  signed [21:0] sub_ln134_9_reg_1103_pp0_iter2_reg;
reg  signed [21:0] sub_ln134_9_reg_1103_pp0_iter3_reg;
reg  signed [21:0] sub_ln134_9_reg_1103_pp0_iter4_reg;
wire   [21:0] add_ln136_1_fu_560_p2;
reg   [21:0] add_ln136_1_reg_1109;
wire   [21:0] add_ln136_3_fu_572_p2;
reg   [21:0] add_ln136_3_reg_1114;
wire   [21:0] add_ln136_8_fu_596_p2;
reg   [21:0] add_ln136_8_reg_1119;
wire  signed [18:0] index_fu_681_p3;
reg  signed [18:0] index_reg_1124;
wire   [63:0] zext_ln144_fu_735_p1;
wire    ap_block_pp0_stage0;
wire  signed [21:0] mul_ln135_fu_163_p0;
wire  signed [37:0] sext_ln135_fu_410_p1;
wire  signed [21:0] mul_ln135_fu_163_p1;
wire  signed [21:0] mul_ln135_1_fu_167_p0;
wire  signed [37:0] sext_ln135_1_fu_425_p1;
wire  signed [21:0] mul_ln135_1_fu_167_p1;
wire  signed [21:0] mul_ln135_2_fu_171_p0;
wire  signed [37:0] sext_ln135_2_fu_440_p1;
wire  signed [21:0] mul_ln135_2_fu_171_p1;
wire  signed [21:0] mul_ln135_3_fu_175_p0;
wire  signed [37:0] sext_ln135_3_fu_455_p1;
wire  signed [21:0] mul_ln135_3_fu_175_p1;
wire  signed [21:0] mul_ln135_4_fu_179_p0;
wire  signed [37:0] sext_ln135_4_fu_470_p1;
wire  signed [21:0] mul_ln135_4_fu_179_p1;
wire  signed [21:0] mul_ln135_5_fu_183_p0;
wire  signed [37:0] sext_ln135_5_fu_485_p1;
wire  signed [21:0] mul_ln135_5_fu_183_p1;
wire  signed [21:0] mul_ln135_6_fu_187_p0;
wire  signed [37:0] sext_ln135_6_fu_500_p1;
wire  signed [21:0] mul_ln135_6_fu_187_p1;
wire  signed [21:0] mul_ln135_7_fu_191_p0;
wire  signed [37:0] sext_ln135_7_fu_515_p1;
wire  signed [21:0] mul_ln135_7_fu_191_p1;
wire  signed [21:0] mul_ln135_8_fu_195_p0;
wire  signed [37:0] sext_ln135_8_fu_530_p1;
wire  signed [21:0] mul_ln135_8_fu_195_p1;
wire  signed [21:0] mul_ln135_9_fu_199_p0;
wire  signed [37:0] sext_ln135_9_fu_545_p1;
wire  signed [21:0] mul_ln135_9_fu_199_p1;
wire   [21:0] add_ln128_2_fu_289_p2;
wire   [21:0] add_ln128_3_fu_295_p2;
wire   [21:0] add_ln128_1_fu_283_p2;
wire   [21:0] add_ln128_6_fu_313_p2;
wire   [21:0] add_ln128_7_fu_319_p2;
wire   [21:0] add_ln128_5_fu_307_p2;
wire   [21:0] add_ln128_8_fu_325_p2;
wire   [21:0] add_ln128_4_fu_301_p2;
wire   [13:0] mul_ln73_fu_340_p1;
wire   [35:0] mul_ln73_fu_340_p2;
wire   [19:0] mean_fu_346_p4;
wire  signed [21:0] sext_ln130_fu_356_p1;
wire   [37:0] mul_ln135_fu_163_p2;
wire   [37:0] mul_ln135_1_fu_167_p2;
wire   [37:0] mul_ln135_2_fu_171_p2;
wire   [37:0] mul_ln135_3_fu_175_p2;
wire   [37:0] mul_ln135_4_fu_179_p2;
wire   [37:0] mul_ln135_5_fu_183_p2;
wire   [37:0] mul_ln135_6_fu_187_p2;
wire   [37:0] mul_ln135_7_fu_191_p2;
wire   [37:0] mul_ln135_8_fu_195_p2;
wire   [37:0] mul_ln135_9_fu_199_p2;
wire   [21:0] diff_10_fu_415_p4;
wire   [21:0] diff_fu_430_p4;
wire   [21:0] diff_3_fu_460_p4;
wire   [21:0] diff_4_fu_475_p4;
wire   [21:0] add_ln136_2_fu_566_p2;
wire   [21:0] diff_2_fu_445_p4;
wire   [21:0] diff_5_fu_490_p4;
wire   [21:0] diff_6_fu_505_p4;
wire   [21:0] diff_8_fu_535_p4;
wire   [21:0] diff_9_fu_550_p4;
wire   [21:0] add_ln136_6_fu_584_p2;
wire   [21:0] diff_7_fu_520_p4;
wire   [21:0] add_ln136_7_fu_590_p2;
wire   [21:0] add_ln136_5_fu_578_p2;
wire   [21:0] add_ln136_4_fu_602_p2;
wire  signed [21:0] add_ln136_fu_606_p2;
wire   [13:0] mul_ln73_1_fu_615_p1;
wire   [35:0] mul_ln73_1_fu_615_p2;
wire   [17:0] tmp_1_fu_621_p4;
wire   [1:0] tmp_fu_643_p4;
wire   [15:0] tmp_s_fu_653_p3;
wire  signed [18:0] sext_ln140_fu_631_p1;
wire   [0:0] icmp_ln140_fu_661_p2;
wire   [18:0] add_ln140_fu_667_p2;
wire   [0:0] tmp_2_fu_635_p3;
wire   [18:0] select_ln140_fu_673_p3;
wire  signed [20:0] sext_ln140_1_fu_689_p1;
wire   [0:0] tmp_3_fu_692_p3;
wire   [18:0] index_1_fu_700_p3;
wire   [4:0] tmp_4_fu_711_p4;
wire   [0:0] icmp_ln143_fu_721_p2;
wire   [13:0] trunc_ln140_fu_707_p1;
wire   [13:0] index_2_fu_727_p3;
wire  signed [10:0] mul_ln149_fu_747_p1;
wire  signed [25:0] sext_ln149_1_fu_743_p1;
wire   [25:0] mul_ln149_fu_747_p2;
wire  signed [10:0] mul_ln149_1_fu_766_p1;
wire   [25:0] mul_ln149_1_fu_766_p2;
wire  signed [10:0] mul_ln149_2_fu_785_p1;
wire   [25:0] mul_ln149_2_fu_785_p2;
wire  signed [10:0] mul_ln149_3_fu_804_p1;
wire   [25:0] mul_ln149_3_fu_804_p2;
wire  signed [10:0] mul_ln149_4_fu_823_p1;
wire   [25:0] mul_ln149_4_fu_823_p2;
wire  signed [10:0] mul_ln149_5_fu_842_p1;
wire   [25:0] mul_ln149_5_fu_842_p2;
wire  signed [10:0] mul_ln149_6_fu_861_p1;
wire   [25:0] mul_ln149_6_fu_861_p2;
wire  signed [10:0] mul_ln149_7_fu_880_p1;
wire   [25:0] mul_ln149_7_fu_880_p2;
wire  signed [10:0] mul_ln149_8_fu_899_p1;
wire   [25:0] mul_ln149_8_fu_899_p2;
wire  signed [10:0] mul_ln149_9_fu_918_p1;
wire   [25:0] mul_ln149_9_fu_918_p2;
reg   [0:0] ap_NS_fsm;
reg    ap_idle_pp0_0to4;
reg    ap_reset_idle_pp0;
wire    ap_enable_pp0;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 1'd1;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter2 = 1'b0;
#0 ap_enable_reg_pp0_iter3 = 1'b0;
#0 ap_enable_reg_pp0_iter4 = 1'b0;
#0 ap_enable_reg_pp0_iter5 = 1'b0;
end

myproject_layernorm_1d_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config2_s_invert_sqr_tabbkb #(
    .DataWidth( 11 ),
    .AddressRange( 16384 ),
    .AddressWidth( 14 ))
invert_sqr_table_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(invert_sqr_table_address0),
    .ce0(invert_sqr_table_ce0),
    .q0(invert_sqr_table_q0)
);

myproject_mul_22s_22s_38_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 22 ),
    .din1_WIDTH( 22 ),
    .dout_WIDTH( 38 ))
mul_22s_22s_38_1_1_U202(
    .din0(mul_ln135_fu_163_p0),
    .din1(mul_ln135_fu_163_p1),
    .dout(mul_ln135_fu_163_p2)
);

myproject_mul_22s_22s_38_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 22 ),
    .din1_WIDTH( 22 ),
    .dout_WIDTH( 38 ))
mul_22s_22s_38_1_1_U203(
    .din0(mul_ln135_1_fu_167_p0),
    .din1(mul_ln135_1_fu_167_p1),
    .dout(mul_ln135_1_fu_167_p2)
);

myproject_mul_22s_22s_38_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 22 ),
    .din1_WIDTH( 22 ),
    .dout_WIDTH( 38 ))
mul_22s_22s_38_1_1_U204(
    .din0(mul_ln135_2_fu_171_p0),
    .din1(mul_ln135_2_fu_171_p1),
    .dout(mul_ln135_2_fu_171_p2)
);

myproject_mul_22s_22s_38_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 22 ),
    .din1_WIDTH( 22 ),
    .dout_WIDTH( 38 ))
mul_22s_22s_38_1_1_U205(
    .din0(mul_ln135_3_fu_175_p0),
    .din1(mul_ln135_3_fu_175_p1),
    .dout(mul_ln135_3_fu_175_p2)
);

myproject_mul_22s_22s_38_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 22 ),
    .din1_WIDTH( 22 ),
    .dout_WIDTH( 38 ))
mul_22s_22s_38_1_1_U206(
    .din0(mul_ln135_4_fu_179_p0),
    .din1(mul_ln135_4_fu_179_p1),
    .dout(mul_ln135_4_fu_179_p2)
);

myproject_mul_22s_22s_38_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 22 ),
    .din1_WIDTH( 22 ),
    .dout_WIDTH( 38 ))
mul_22s_22s_38_1_1_U207(
    .din0(mul_ln135_5_fu_183_p0),
    .din1(mul_ln135_5_fu_183_p1),
    .dout(mul_ln135_5_fu_183_p2)
);

myproject_mul_22s_22s_38_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 22 ),
    .din1_WIDTH( 22 ),
    .dout_WIDTH( 38 ))
mul_22s_22s_38_1_1_U208(
    .din0(mul_ln135_6_fu_187_p0),
    .din1(mul_ln135_6_fu_187_p1),
    .dout(mul_ln135_6_fu_187_p2)
);

myproject_mul_22s_22s_38_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 22 ),
    .din1_WIDTH( 22 ),
    .dout_WIDTH( 38 ))
mul_22s_22s_38_1_1_U209(
    .din0(mul_ln135_7_fu_191_p0),
    .din1(mul_ln135_7_fu_191_p1),
    .dout(mul_ln135_7_fu_191_p2)
);

myproject_mul_22s_22s_38_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 22 ),
    .din1_WIDTH( 22 ),
    .dout_WIDTH( 38 ))
mul_22s_22s_38_1_1_U210(
    .din0(mul_ln135_8_fu_195_p0),
    .din1(mul_ln135_8_fu_195_p1),
    .dout(mul_ln135_8_fu_195_p2)
);

myproject_mul_22s_22s_38_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 22 ),
    .din1_WIDTH( 22 ),
    .dout_WIDTH( 38 ))
mul_22s_22s_38_1_1_U211(
    .din0(mul_ln135_9_fu_199_p0),
    .din1(mul_ln135_9_fu_199_p1),
    .dout(mul_ln135_9_fu_199_p2)
);

myproject_mul_22s_14ns_36_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 22 ),
    .din1_WIDTH( 14 ),
    .dout_WIDTH( 36 ))
mul_22s_14ns_36_1_1_U212(
    .din0(add_ln128_reg_1044),
    .din1(mul_ln73_fu_340_p1),
    .dout(mul_ln73_fu_340_p2)
);

myproject_mul_22s_14ns_36_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 22 ),
    .din1_WIDTH( 14 ),
    .dout_WIDTH( 36 ))
mul_22s_14ns_36_1_1_U213(
    .din0(add_ln136_fu_606_p2),
    .din1(mul_ln73_1_fu_615_p1),
    .dout(mul_ln73_1_fu_615_p2)
);

myproject_mul_22s_11s_26_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 22 ),
    .din1_WIDTH( 11 ),
    .dout_WIDTH( 26 ))
mul_22s_11s_26_1_1_U214(
    .din0(sub_ln134_reg_1049_pp0_iter4_reg),
    .din1(mul_ln149_fu_747_p1),
    .dout(mul_ln149_fu_747_p2)
);

myproject_mul_22s_11s_26_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 22 ),
    .din1_WIDTH( 11 ),
    .dout_WIDTH( 26 ))
mul_22s_11s_26_1_1_U215(
    .din0(sub_ln134_1_reg_1055_pp0_iter4_reg),
    .din1(mul_ln149_1_fu_766_p1),
    .dout(mul_ln149_1_fu_766_p2)
);

myproject_mul_22s_11s_26_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 22 ),
    .din1_WIDTH( 11 ),
    .dout_WIDTH( 26 ))
mul_22s_11s_26_1_1_U216(
    .din0(sub_ln134_2_reg_1061_pp0_iter4_reg),
    .din1(mul_ln149_2_fu_785_p1),
    .dout(mul_ln149_2_fu_785_p2)
);

myproject_mul_22s_11s_26_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 22 ),
    .din1_WIDTH( 11 ),
    .dout_WIDTH( 26 ))
mul_22s_11s_26_1_1_U217(
    .din0(sub_ln134_3_reg_1067_pp0_iter4_reg),
    .din1(mul_ln149_3_fu_804_p1),
    .dout(mul_ln149_3_fu_804_p2)
);

myproject_mul_22s_11s_26_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 22 ),
    .din1_WIDTH( 11 ),
    .dout_WIDTH( 26 ))
mul_22s_11s_26_1_1_U218(
    .din0(sub_ln134_4_reg_1073_pp0_iter4_reg),
    .din1(mul_ln149_4_fu_823_p1),
    .dout(mul_ln149_4_fu_823_p2)
);

myproject_mul_22s_11s_26_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 22 ),
    .din1_WIDTH( 11 ),
    .dout_WIDTH( 26 ))
mul_22s_11s_26_1_1_U219(
    .din0(sub_ln134_5_reg_1079_pp0_iter4_reg),
    .din1(mul_ln149_5_fu_842_p1),
    .dout(mul_ln149_5_fu_842_p2)
);

myproject_mul_22s_11s_26_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 22 ),
    .din1_WIDTH( 11 ),
    .dout_WIDTH( 26 ))
mul_22s_11s_26_1_1_U220(
    .din0(sub_ln134_6_reg_1085_pp0_iter4_reg),
    .din1(mul_ln149_6_fu_861_p1),
    .dout(mul_ln149_6_fu_861_p2)
);

myproject_mul_22s_11s_26_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 22 ),
    .din1_WIDTH( 11 ),
    .dout_WIDTH( 26 ))
mul_22s_11s_26_1_1_U221(
    .din0(sub_ln134_7_reg_1091_pp0_iter4_reg),
    .din1(mul_ln149_7_fu_880_p1),
    .dout(mul_ln149_7_fu_880_p2)
);

myproject_mul_22s_11s_26_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 22 ),
    .din1_WIDTH( 11 ),
    .dout_WIDTH( 26 ))
mul_22s_11s_26_1_1_U222(
    .din0(sub_ln134_8_reg_1097_pp0_iter4_reg),
    .din1(mul_ln149_8_fu_899_p1),
    .dout(mul_ln149_8_fu_899_p2)
);

myproject_mul_22s_11s_26_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 22 ),
    .din1_WIDTH( 11 ),
    .dout_WIDTH( 26 ))
mul_22s_11s_26_1_1_U223(
    .din0(sub_ln134_9_reg_1103_pp0_iter4_reg),
    .din1(mul_ln149_9_fu_918_p1),
    .dout(mul_ln149_9_fu_918_p2)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            ap_enable_reg_pp0_iter1 <= ap_start;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter2 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter3 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter4 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter4 <= ap_enable_reg_pp0_iter3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter5 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter5 <= ap_enable_reg_pp0_iter4;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_ce) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        add_ln128_reg_1044[21 : 6] <= add_ln128_fu_331_p2[21 : 6];
        shl_ln128_1_reg_1004[21 : 6] <= shl_ln128_1_fu_219_p3[21 : 6];
        shl_ln128_2_reg_1009[21 : 6] <= shl_ln128_2_fu_227_p3[21 : 6];
        shl_ln128_3_reg_1014[21 : 6] <= shl_ln128_3_fu_235_p3[21 : 6];
        shl_ln128_4_reg_1019[21 : 6] <= shl_ln128_4_fu_243_p3[21 : 6];
        shl_ln128_5_reg_1024[21 : 6] <= shl_ln128_5_fu_251_p3[21 : 6];
        shl_ln128_6_reg_1029[21 : 6] <= shl_ln128_6_fu_259_p3[21 : 6];
        shl_ln128_7_reg_1034[21 : 6] <= shl_ln128_7_fu_267_p3[21 : 6];
        shl_ln128_8_reg_1039[21 : 6] <= shl_ln128_8_fu_275_p3[21 : 6];
        shl_ln_reg_999[21 : 6] <= shl_ln_fu_211_p3[21 : 6];
        sub_ln134_1_reg_1055 <= sub_ln134_1_fu_365_p2;
        sub_ln134_2_reg_1061 <= sub_ln134_2_fu_370_p2;
        sub_ln134_3_reg_1067 <= sub_ln134_3_fu_375_p2;
        sub_ln134_4_reg_1073 <= sub_ln134_4_fu_380_p2;
        sub_ln134_5_reg_1079 <= sub_ln134_5_fu_385_p2;
        sub_ln134_6_reg_1085 <= sub_ln134_6_fu_390_p2;
        sub_ln134_7_reg_1091 <= sub_ln134_7_fu_395_p2;
        sub_ln134_8_reg_1097 <= sub_ln134_8_fu_400_p2;
        sub_ln134_9_reg_1103 <= sub_ln134_9_fu_405_p2;
        sub_ln134_reg_1049 <= sub_ln134_fu_360_p2;
        sum_cache_reg_994[21 : 6] <= sum_cache_fu_203_p3[21 : 6];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_ce))) begin
        add_ln136_1_reg_1109 <= add_ln136_1_fu_560_p2;
        add_ln136_3_reg_1114 <= add_ln136_3_fu_572_p2;
        add_ln136_8_reg_1119 <= add_ln136_8_fu_596_p2;
        index_reg_1124 <= index_fu_681_p3;
        sub_ln134_1_reg_1055_pp0_iter2_reg <= sub_ln134_1_reg_1055;
        sub_ln134_1_reg_1055_pp0_iter3_reg <= sub_ln134_1_reg_1055_pp0_iter2_reg;
        sub_ln134_1_reg_1055_pp0_iter4_reg <= sub_ln134_1_reg_1055_pp0_iter3_reg;
        sub_ln134_2_reg_1061_pp0_iter2_reg <= sub_ln134_2_reg_1061;
        sub_ln134_2_reg_1061_pp0_iter3_reg <= sub_ln134_2_reg_1061_pp0_iter2_reg;
        sub_ln134_2_reg_1061_pp0_iter4_reg <= sub_ln134_2_reg_1061_pp0_iter3_reg;
        sub_ln134_3_reg_1067_pp0_iter2_reg <= sub_ln134_3_reg_1067;
        sub_ln134_3_reg_1067_pp0_iter3_reg <= sub_ln134_3_reg_1067_pp0_iter2_reg;
        sub_ln134_3_reg_1067_pp0_iter4_reg <= sub_ln134_3_reg_1067_pp0_iter3_reg;
        sub_ln134_4_reg_1073_pp0_iter2_reg <= sub_ln134_4_reg_1073;
        sub_ln134_4_reg_1073_pp0_iter3_reg <= sub_ln134_4_reg_1073_pp0_iter2_reg;
        sub_ln134_4_reg_1073_pp0_iter4_reg <= sub_ln134_4_reg_1073_pp0_iter3_reg;
        sub_ln134_5_reg_1079_pp0_iter2_reg <= sub_ln134_5_reg_1079;
        sub_ln134_5_reg_1079_pp0_iter3_reg <= sub_ln134_5_reg_1079_pp0_iter2_reg;
        sub_ln134_5_reg_1079_pp0_iter4_reg <= sub_ln134_5_reg_1079_pp0_iter3_reg;
        sub_ln134_6_reg_1085_pp0_iter2_reg <= sub_ln134_6_reg_1085;
        sub_ln134_6_reg_1085_pp0_iter3_reg <= sub_ln134_6_reg_1085_pp0_iter2_reg;
        sub_ln134_6_reg_1085_pp0_iter4_reg <= sub_ln134_6_reg_1085_pp0_iter3_reg;
        sub_ln134_7_reg_1091_pp0_iter2_reg <= sub_ln134_7_reg_1091;
        sub_ln134_7_reg_1091_pp0_iter3_reg <= sub_ln134_7_reg_1091_pp0_iter2_reg;
        sub_ln134_7_reg_1091_pp0_iter4_reg <= sub_ln134_7_reg_1091_pp0_iter3_reg;
        sub_ln134_8_reg_1097_pp0_iter2_reg <= sub_ln134_8_reg_1097;
        sub_ln134_8_reg_1097_pp0_iter3_reg <= sub_ln134_8_reg_1097_pp0_iter2_reg;
        sub_ln134_8_reg_1097_pp0_iter4_reg <= sub_ln134_8_reg_1097_pp0_iter3_reg;
        sub_ln134_9_reg_1103_pp0_iter2_reg <= sub_ln134_9_reg_1103;
        sub_ln134_9_reg_1103_pp0_iter3_reg <= sub_ln134_9_reg_1103_pp0_iter2_reg;
        sub_ln134_9_reg_1103_pp0_iter4_reg <= sub_ln134_9_reg_1103_pp0_iter3_reg;
        sub_ln134_reg_1049_pp0_iter2_reg <= sub_ln134_reg_1049;
        sub_ln134_reg_1049_pp0_iter3_reg <= sub_ln134_reg_1049_pp0_iter2_reg;
        sub_ln134_reg_1049_pp0_iter4_reg <= sub_ln134_reg_1049_pp0_iter3_reg;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter5 == 1'b1))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (ap_idle_pp0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter5 == 1'b0) & (ap_enable_reg_pp0_iter4 == 1'b0) & (ap_enable_reg_pp0_iter3 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter4 == 1'b0) & (ap_enable_reg_pp0_iter3 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0_0to4 = 1'b1;
    end else begin
        ap_idle_pp0_0to4 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if (((ap_idle_pp0_0to4 == 1'b1) & (ap_start == 1'b0))) begin
        ap_reset_idle_pp0 = 1'b1;
    end else begin
        ap_reset_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter4 == 1'b1) & (1'b1 == ap_ce))) begin
        invert_sqr_table_ce0 = 1'b1;
    end else begin
        invert_sqr_table_ce0 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_pp0_stage0 : begin
            ap_NS_fsm = ap_ST_fsm_pp0_stage0;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign add_ln128_1_fu_283_p2 = (shl_ln_fu_211_p3 + sum_cache_fu_203_p3);

assign add_ln128_2_fu_289_p2 = (shl_ln128_2_fu_227_p3 + shl_ln128_3_fu_235_p3);

assign add_ln128_3_fu_295_p2 = (add_ln128_2_fu_289_p2 + shl_ln128_1_fu_219_p3);

assign add_ln128_4_fu_301_p2 = (add_ln128_3_fu_295_p2 + add_ln128_1_fu_283_p2);

assign add_ln128_5_fu_307_p2 = (shl_ln128_4_fu_243_p3 + shl_ln128_5_fu_251_p3);

assign add_ln128_6_fu_313_p2 = (shl_ln128_7_fu_267_p3 + shl_ln128_8_fu_275_p3);

assign add_ln128_7_fu_319_p2 = (add_ln128_6_fu_313_p2 + shl_ln128_6_fu_259_p3);

assign add_ln128_8_fu_325_p2 = (add_ln128_7_fu_319_p2 + add_ln128_5_fu_307_p2);

assign add_ln128_fu_331_p2 = (add_ln128_8_fu_325_p2 + add_ln128_4_fu_301_p2);

assign add_ln136_1_fu_560_p2 = (diff_10_fu_415_p4 + diff_fu_430_p4);

assign add_ln136_2_fu_566_p2 = (diff_3_fu_460_p4 + diff_4_fu_475_p4);

assign add_ln136_3_fu_572_p2 = (add_ln136_2_fu_566_p2 + diff_2_fu_445_p4);

assign add_ln136_4_fu_602_p2 = (add_ln136_3_reg_1114 + add_ln136_1_reg_1109);

assign add_ln136_5_fu_578_p2 = (diff_5_fu_490_p4 + diff_6_fu_505_p4);

assign add_ln136_6_fu_584_p2 = (diff_8_fu_535_p4 + diff_9_fu_550_p4);

assign add_ln136_7_fu_590_p2 = (add_ln136_6_fu_584_p2 + diff_7_fu_520_p4);

assign add_ln136_8_fu_596_p2 = (add_ln136_7_fu_590_p2 + add_ln136_5_fu_578_p2);

assign add_ln136_fu_606_p2 = (add_ln136_8_reg_1119 + add_ln136_4_fu_602_p2);

assign add_ln140_fu_667_p2 = ($signed(sext_ln140_fu_631_p1) + $signed(19'd1));

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd0];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_11001 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage0_subdone = (1'b0 == ap_ce);
end

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_enable_reg_pp0_iter0 = ap_start;

assign ap_return_0 = {{mul_ln149_fu_747_p2[25:10]}};

assign ap_return_1 = {{mul_ln149_1_fu_766_p2[25:10]}};

assign ap_return_2 = {{mul_ln149_2_fu_785_p2[25:10]}};

assign ap_return_3 = {{mul_ln149_3_fu_804_p2[25:10]}};

assign ap_return_4 = {{mul_ln149_4_fu_823_p2[25:10]}};

assign ap_return_5 = {{mul_ln149_5_fu_842_p2[25:10]}};

assign ap_return_6 = {{mul_ln149_6_fu_861_p2[25:10]}};

assign ap_return_7 = {{mul_ln149_7_fu_880_p2[25:10]}};

assign ap_return_8 = {{mul_ln149_8_fu_899_p2[25:10]}};

assign ap_return_9 = {{mul_ln149_9_fu_918_p2[25:10]}};

assign diff_10_fu_415_p4 = {{mul_ln135_fu_163_p2[37:16]}};

assign diff_2_fu_445_p4 = {{mul_ln135_2_fu_171_p2[37:16]}};

assign diff_3_fu_460_p4 = {{mul_ln135_3_fu_175_p2[37:16]}};

assign diff_4_fu_475_p4 = {{mul_ln135_4_fu_179_p2[37:16]}};

assign diff_5_fu_490_p4 = {{mul_ln135_5_fu_183_p2[37:16]}};

assign diff_6_fu_505_p4 = {{mul_ln135_6_fu_187_p2[37:16]}};

assign diff_7_fu_520_p4 = {{mul_ln135_7_fu_191_p2[37:16]}};

assign diff_8_fu_535_p4 = {{mul_ln135_8_fu_195_p2[37:16]}};

assign diff_9_fu_550_p4 = {{mul_ln135_9_fu_199_p2[37:16]}};

assign diff_fu_430_p4 = {{mul_ln135_1_fu_167_p2[37:16]}};

assign icmp_ln140_fu_661_p2 = ((tmp_s_fu_653_p3 == 16'd0) ? 1'b1 : 1'b0);

assign icmp_ln143_fu_721_p2 = ((tmp_4_fu_711_p4 != 5'd0) ? 1'b1 : 1'b0);

assign index_1_fu_700_p3 = ((tmp_3_fu_692_p3[0:0] == 1'b1) ? 19'd0 : index_reg_1124);

assign index_2_fu_727_p3 = ((icmp_ln143_fu_721_p2[0:0] == 1'b1) ? 14'd16383 : trunc_ln140_fu_707_p1);

assign index_fu_681_p3 = ((tmp_2_fu_635_p3[0:0] == 1'b1) ? select_ln140_fu_673_p3 : sext_ln140_fu_631_p1);

assign invert_sqr_table_address0 = zext_ln144_fu_735_p1;

assign mean_fu_346_p4 = {{mul_ln73_fu_340_p2[35:16]}};

assign mul_ln135_1_fu_167_p0 = sext_ln135_1_fu_425_p1;

assign mul_ln135_1_fu_167_p1 = sext_ln135_1_fu_425_p1;

assign mul_ln135_2_fu_171_p0 = sext_ln135_2_fu_440_p1;

assign mul_ln135_2_fu_171_p1 = sext_ln135_2_fu_440_p1;

assign mul_ln135_3_fu_175_p0 = sext_ln135_3_fu_455_p1;

assign mul_ln135_3_fu_175_p1 = sext_ln135_3_fu_455_p1;

assign mul_ln135_4_fu_179_p0 = sext_ln135_4_fu_470_p1;

assign mul_ln135_4_fu_179_p1 = sext_ln135_4_fu_470_p1;

assign mul_ln135_5_fu_183_p0 = sext_ln135_5_fu_485_p1;

assign mul_ln135_5_fu_183_p1 = sext_ln135_5_fu_485_p1;

assign mul_ln135_6_fu_187_p0 = sext_ln135_6_fu_500_p1;

assign mul_ln135_6_fu_187_p1 = sext_ln135_6_fu_500_p1;

assign mul_ln135_7_fu_191_p0 = sext_ln135_7_fu_515_p1;

assign mul_ln135_7_fu_191_p1 = sext_ln135_7_fu_515_p1;

assign mul_ln135_8_fu_195_p0 = sext_ln135_8_fu_530_p1;

assign mul_ln135_8_fu_195_p1 = sext_ln135_8_fu_530_p1;

assign mul_ln135_9_fu_199_p0 = sext_ln135_9_fu_545_p1;

assign mul_ln135_9_fu_199_p1 = sext_ln135_9_fu_545_p1;

assign mul_ln135_fu_163_p0 = sext_ln135_fu_410_p1;

assign mul_ln135_fu_163_p1 = sext_ln135_fu_410_p1;

assign mul_ln149_1_fu_766_p1 = sext_ln149_1_fu_743_p1;

assign mul_ln149_2_fu_785_p1 = sext_ln149_1_fu_743_p1;

assign mul_ln149_3_fu_804_p1 = sext_ln149_1_fu_743_p1;

assign mul_ln149_4_fu_823_p1 = sext_ln149_1_fu_743_p1;

assign mul_ln149_5_fu_842_p1 = sext_ln149_1_fu_743_p1;

assign mul_ln149_6_fu_861_p1 = sext_ln149_1_fu_743_p1;

assign mul_ln149_7_fu_880_p1 = sext_ln149_1_fu_743_p1;

assign mul_ln149_8_fu_899_p1 = sext_ln149_1_fu_743_p1;

assign mul_ln149_9_fu_918_p1 = sext_ln149_1_fu_743_p1;

assign mul_ln149_fu_747_p1 = sext_ln149_1_fu_743_p1;

assign mul_ln73_1_fu_615_p1 = 36'd6553;

assign mul_ln73_fu_340_p1 = 36'd6553;

assign select_ln140_fu_673_p3 = ((icmp_ln140_fu_661_p2[0:0] == 1'b1) ? sext_ln140_fu_631_p1 : add_ln140_fu_667_p2);

assign sext_ln130_fu_356_p1 = $signed(mean_fu_346_p4);

assign sext_ln135_1_fu_425_p1 = sub_ln134_1_reg_1055;

assign sext_ln135_2_fu_440_p1 = sub_ln134_2_reg_1061;

assign sext_ln135_3_fu_455_p1 = sub_ln134_3_reg_1067;

assign sext_ln135_4_fu_470_p1 = sub_ln134_4_reg_1073;

assign sext_ln135_5_fu_485_p1 = sub_ln134_5_reg_1079;

assign sext_ln135_6_fu_500_p1 = sub_ln134_6_reg_1085;

assign sext_ln135_7_fu_515_p1 = sub_ln134_7_reg_1091;

assign sext_ln135_8_fu_530_p1 = sub_ln134_8_reg_1097;

assign sext_ln135_9_fu_545_p1 = sub_ln134_9_reg_1103;

assign sext_ln135_fu_410_p1 = sub_ln134_reg_1049;

assign sext_ln140_1_fu_689_p1 = index_reg_1124;

assign sext_ln140_fu_631_p1 = $signed(tmp_1_fu_621_p4);

assign sext_ln149_1_fu_743_p1 = $signed(invert_sqr_table_q0);

assign shl_ln128_1_fu_219_p3 = {{data_2_val}, {6'd0}};

assign shl_ln128_2_fu_227_p3 = {{data_3_val}, {6'd0}};

assign shl_ln128_3_fu_235_p3 = {{data_4_val}, {6'd0}};

assign shl_ln128_4_fu_243_p3 = {{data_5_val}, {6'd0}};

assign shl_ln128_5_fu_251_p3 = {{data_6_val}, {6'd0}};

assign shl_ln128_6_fu_259_p3 = {{data_7_val}, {6'd0}};

assign shl_ln128_7_fu_267_p3 = {{data_8_val}, {6'd0}};

assign shl_ln128_8_fu_275_p3 = {{data_9_val}, {6'd0}};

assign shl_ln_fu_211_p3 = {{data_1_val}, {6'd0}};

assign sub_ln134_1_fu_365_p2 = ($signed(shl_ln_reg_999) - $signed(sext_ln130_fu_356_p1));

assign sub_ln134_2_fu_370_p2 = ($signed(shl_ln128_1_reg_1004) - $signed(sext_ln130_fu_356_p1));

assign sub_ln134_3_fu_375_p2 = ($signed(shl_ln128_2_reg_1009) - $signed(sext_ln130_fu_356_p1));

assign sub_ln134_4_fu_380_p2 = ($signed(shl_ln128_3_reg_1014) - $signed(sext_ln130_fu_356_p1));

assign sub_ln134_5_fu_385_p2 = ($signed(shl_ln128_4_reg_1019) - $signed(sext_ln130_fu_356_p1));

assign sub_ln134_6_fu_390_p2 = ($signed(shl_ln128_5_reg_1024) - $signed(sext_ln130_fu_356_p1));

assign sub_ln134_7_fu_395_p2 = ($signed(shl_ln128_6_reg_1029) - $signed(sext_ln130_fu_356_p1));

assign sub_ln134_8_fu_400_p2 = ($signed(shl_ln128_7_reg_1034) - $signed(sext_ln130_fu_356_p1));

assign sub_ln134_9_fu_405_p2 = ($signed(shl_ln128_8_reg_1039) - $signed(sext_ln130_fu_356_p1));

assign sub_ln134_fu_360_p2 = ($signed(sum_cache_reg_994) - $signed(sext_ln130_fu_356_p1));

assign sum_cache_fu_203_p3 = {{data_0_val}, {6'd0}};

assign tmp_1_fu_621_p4 = {{mul_ln73_1_fu_615_p2[35:18]}};

assign tmp_2_fu_635_p3 = mul_ln73_1_fu_615_p2[32'd35];

assign tmp_3_fu_692_p3 = sext_ln140_1_fu_689_p1[32'd20];

assign tmp_4_fu_711_p4 = {{index_1_fu_700_p3[18:14]}};

assign tmp_fu_643_p4 = {{mul_ln73_1_fu_615_p2[17:16]}};

assign tmp_s_fu_653_p3 = {{tmp_fu_643_p4}, {14'd0}};

assign trunc_ln140_fu_707_p1 = index_1_fu_700_p3[13:0];

assign zext_ln144_fu_735_p1 = index_2_fu_727_p3;

always @ (posedge ap_clk) begin
    sum_cache_reg_994[5:0] <= 6'b000000;
    shl_ln_reg_999[5:0] <= 6'b000000;
    shl_ln128_1_reg_1004[5:0] <= 6'b000000;
    shl_ln128_2_reg_1009[5:0] <= 6'b000000;
    shl_ln128_3_reg_1014[5:0] <= 6'b000000;
    shl_ln128_4_reg_1019[5:0] <= 6'b000000;
    shl_ln128_5_reg_1024[5:0] <= 6'b000000;
    shl_ln128_6_reg_1029[5:0] <= 6'b000000;
    shl_ln128_7_reg_1034[5:0] <= 6'b000000;
    shl_ln128_8_reg_1039[5:0] <= 6'b000000;
    add_ln128_reg_1044[5:0] <= 6'b000000;
end

endmodule //myproject_layernorm_1d_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config2_s
