// ==============================================================
// Generated by Vitis HLS v2023.2
// Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
// Copyright 2022-2023 Advanced Micro Devices, Inc. All Rights Reserved.
// ==============================================================

`timescale 1 ns / 1 ps 

module myproject_dense_out_ap_fixed_33_13_5_3_0_ap_fixed_33_13_5_3_0_config4_s (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_continue,
        ap_idle,
        ap_ready,
        matr_out_0_0_dout,
        matr_out_0_0_num_data_valid,
        matr_out_0_0_fifo_cap,
        matr_out_0_0_empty_n,
        matr_out_0_0_read,
        matr_out_0_1_dout,
        matr_out_0_1_num_data_valid,
        matr_out_0_1_fifo_cap,
        matr_out_0_1_empty_n,
        matr_out_0_1_read,
        matr_out_1_0_dout,
        matr_out_1_0_num_data_valid,
        matr_out_1_0_fifo_cap,
        matr_out_1_0_empty_n,
        matr_out_1_0_read,
        matr_out_1_1_dout,
        matr_out_1_1_num_data_valid,
        matr_out_1_1_fifo_cap,
        matr_out_1_1_empty_n,
        matr_out_1_1_read,
        layer4_out_0,
        layer4_out_0_ap_vld,
        layer4_out_1,
        layer4_out_1_ap_vld,
        layer4_out_2,
        layer4_out_2_ap_vld,
        layer4_out_3,
        layer4_out_3_ap_vld,
        layer4_out_4,
        layer4_out_4_ap_vld,
        layer4_out_5,
        layer4_out_5_ap_vld,
        layer4_out_6,
        layer4_out_6_ap_vld,
        layer4_out_7,
        layer4_out_7_ap_vld,
        layer4_out_8,
        layer4_out_8_ap_vld,
        layer4_out_9,
        layer4_out_9_ap_vld,
        layer4_out_10,
        layer4_out_10_ap_vld,
        layer4_out_11,
        layer4_out_11_ap_vld,
        layer4_out_12,
        layer4_out_12_ap_vld,
        layer4_out_13,
        layer4_out_13_ap_vld,
        layer4_out_14,
        layer4_out_14_ap_vld,
        layer4_out_15,
        layer4_out_15_ap_vld,
        layer4_out_16,
        layer4_out_16_ap_vld,
        layer4_out_17,
        layer4_out_17_ap_vld,
        layer4_out_18,
        layer4_out_18_ap_vld,
        layer4_out_19,
        layer4_out_19_ap_vld,
        layer4_out_20,
        layer4_out_20_ap_vld,
        layer4_out_21,
        layer4_out_21_ap_vld,
        layer4_out_22,
        layer4_out_22_ap_vld,
        layer4_out_23,
        layer4_out_23_ap_vld,
        layer4_out_24,
        layer4_out_24_ap_vld,
        layer4_out_25,
        layer4_out_25_ap_vld,
        layer4_out_26,
        layer4_out_26_ap_vld,
        layer4_out_27,
        layer4_out_27_ap_vld,
        layer4_out_28,
        layer4_out_28_ap_vld,
        layer4_out_29,
        layer4_out_29_ap_vld,
        layer4_out_30,
        layer4_out_30_ap_vld,
        layer4_out_31,
        layer4_out_31_ap_vld,
        layer4_out_32,
        layer4_out_32_ap_vld,
        layer4_out_33,
        layer4_out_33_ap_vld,
        layer4_out_34,
        layer4_out_34_ap_vld,
        layer4_out_35,
        layer4_out_35_ap_vld,
        layer4_out_36,
        layer4_out_36_ap_vld,
        layer4_out_37,
        layer4_out_37_ap_vld,
        layer4_out_38,
        layer4_out_38_ap_vld,
        layer4_out_39,
        layer4_out_39_ap_vld,
        layer4_out_40,
        layer4_out_40_ap_vld,
        layer4_out_41,
        layer4_out_41_ap_vld,
        layer4_out_42,
        layer4_out_42_ap_vld,
        layer4_out_43,
        layer4_out_43_ap_vld,
        layer4_out_44,
        layer4_out_44_ap_vld,
        layer4_out_45,
        layer4_out_45_ap_vld,
        layer4_out_46,
        layer4_out_46_ap_vld,
        layer4_out_47,
        layer4_out_47_ap_vld,
        layer4_out_48,
        layer4_out_48_ap_vld,
        layer4_out_49,
        layer4_out_49_ap_vld,
        layer4_out_50,
        layer4_out_50_ap_vld,
        layer4_out_51,
        layer4_out_51_ap_vld,
        layer4_out_52,
        layer4_out_52_ap_vld,
        layer4_out_53,
        layer4_out_53_ap_vld,
        layer4_out_54,
        layer4_out_54_ap_vld,
        layer4_out_55,
        layer4_out_55_ap_vld,
        layer4_out_56,
        layer4_out_56_ap_vld,
        layer4_out_57,
        layer4_out_57_ap_vld,
        layer4_out_58,
        layer4_out_58_ap_vld,
        layer4_out_59,
        layer4_out_59_ap_vld,
        layer4_out_60,
        layer4_out_60_ap_vld,
        layer4_out_61,
        layer4_out_61_ap_vld,
        layer4_out_62,
        layer4_out_62_ap_vld,
        layer4_out_63,
        layer4_out_63_ap_vld,
        layer4_out_64,
        layer4_out_64_ap_vld,
        layer4_out_65,
        layer4_out_65_ap_vld,
        layer4_out_66,
        layer4_out_66_ap_vld,
        layer4_out_67,
        layer4_out_67_ap_vld,
        layer4_out_68,
        layer4_out_68_ap_vld,
        layer4_out_69,
        layer4_out_69_ap_vld,
        layer4_out_70,
        layer4_out_70_ap_vld,
        layer4_out_71,
        layer4_out_71_ap_vld,
        layer4_out_72,
        layer4_out_72_ap_vld,
        layer4_out_73,
        layer4_out_73_ap_vld,
        layer4_out_74,
        layer4_out_74_ap_vld,
        layer4_out_75,
        layer4_out_75_ap_vld,
        layer4_out_76,
        layer4_out_76_ap_vld,
        layer4_out_77,
        layer4_out_77_ap_vld,
        layer4_out_78,
        layer4_out_78_ap_vld,
        layer4_out_79,
        layer4_out_79_ap_vld
);

parameter    ap_ST_fsm_state1 = 22'd1;
parameter    ap_ST_fsm_state2 = 22'd2;
parameter    ap_ST_fsm_state3 = 22'd4;
parameter    ap_ST_fsm_state4 = 22'd8;
parameter    ap_ST_fsm_state5 = 22'd16;
parameter    ap_ST_fsm_state6 = 22'd32;
parameter    ap_ST_fsm_state7 = 22'd64;
parameter    ap_ST_fsm_state8 = 22'd128;
parameter    ap_ST_fsm_state9 = 22'd256;
parameter    ap_ST_fsm_state10 = 22'd512;
parameter    ap_ST_fsm_state11 = 22'd1024;
parameter    ap_ST_fsm_state12 = 22'd2048;
parameter    ap_ST_fsm_state13 = 22'd4096;
parameter    ap_ST_fsm_state14 = 22'd8192;
parameter    ap_ST_fsm_state15 = 22'd16384;
parameter    ap_ST_fsm_state16 = 22'd32768;
parameter    ap_ST_fsm_state17 = 22'd65536;
parameter    ap_ST_fsm_state18 = 22'd131072;
parameter    ap_ST_fsm_state19 = 22'd262144;
parameter    ap_ST_fsm_state20 = 22'd524288;
parameter    ap_ST_fsm_state21 = 22'd1048576;
parameter    ap_ST_fsm_state22 = 22'd2097152;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
input   ap_continue;
output   ap_idle;
output   ap_ready;
input  [32:0] matr_out_0_0_dout;
input  [2:0] matr_out_0_0_num_data_valid;
input  [2:0] matr_out_0_0_fifo_cap;
input   matr_out_0_0_empty_n;
output   matr_out_0_0_read;
input  [32:0] matr_out_0_1_dout;
input  [2:0] matr_out_0_1_num_data_valid;
input  [2:0] matr_out_0_1_fifo_cap;
input   matr_out_0_1_empty_n;
output   matr_out_0_1_read;
input  [32:0] matr_out_1_0_dout;
input  [2:0] matr_out_1_0_num_data_valid;
input  [2:0] matr_out_1_0_fifo_cap;
input   matr_out_1_0_empty_n;
output   matr_out_1_0_read;
input  [32:0] matr_out_1_1_dout;
input  [2:0] matr_out_1_1_num_data_valid;
input  [2:0] matr_out_1_1_fifo_cap;
input   matr_out_1_1_empty_n;
output   matr_out_1_1_read;
output  [32:0] layer4_out_0;
output   layer4_out_0_ap_vld;
output  [32:0] layer4_out_1;
output   layer4_out_1_ap_vld;
output  [32:0] layer4_out_2;
output   layer4_out_2_ap_vld;
output  [32:0] layer4_out_3;
output   layer4_out_3_ap_vld;
output  [32:0] layer4_out_4;
output   layer4_out_4_ap_vld;
output  [32:0] layer4_out_5;
output   layer4_out_5_ap_vld;
output  [32:0] layer4_out_6;
output   layer4_out_6_ap_vld;
output  [32:0] layer4_out_7;
output   layer4_out_7_ap_vld;
output  [32:0] layer4_out_8;
output   layer4_out_8_ap_vld;
output  [32:0] layer4_out_9;
output   layer4_out_9_ap_vld;
output  [32:0] layer4_out_10;
output   layer4_out_10_ap_vld;
output  [32:0] layer4_out_11;
output   layer4_out_11_ap_vld;
output  [32:0] layer4_out_12;
output   layer4_out_12_ap_vld;
output  [32:0] layer4_out_13;
output   layer4_out_13_ap_vld;
output  [32:0] layer4_out_14;
output   layer4_out_14_ap_vld;
output  [32:0] layer4_out_15;
output   layer4_out_15_ap_vld;
output  [32:0] layer4_out_16;
output   layer4_out_16_ap_vld;
output  [32:0] layer4_out_17;
output   layer4_out_17_ap_vld;
output  [32:0] layer4_out_18;
output   layer4_out_18_ap_vld;
output  [32:0] layer4_out_19;
output   layer4_out_19_ap_vld;
output  [32:0] layer4_out_20;
output   layer4_out_20_ap_vld;
output  [32:0] layer4_out_21;
output   layer4_out_21_ap_vld;
output  [32:0] layer4_out_22;
output   layer4_out_22_ap_vld;
output  [32:0] layer4_out_23;
output   layer4_out_23_ap_vld;
output  [32:0] layer4_out_24;
output   layer4_out_24_ap_vld;
output  [32:0] layer4_out_25;
output   layer4_out_25_ap_vld;
output  [32:0] layer4_out_26;
output   layer4_out_26_ap_vld;
output  [32:0] layer4_out_27;
output   layer4_out_27_ap_vld;
output  [32:0] layer4_out_28;
output   layer4_out_28_ap_vld;
output  [32:0] layer4_out_29;
output   layer4_out_29_ap_vld;
output  [32:0] layer4_out_30;
output   layer4_out_30_ap_vld;
output  [32:0] layer4_out_31;
output   layer4_out_31_ap_vld;
output  [32:0] layer4_out_32;
output   layer4_out_32_ap_vld;
output  [32:0] layer4_out_33;
output   layer4_out_33_ap_vld;
output  [32:0] layer4_out_34;
output   layer4_out_34_ap_vld;
output  [32:0] layer4_out_35;
output   layer4_out_35_ap_vld;
output  [32:0] layer4_out_36;
output   layer4_out_36_ap_vld;
output  [32:0] layer4_out_37;
output   layer4_out_37_ap_vld;
output  [32:0] layer4_out_38;
output   layer4_out_38_ap_vld;
output  [32:0] layer4_out_39;
output   layer4_out_39_ap_vld;
output  [32:0] layer4_out_40;
output   layer4_out_40_ap_vld;
output  [32:0] layer4_out_41;
output   layer4_out_41_ap_vld;
output  [32:0] layer4_out_42;
output   layer4_out_42_ap_vld;
output  [32:0] layer4_out_43;
output   layer4_out_43_ap_vld;
output  [32:0] layer4_out_44;
output   layer4_out_44_ap_vld;
output  [32:0] layer4_out_45;
output   layer4_out_45_ap_vld;
output  [32:0] layer4_out_46;
output   layer4_out_46_ap_vld;
output  [32:0] layer4_out_47;
output   layer4_out_47_ap_vld;
output  [32:0] layer4_out_48;
output   layer4_out_48_ap_vld;
output  [32:0] layer4_out_49;
output   layer4_out_49_ap_vld;
output  [32:0] layer4_out_50;
output   layer4_out_50_ap_vld;
output  [32:0] layer4_out_51;
output   layer4_out_51_ap_vld;
output  [32:0] layer4_out_52;
output   layer4_out_52_ap_vld;
output  [32:0] layer4_out_53;
output   layer4_out_53_ap_vld;
output  [32:0] layer4_out_54;
output   layer4_out_54_ap_vld;
output  [32:0] layer4_out_55;
output   layer4_out_55_ap_vld;
output  [32:0] layer4_out_56;
output   layer4_out_56_ap_vld;
output  [32:0] layer4_out_57;
output   layer4_out_57_ap_vld;
output  [32:0] layer4_out_58;
output   layer4_out_58_ap_vld;
output  [32:0] layer4_out_59;
output   layer4_out_59_ap_vld;
output  [32:0] layer4_out_60;
output   layer4_out_60_ap_vld;
output  [32:0] layer4_out_61;
output   layer4_out_61_ap_vld;
output  [32:0] layer4_out_62;
output   layer4_out_62_ap_vld;
output  [32:0] layer4_out_63;
output   layer4_out_63_ap_vld;
output  [32:0] layer4_out_64;
output   layer4_out_64_ap_vld;
output  [32:0] layer4_out_65;
output   layer4_out_65_ap_vld;
output  [32:0] layer4_out_66;
output   layer4_out_66_ap_vld;
output  [32:0] layer4_out_67;
output   layer4_out_67_ap_vld;
output  [32:0] layer4_out_68;
output   layer4_out_68_ap_vld;
output  [32:0] layer4_out_69;
output   layer4_out_69_ap_vld;
output  [32:0] layer4_out_70;
output   layer4_out_70_ap_vld;
output  [32:0] layer4_out_71;
output   layer4_out_71_ap_vld;
output  [32:0] layer4_out_72;
output   layer4_out_72_ap_vld;
output  [32:0] layer4_out_73;
output   layer4_out_73_ap_vld;
output  [32:0] layer4_out_74;
output   layer4_out_74_ap_vld;
output  [32:0] layer4_out_75;
output   layer4_out_75_ap_vld;
output  [32:0] layer4_out_76;
output   layer4_out_76_ap_vld;
output  [32:0] layer4_out_77;
output   layer4_out_77_ap_vld;
output  [32:0] layer4_out_78;
output   layer4_out_78_ap_vld;
output  [32:0] layer4_out_79;
output   layer4_out_79_ap_vld;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg matr_out_0_0_read;
reg matr_out_0_1_read;
reg matr_out_1_0_read;
reg matr_out_1_1_read;
reg[32:0] layer4_out_0;
reg layer4_out_0_ap_vld;
reg[32:0] layer4_out_1;
reg layer4_out_1_ap_vld;
reg[32:0] layer4_out_2;
reg layer4_out_2_ap_vld;
reg[32:0] layer4_out_3;
reg layer4_out_3_ap_vld;
reg[32:0] layer4_out_4;
reg layer4_out_4_ap_vld;
reg[32:0] layer4_out_5;
reg layer4_out_5_ap_vld;
reg[32:0] layer4_out_6;
reg layer4_out_6_ap_vld;
reg[32:0] layer4_out_7;
reg layer4_out_7_ap_vld;
reg[32:0] layer4_out_8;
reg layer4_out_8_ap_vld;
reg[32:0] layer4_out_9;
reg layer4_out_9_ap_vld;
reg[32:0] layer4_out_10;
reg layer4_out_10_ap_vld;
reg[32:0] layer4_out_11;
reg layer4_out_11_ap_vld;
reg[32:0] layer4_out_12;
reg layer4_out_12_ap_vld;
reg[32:0] layer4_out_13;
reg layer4_out_13_ap_vld;
reg[32:0] layer4_out_14;
reg layer4_out_14_ap_vld;
reg[32:0] layer4_out_15;
reg layer4_out_15_ap_vld;
reg[32:0] layer4_out_16;
reg layer4_out_16_ap_vld;
reg[32:0] layer4_out_17;
reg layer4_out_17_ap_vld;
reg[32:0] layer4_out_18;
reg layer4_out_18_ap_vld;
reg[32:0] layer4_out_19;
reg layer4_out_19_ap_vld;
reg[32:0] layer4_out_20;
reg layer4_out_20_ap_vld;
reg[32:0] layer4_out_21;
reg layer4_out_21_ap_vld;
reg[32:0] layer4_out_22;
reg layer4_out_22_ap_vld;
reg[32:0] layer4_out_23;
reg layer4_out_23_ap_vld;
reg[32:0] layer4_out_24;
reg layer4_out_24_ap_vld;
reg[32:0] layer4_out_25;
reg layer4_out_25_ap_vld;
reg[32:0] layer4_out_26;
reg layer4_out_26_ap_vld;
reg[32:0] layer4_out_27;
reg layer4_out_27_ap_vld;
reg[32:0] layer4_out_28;
reg layer4_out_28_ap_vld;
reg[32:0] layer4_out_29;
reg layer4_out_29_ap_vld;
reg[32:0] layer4_out_30;
reg layer4_out_30_ap_vld;
reg[32:0] layer4_out_31;
reg layer4_out_31_ap_vld;
reg[32:0] layer4_out_32;
reg layer4_out_32_ap_vld;
reg[32:0] layer4_out_33;
reg layer4_out_33_ap_vld;
reg[32:0] layer4_out_34;
reg layer4_out_34_ap_vld;
reg[32:0] layer4_out_35;
reg layer4_out_35_ap_vld;
reg[32:0] layer4_out_36;
reg layer4_out_36_ap_vld;
reg[32:0] layer4_out_37;
reg layer4_out_37_ap_vld;
reg[32:0] layer4_out_38;
reg layer4_out_38_ap_vld;
reg[32:0] layer4_out_39;
reg layer4_out_39_ap_vld;
reg[32:0] layer4_out_40;
reg layer4_out_40_ap_vld;
reg[32:0] layer4_out_41;
reg layer4_out_41_ap_vld;
reg[32:0] layer4_out_42;
reg layer4_out_42_ap_vld;
reg[32:0] layer4_out_43;
reg layer4_out_43_ap_vld;
reg[32:0] layer4_out_44;
reg layer4_out_44_ap_vld;
reg[32:0] layer4_out_45;
reg layer4_out_45_ap_vld;
reg[32:0] layer4_out_46;
reg layer4_out_46_ap_vld;
reg[32:0] layer4_out_47;
reg layer4_out_47_ap_vld;
reg[32:0] layer4_out_48;
reg layer4_out_48_ap_vld;
reg[32:0] layer4_out_49;
reg layer4_out_49_ap_vld;
reg[32:0] layer4_out_50;
reg layer4_out_50_ap_vld;
reg[32:0] layer4_out_51;
reg layer4_out_51_ap_vld;
reg[32:0] layer4_out_52;
reg layer4_out_52_ap_vld;
reg[32:0] layer4_out_53;
reg layer4_out_53_ap_vld;
reg[32:0] layer4_out_54;
reg layer4_out_54_ap_vld;
reg[32:0] layer4_out_55;
reg layer4_out_55_ap_vld;
reg[32:0] layer4_out_56;
reg layer4_out_56_ap_vld;
reg[32:0] layer4_out_57;
reg layer4_out_57_ap_vld;
reg[32:0] layer4_out_58;
reg layer4_out_58_ap_vld;
reg[32:0] layer4_out_59;
reg layer4_out_59_ap_vld;
reg[32:0] layer4_out_60;
reg layer4_out_60_ap_vld;
reg[32:0] layer4_out_61;
reg layer4_out_61_ap_vld;
reg[32:0] layer4_out_62;
reg layer4_out_62_ap_vld;
reg[32:0] layer4_out_63;
reg layer4_out_63_ap_vld;
reg[32:0] layer4_out_64;
reg layer4_out_64_ap_vld;
reg[32:0] layer4_out_65;
reg layer4_out_65_ap_vld;
reg[32:0] layer4_out_66;
reg layer4_out_66_ap_vld;
reg[32:0] layer4_out_67;
reg layer4_out_67_ap_vld;
reg[32:0] layer4_out_68;
reg layer4_out_68_ap_vld;
reg[32:0] layer4_out_69;
reg layer4_out_69_ap_vld;
reg[32:0] layer4_out_70;
reg layer4_out_70_ap_vld;
reg[32:0] layer4_out_71;
reg layer4_out_71_ap_vld;
reg[32:0] layer4_out_72;
reg layer4_out_72_ap_vld;
reg[32:0] layer4_out_73;
reg layer4_out_73_ap_vld;
reg[32:0] layer4_out_74;
reg layer4_out_74_ap_vld;
reg[32:0] layer4_out_75;
reg layer4_out_75_ap_vld;
reg[32:0] layer4_out_76;
reg layer4_out_76_ap_vld;
reg[32:0] layer4_out_77;
reg layer4_out_77_ap_vld;
reg[32:0] layer4_out_78;
reg layer4_out_78_ap_vld;
reg[32:0] layer4_out_79;
reg layer4_out_79_ap_vld;

reg    ap_done_reg;
(* fsm_encoding = "none" *) reg   [21:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg    matr_out_0_0_blk_n;
wire    ap_CS_fsm_state2;
wire    ap_CS_fsm_state3;
wire    ap_CS_fsm_state4;
wire    ap_CS_fsm_state5;
wire    ap_CS_fsm_state6;
wire    ap_CS_fsm_state7;
wire    ap_CS_fsm_state8;
wire    ap_CS_fsm_state9;
wire    ap_CS_fsm_state10;
wire    ap_CS_fsm_state11;
wire    ap_CS_fsm_state12;
wire    ap_CS_fsm_state13;
wire    ap_CS_fsm_state14;
wire    ap_CS_fsm_state15;
wire    ap_CS_fsm_state16;
wire    ap_CS_fsm_state17;
wire    ap_CS_fsm_state18;
wire    ap_CS_fsm_state19;
wire    ap_CS_fsm_state20;
reg    matr_out_0_1_blk_n;
reg    matr_out_1_0_blk_n;
reg    matr_out_1_1_blk_n;
reg   [32:0] reg_872;
reg    ap_block_state1;
reg    ap_block_state2;
reg    ap_block_state3;
reg    ap_block_state4;
reg    ap_block_state5;
reg    ap_block_state6;
reg    ap_block_state7;
reg    ap_block_state8;
reg    ap_block_state9;
reg    ap_block_state10;
reg    ap_block_state11;
reg    ap_block_state12;
reg    ap_block_state13;
reg    ap_block_state14;
reg    ap_block_state15;
reg    ap_block_state16;
reg    ap_block_state17;
reg    ap_block_state18;
reg    ap_block_state19;
reg    ap_block_state20;
reg   [32:0] reg_877;
reg   [32:0] reg_882;
reg   [32:0] reg_887;
wire   [32:0] grp_dense_latency_ap_fixed_33_13_5_3_0_ap_fixed_33_13_5_3_0_config4_2_s_fu_768_ap_return_0;
wire   [32:0] grp_dense_latency_ap_fixed_33_13_5_3_0_ap_fixed_33_13_5_3_0_config4_2_s_fu_768_ap_return_1;
wire   [32:0] grp_dense_latency_ap_fixed_33_13_5_3_0_ap_fixed_33_13_5_3_0_config4_2_s_fu_768_ap_return_2;
wire   [32:0] grp_dense_latency_ap_fixed_33_13_5_3_0_ap_fixed_33_13_5_3_0_config4_2_s_fu_768_ap_return_3;
reg    grp_dense_latency_ap_fixed_33_13_5_3_0_ap_fixed_33_13_5_3_0_config4_2_s_fu_768_ap_ce;
reg    ap_block_state2_ignore_call84;
reg    ap_block_state3_ignore_call84;
reg    ap_block_state4_ignore_call89;
reg    ap_block_state5_ignore_call94;
reg    ap_block_state6_ignore_call99;
reg    ap_block_state7_ignore_call104;
reg    ap_block_state8_ignore_call109;
reg    ap_block_state9_ignore_call114;
reg    ap_block_state10_ignore_call119;
reg    ap_block_state11_ignore_call124;
reg    ap_block_state12_ignore_call129;
reg    ap_block_state13_ignore_call134;
reg    ap_block_state14_ignore_call139;
reg    ap_block_state15_ignore_call144;
reg    ap_block_state16_ignore_call149;
reg    ap_block_state17_ignore_call154;
reg    ap_block_state18_ignore_call159;
reg    ap_block_state19_ignore_call164;
reg    ap_block_state20_ignore_call169;
wire    ap_CS_fsm_state21;
wire    ap_CS_fsm_state22;
reg   [32:0] layer4_out_0_preg;
reg   [32:0] layer4_out_1_preg;
reg   [32:0] layer4_out_2_preg;
reg   [32:0] layer4_out_3_preg;
reg   [32:0] layer4_out_4_preg;
reg   [32:0] layer4_out_5_preg;
reg   [32:0] layer4_out_6_preg;
reg   [32:0] layer4_out_7_preg;
reg   [32:0] layer4_out_8_preg;
reg   [32:0] layer4_out_9_preg;
reg   [32:0] layer4_out_10_preg;
reg   [32:0] layer4_out_11_preg;
reg   [32:0] layer4_out_12_preg;
reg   [32:0] layer4_out_13_preg;
reg   [32:0] layer4_out_14_preg;
reg   [32:0] layer4_out_15_preg;
reg   [32:0] layer4_out_16_preg;
reg   [32:0] layer4_out_17_preg;
reg   [32:0] layer4_out_18_preg;
reg   [32:0] layer4_out_19_preg;
reg   [32:0] layer4_out_20_preg;
reg   [32:0] layer4_out_21_preg;
reg   [32:0] layer4_out_22_preg;
reg   [32:0] layer4_out_23_preg;
reg   [32:0] layer4_out_24_preg;
reg   [32:0] layer4_out_25_preg;
reg   [32:0] layer4_out_26_preg;
reg   [32:0] layer4_out_27_preg;
reg   [32:0] layer4_out_28_preg;
reg   [32:0] layer4_out_29_preg;
reg   [32:0] layer4_out_30_preg;
reg   [32:0] layer4_out_31_preg;
reg   [32:0] layer4_out_32_preg;
reg   [32:0] layer4_out_33_preg;
reg   [32:0] layer4_out_34_preg;
reg   [32:0] layer4_out_35_preg;
reg   [32:0] layer4_out_36_preg;
reg   [32:0] layer4_out_37_preg;
reg   [32:0] layer4_out_38_preg;
reg   [32:0] layer4_out_39_preg;
reg   [32:0] layer4_out_40_preg;
reg   [32:0] layer4_out_41_preg;
reg   [32:0] layer4_out_42_preg;
reg   [32:0] layer4_out_43_preg;
reg   [32:0] layer4_out_44_preg;
reg   [32:0] layer4_out_45_preg;
reg   [32:0] layer4_out_46_preg;
reg   [32:0] layer4_out_47_preg;
reg   [32:0] layer4_out_48_preg;
reg   [32:0] layer4_out_49_preg;
reg   [32:0] layer4_out_50_preg;
reg   [32:0] layer4_out_51_preg;
reg   [32:0] layer4_out_52_preg;
reg   [32:0] layer4_out_53_preg;
reg   [32:0] layer4_out_54_preg;
reg   [32:0] layer4_out_55_preg;
reg   [32:0] layer4_out_56_preg;
reg   [32:0] layer4_out_57_preg;
reg   [32:0] layer4_out_58_preg;
reg   [32:0] layer4_out_59_preg;
reg   [32:0] layer4_out_60_preg;
reg   [32:0] layer4_out_61_preg;
reg   [32:0] layer4_out_62_preg;
reg   [32:0] layer4_out_63_preg;
reg   [32:0] layer4_out_64_preg;
reg   [32:0] layer4_out_65_preg;
reg   [32:0] layer4_out_66_preg;
reg   [32:0] layer4_out_67_preg;
reg   [32:0] layer4_out_68_preg;
reg   [32:0] layer4_out_69_preg;
reg   [32:0] layer4_out_70_preg;
reg   [32:0] layer4_out_71_preg;
reg   [32:0] layer4_out_72_preg;
reg   [32:0] layer4_out_73_preg;
reg   [32:0] layer4_out_74_preg;
reg   [32:0] layer4_out_75_preg;
reg   [32:0] layer4_out_76_preg;
reg   [32:0] layer4_out_77_preg;
reg   [32:0] layer4_out_78_preg;
reg   [32:0] layer4_out_79_preg;
reg   [21:0] ap_NS_fsm;
reg    ap_ST_fsm_state1_blk;
reg    ap_ST_fsm_state2_blk;
reg    ap_ST_fsm_state3_blk;
reg    ap_ST_fsm_state4_blk;
reg    ap_ST_fsm_state5_blk;
reg    ap_ST_fsm_state6_blk;
reg    ap_ST_fsm_state7_blk;
reg    ap_ST_fsm_state8_blk;
reg    ap_ST_fsm_state9_blk;
reg    ap_ST_fsm_state10_blk;
reg    ap_ST_fsm_state11_blk;
reg    ap_ST_fsm_state12_blk;
reg    ap_ST_fsm_state13_blk;
reg    ap_ST_fsm_state14_blk;
reg    ap_ST_fsm_state15_blk;
reg    ap_ST_fsm_state16_blk;
reg    ap_ST_fsm_state17_blk;
reg    ap_ST_fsm_state18_blk;
reg    ap_ST_fsm_state19_blk;
reg    ap_ST_fsm_state20_blk;
wire    ap_ST_fsm_state21_blk;
wire    ap_ST_fsm_state22_blk;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_done_reg = 1'b0;
#0 ap_CS_fsm = 22'd1;
#0 layer4_out_0_preg = 33'd0;
#0 layer4_out_1_preg = 33'd0;
#0 layer4_out_2_preg = 33'd0;
#0 layer4_out_3_preg = 33'd0;
#0 layer4_out_4_preg = 33'd0;
#0 layer4_out_5_preg = 33'd0;
#0 layer4_out_6_preg = 33'd0;
#0 layer4_out_7_preg = 33'd0;
#0 layer4_out_8_preg = 33'd0;
#0 layer4_out_9_preg = 33'd0;
#0 layer4_out_10_preg = 33'd0;
#0 layer4_out_11_preg = 33'd0;
#0 layer4_out_12_preg = 33'd0;
#0 layer4_out_13_preg = 33'd0;
#0 layer4_out_14_preg = 33'd0;
#0 layer4_out_15_preg = 33'd0;
#0 layer4_out_16_preg = 33'd0;
#0 layer4_out_17_preg = 33'd0;
#0 layer4_out_18_preg = 33'd0;
#0 layer4_out_19_preg = 33'd0;
#0 layer4_out_20_preg = 33'd0;
#0 layer4_out_21_preg = 33'd0;
#0 layer4_out_22_preg = 33'd0;
#0 layer4_out_23_preg = 33'd0;
#0 layer4_out_24_preg = 33'd0;
#0 layer4_out_25_preg = 33'd0;
#0 layer4_out_26_preg = 33'd0;
#0 layer4_out_27_preg = 33'd0;
#0 layer4_out_28_preg = 33'd0;
#0 layer4_out_29_preg = 33'd0;
#0 layer4_out_30_preg = 33'd0;
#0 layer4_out_31_preg = 33'd0;
#0 layer4_out_32_preg = 33'd0;
#0 layer4_out_33_preg = 33'd0;
#0 layer4_out_34_preg = 33'd0;
#0 layer4_out_35_preg = 33'd0;
#0 layer4_out_36_preg = 33'd0;
#0 layer4_out_37_preg = 33'd0;
#0 layer4_out_38_preg = 33'd0;
#0 layer4_out_39_preg = 33'd0;
#0 layer4_out_40_preg = 33'd0;
#0 layer4_out_41_preg = 33'd0;
#0 layer4_out_42_preg = 33'd0;
#0 layer4_out_43_preg = 33'd0;
#0 layer4_out_44_preg = 33'd0;
#0 layer4_out_45_preg = 33'd0;
#0 layer4_out_46_preg = 33'd0;
#0 layer4_out_47_preg = 33'd0;
#0 layer4_out_48_preg = 33'd0;
#0 layer4_out_49_preg = 33'd0;
#0 layer4_out_50_preg = 33'd0;
#0 layer4_out_51_preg = 33'd0;
#0 layer4_out_52_preg = 33'd0;
#0 layer4_out_53_preg = 33'd0;
#0 layer4_out_54_preg = 33'd0;
#0 layer4_out_55_preg = 33'd0;
#0 layer4_out_56_preg = 33'd0;
#0 layer4_out_57_preg = 33'd0;
#0 layer4_out_58_preg = 33'd0;
#0 layer4_out_59_preg = 33'd0;
#0 layer4_out_60_preg = 33'd0;
#0 layer4_out_61_preg = 33'd0;
#0 layer4_out_62_preg = 33'd0;
#0 layer4_out_63_preg = 33'd0;
#0 layer4_out_64_preg = 33'd0;
#0 layer4_out_65_preg = 33'd0;
#0 layer4_out_66_preg = 33'd0;
#0 layer4_out_67_preg = 33'd0;
#0 layer4_out_68_preg = 33'd0;
#0 layer4_out_69_preg = 33'd0;
#0 layer4_out_70_preg = 33'd0;
#0 layer4_out_71_preg = 33'd0;
#0 layer4_out_72_preg = 33'd0;
#0 layer4_out_73_preg = 33'd0;
#0 layer4_out_74_preg = 33'd0;
#0 layer4_out_75_preg = 33'd0;
#0 layer4_out_76_preg = 33'd0;
#0 layer4_out_77_preg = 33'd0;
#0 layer4_out_78_preg = 33'd0;
#0 layer4_out_79_preg = 33'd0;
end

myproject_dense_latency_ap_fixed_33_13_5_3_0_ap_fixed_33_13_5_3_0_config4_2_s grp_dense_latency_ap_fixed_33_13_5_3_0_ap_fixed_33_13_5_3_0_config4_2_s_fu_768(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .data_0_val(reg_872),
    .data_1_val(reg_877),
    .data_2_val(reg_882),
    .data_3_val(reg_887),
    .ap_return_0(grp_dense_latency_ap_fixed_33_13_5_3_0_ap_fixed_33_13_5_3_0_config4_2_s_fu_768_ap_return_0),
    .ap_return_1(grp_dense_latency_ap_fixed_33_13_5_3_0_ap_fixed_33_13_5_3_0_config4_2_s_fu_768_ap_return_1),
    .ap_return_2(grp_dense_latency_ap_fixed_33_13_5_3_0_ap_fixed_33_13_5_3_0_config4_2_s_fu_768_ap_return_2),
    .ap_return_3(grp_dense_latency_ap_fixed_33_13_5_3_0_ap_fixed_33_13_5_3_0_config4_2_s_fu_768_ap_return_3),
    .ap_ce(grp_dense_latency_ap_fixed_33_13_5_3_0_ap_fixed_33_13_5_3_0_config4_2_s_fu_768_ap_ce)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if ((1'b1 == ap_CS_fsm_state22)) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        layer4_out_0_preg <= 33'd0;
    end else begin
        if (((1'b0 == ap_block_state3) & (1'b1 == ap_CS_fsm_state3))) begin
            layer4_out_0_preg <= grp_dense_latency_ap_fixed_33_13_5_3_0_ap_fixed_33_13_5_3_0_config4_2_s_fu_768_ap_return_0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        layer4_out_10_preg <= 33'd0;
    end else begin
        if (((1'b0 == ap_block_state5) & (1'b1 == ap_CS_fsm_state5))) begin
            layer4_out_10_preg <= grp_dense_latency_ap_fixed_33_13_5_3_0_ap_fixed_33_13_5_3_0_config4_2_s_fu_768_ap_return_2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        layer4_out_11_preg <= 33'd0;
    end else begin
        if (((1'b0 == ap_block_state5) & (1'b1 == ap_CS_fsm_state5))) begin
            layer4_out_11_preg <= grp_dense_latency_ap_fixed_33_13_5_3_0_ap_fixed_33_13_5_3_0_config4_2_s_fu_768_ap_return_3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        layer4_out_12_preg <= 33'd0;
    end else begin
        if (((1'b0 == ap_block_state6) & (1'b1 == ap_CS_fsm_state6))) begin
            layer4_out_12_preg <= grp_dense_latency_ap_fixed_33_13_5_3_0_ap_fixed_33_13_5_3_0_config4_2_s_fu_768_ap_return_0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        layer4_out_13_preg <= 33'd0;
    end else begin
        if (((1'b0 == ap_block_state6) & (1'b1 == ap_CS_fsm_state6))) begin
            layer4_out_13_preg <= grp_dense_latency_ap_fixed_33_13_5_3_0_ap_fixed_33_13_5_3_0_config4_2_s_fu_768_ap_return_1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        layer4_out_14_preg <= 33'd0;
    end else begin
        if (((1'b0 == ap_block_state6) & (1'b1 == ap_CS_fsm_state6))) begin
            layer4_out_14_preg <= grp_dense_latency_ap_fixed_33_13_5_3_0_ap_fixed_33_13_5_3_0_config4_2_s_fu_768_ap_return_2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        layer4_out_15_preg <= 33'd0;
    end else begin
        if (((1'b0 == ap_block_state6) & (1'b1 == ap_CS_fsm_state6))) begin
            layer4_out_15_preg <= grp_dense_latency_ap_fixed_33_13_5_3_0_ap_fixed_33_13_5_3_0_config4_2_s_fu_768_ap_return_3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        layer4_out_16_preg <= 33'd0;
    end else begin
        if (((1'b0 == ap_block_state7) & (1'b1 == ap_CS_fsm_state7))) begin
            layer4_out_16_preg <= grp_dense_latency_ap_fixed_33_13_5_3_0_ap_fixed_33_13_5_3_0_config4_2_s_fu_768_ap_return_0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        layer4_out_17_preg <= 33'd0;
    end else begin
        if (((1'b0 == ap_block_state7) & (1'b1 == ap_CS_fsm_state7))) begin
            layer4_out_17_preg <= grp_dense_latency_ap_fixed_33_13_5_3_0_ap_fixed_33_13_5_3_0_config4_2_s_fu_768_ap_return_1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        layer4_out_18_preg <= 33'd0;
    end else begin
        if (((1'b0 == ap_block_state7) & (1'b1 == ap_CS_fsm_state7))) begin
            layer4_out_18_preg <= grp_dense_latency_ap_fixed_33_13_5_3_0_ap_fixed_33_13_5_3_0_config4_2_s_fu_768_ap_return_2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        layer4_out_19_preg <= 33'd0;
    end else begin
        if (((1'b0 == ap_block_state7) & (1'b1 == ap_CS_fsm_state7))) begin
            layer4_out_19_preg <= grp_dense_latency_ap_fixed_33_13_5_3_0_ap_fixed_33_13_5_3_0_config4_2_s_fu_768_ap_return_3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        layer4_out_1_preg <= 33'd0;
    end else begin
        if (((1'b0 == ap_block_state3) & (1'b1 == ap_CS_fsm_state3))) begin
            layer4_out_1_preg <= grp_dense_latency_ap_fixed_33_13_5_3_0_ap_fixed_33_13_5_3_0_config4_2_s_fu_768_ap_return_1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        layer4_out_20_preg <= 33'd0;
    end else begin
        if (((1'b0 == ap_block_state8) & (1'b1 == ap_CS_fsm_state8))) begin
            layer4_out_20_preg <= grp_dense_latency_ap_fixed_33_13_5_3_0_ap_fixed_33_13_5_3_0_config4_2_s_fu_768_ap_return_0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        layer4_out_21_preg <= 33'd0;
    end else begin
        if (((1'b0 == ap_block_state8) & (1'b1 == ap_CS_fsm_state8))) begin
            layer4_out_21_preg <= grp_dense_latency_ap_fixed_33_13_5_3_0_ap_fixed_33_13_5_3_0_config4_2_s_fu_768_ap_return_1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        layer4_out_22_preg <= 33'd0;
    end else begin
        if (((1'b0 == ap_block_state8) & (1'b1 == ap_CS_fsm_state8))) begin
            layer4_out_22_preg <= grp_dense_latency_ap_fixed_33_13_5_3_0_ap_fixed_33_13_5_3_0_config4_2_s_fu_768_ap_return_2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        layer4_out_23_preg <= 33'd0;
    end else begin
        if (((1'b0 == ap_block_state8) & (1'b1 == ap_CS_fsm_state8))) begin
            layer4_out_23_preg <= grp_dense_latency_ap_fixed_33_13_5_3_0_ap_fixed_33_13_5_3_0_config4_2_s_fu_768_ap_return_3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        layer4_out_24_preg <= 33'd0;
    end else begin
        if (((1'b0 == ap_block_state9) & (1'b1 == ap_CS_fsm_state9))) begin
            layer4_out_24_preg <= grp_dense_latency_ap_fixed_33_13_5_3_0_ap_fixed_33_13_5_3_0_config4_2_s_fu_768_ap_return_0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        layer4_out_25_preg <= 33'd0;
    end else begin
        if (((1'b0 == ap_block_state9) & (1'b1 == ap_CS_fsm_state9))) begin
            layer4_out_25_preg <= grp_dense_latency_ap_fixed_33_13_5_3_0_ap_fixed_33_13_5_3_0_config4_2_s_fu_768_ap_return_1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        layer4_out_26_preg <= 33'd0;
    end else begin
        if (((1'b0 == ap_block_state9) & (1'b1 == ap_CS_fsm_state9))) begin
            layer4_out_26_preg <= grp_dense_latency_ap_fixed_33_13_5_3_0_ap_fixed_33_13_5_3_0_config4_2_s_fu_768_ap_return_2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        layer4_out_27_preg <= 33'd0;
    end else begin
        if (((1'b0 == ap_block_state9) & (1'b1 == ap_CS_fsm_state9))) begin
            layer4_out_27_preg <= grp_dense_latency_ap_fixed_33_13_5_3_0_ap_fixed_33_13_5_3_0_config4_2_s_fu_768_ap_return_3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        layer4_out_28_preg <= 33'd0;
    end else begin
        if (((1'b0 == ap_block_state10) & (1'b1 == ap_CS_fsm_state10))) begin
            layer4_out_28_preg <= grp_dense_latency_ap_fixed_33_13_5_3_0_ap_fixed_33_13_5_3_0_config4_2_s_fu_768_ap_return_0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        layer4_out_29_preg <= 33'd0;
    end else begin
        if (((1'b0 == ap_block_state10) & (1'b1 == ap_CS_fsm_state10))) begin
            layer4_out_29_preg <= grp_dense_latency_ap_fixed_33_13_5_3_0_ap_fixed_33_13_5_3_0_config4_2_s_fu_768_ap_return_1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        layer4_out_2_preg <= 33'd0;
    end else begin
        if (((1'b0 == ap_block_state3) & (1'b1 == ap_CS_fsm_state3))) begin
            layer4_out_2_preg <= grp_dense_latency_ap_fixed_33_13_5_3_0_ap_fixed_33_13_5_3_0_config4_2_s_fu_768_ap_return_2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        layer4_out_30_preg <= 33'd0;
    end else begin
        if (((1'b0 == ap_block_state10) & (1'b1 == ap_CS_fsm_state10))) begin
            layer4_out_30_preg <= grp_dense_latency_ap_fixed_33_13_5_3_0_ap_fixed_33_13_5_3_0_config4_2_s_fu_768_ap_return_2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        layer4_out_31_preg <= 33'd0;
    end else begin
        if (((1'b0 == ap_block_state10) & (1'b1 == ap_CS_fsm_state10))) begin
            layer4_out_31_preg <= grp_dense_latency_ap_fixed_33_13_5_3_0_ap_fixed_33_13_5_3_0_config4_2_s_fu_768_ap_return_3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        layer4_out_32_preg <= 33'd0;
    end else begin
        if (((1'b0 == ap_block_state11) & (1'b1 == ap_CS_fsm_state11))) begin
            layer4_out_32_preg <= grp_dense_latency_ap_fixed_33_13_5_3_0_ap_fixed_33_13_5_3_0_config4_2_s_fu_768_ap_return_0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        layer4_out_33_preg <= 33'd0;
    end else begin
        if (((1'b0 == ap_block_state11) & (1'b1 == ap_CS_fsm_state11))) begin
            layer4_out_33_preg <= grp_dense_latency_ap_fixed_33_13_5_3_0_ap_fixed_33_13_5_3_0_config4_2_s_fu_768_ap_return_1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        layer4_out_34_preg <= 33'd0;
    end else begin
        if (((1'b0 == ap_block_state11) & (1'b1 == ap_CS_fsm_state11))) begin
            layer4_out_34_preg <= grp_dense_latency_ap_fixed_33_13_5_3_0_ap_fixed_33_13_5_3_0_config4_2_s_fu_768_ap_return_2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        layer4_out_35_preg <= 33'd0;
    end else begin
        if (((1'b0 == ap_block_state11) & (1'b1 == ap_CS_fsm_state11))) begin
            layer4_out_35_preg <= grp_dense_latency_ap_fixed_33_13_5_3_0_ap_fixed_33_13_5_3_0_config4_2_s_fu_768_ap_return_3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        layer4_out_36_preg <= 33'd0;
    end else begin
        if (((1'b0 == ap_block_state12) & (1'b1 == ap_CS_fsm_state12))) begin
            layer4_out_36_preg <= grp_dense_latency_ap_fixed_33_13_5_3_0_ap_fixed_33_13_5_3_0_config4_2_s_fu_768_ap_return_0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        layer4_out_37_preg <= 33'd0;
    end else begin
        if (((1'b0 == ap_block_state12) & (1'b1 == ap_CS_fsm_state12))) begin
            layer4_out_37_preg <= grp_dense_latency_ap_fixed_33_13_5_3_0_ap_fixed_33_13_5_3_0_config4_2_s_fu_768_ap_return_1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        layer4_out_38_preg <= 33'd0;
    end else begin
        if (((1'b0 == ap_block_state12) & (1'b1 == ap_CS_fsm_state12))) begin
            layer4_out_38_preg <= grp_dense_latency_ap_fixed_33_13_5_3_0_ap_fixed_33_13_5_3_0_config4_2_s_fu_768_ap_return_2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        layer4_out_39_preg <= 33'd0;
    end else begin
        if (((1'b0 == ap_block_state12) & (1'b1 == ap_CS_fsm_state12))) begin
            layer4_out_39_preg <= grp_dense_latency_ap_fixed_33_13_5_3_0_ap_fixed_33_13_5_3_0_config4_2_s_fu_768_ap_return_3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        layer4_out_3_preg <= 33'd0;
    end else begin
        if (((1'b0 == ap_block_state3) & (1'b1 == ap_CS_fsm_state3))) begin
            layer4_out_3_preg <= grp_dense_latency_ap_fixed_33_13_5_3_0_ap_fixed_33_13_5_3_0_config4_2_s_fu_768_ap_return_3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        layer4_out_40_preg <= 33'd0;
    end else begin
        if (((1'b0 == ap_block_state13) & (1'b1 == ap_CS_fsm_state13))) begin
            layer4_out_40_preg <= grp_dense_latency_ap_fixed_33_13_5_3_0_ap_fixed_33_13_5_3_0_config4_2_s_fu_768_ap_return_0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        layer4_out_41_preg <= 33'd0;
    end else begin
        if (((1'b0 == ap_block_state13) & (1'b1 == ap_CS_fsm_state13))) begin
            layer4_out_41_preg <= grp_dense_latency_ap_fixed_33_13_5_3_0_ap_fixed_33_13_5_3_0_config4_2_s_fu_768_ap_return_1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        layer4_out_42_preg <= 33'd0;
    end else begin
        if (((1'b0 == ap_block_state13) & (1'b1 == ap_CS_fsm_state13))) begin
            layer4_out_42_preg <= grp_dense_latency_ap_fixed_33_13_5_3_0_ap_fixed_33_13_5_3_0_config4_2_s_fu_768_ap_return_2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        layer4_out_43_preg <= 33'd0;
    end else begin
        if (((1'b0 == ap_block_state13) & (1'b1 == ap_CS_fsm_state13))) begin
            layer4_out_43_preg <= grp_dense_latency_ap_fixed_33_13_5_3_0_ap_fixed_33_13_5_3_0_config4_2_s_fu_768_ap_return_3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        layer4_out_44_preg <= 33'd0;
    end else begin
        if (((1'b0 == ap_block_state14) & (1'b1 == ap_CS_fsm_state14))) begin
            layer4_out_44_preg <= grp_dense_latency_ap_fixed_33_13_5_3_0_ap_fixed_33_13_5_3_0_config4_2_s_fu_768_ap_return_0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        layer4_out_45_preg <= 33'd0;
    end else begin
        if (((1'b0 == ap_block_state14) & (1'b1 == ap_CS_fsm_state14))) begin
            layer4_out_45_preg <= grp_dense_latency_ap_fixed_33_13_5_3_0_ap_fixed_33_13_5_3_0_config4_2_s_fu_768_ap_return_1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        layer4_out_46_preg <= 33'd0;
    end else begin
        if (((1'b0 == ap_block_state14) & (1'b1 == ap_CS_fsm_state14))) begin
            layer4_out_46_preg <= grp_dense_latency_ap_fixed_33_13_5_3_0_ap_fixed_33_13_5_3_0_config4_2_s_fu_768_ap_return_2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        layer4_out_47_preg <= 33'd0;
    end else begin
        if (((1'b0 == ap_block_state14) & (1'b1 == ap_CS_fsm_state14))) begin
            layer4_out_47_preg <= grp_dense_latency_ap_fixed_33_13_5_3_0_ap_fixed_33_13_5_3_0_config4_2_s_fu_768_ap_return_3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        layer4_out_48_preg <= 33'd0;
    end else begin
        if (((1'b0 == ap_block_state15) & (1'b1 == ap_CS_fsm_state15))) begin
            layer4_out_48_preg <= grp_dense_latency_ap_fixed_33_13_5_3_0_ap_fixed_33_13_5_3_0_config4_2_s_fu_768_ap_return_0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        layer4_out_49_preg <= 33'd0;
    end else begin
        if (((1'b0 == ap_block_state15) & (1'b1 == ap_CS_fsm_state15))) begin
            layer4_out_49_preg <= grp_dense_latency_ap_fixed_33_13_5_3_0_ap_fixed_33_13_5_3_0_config4_2_s_fu_768_ap_return_1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        layer4_out_4_preg <= 33'd0;
    end else begin
        if (((1'b0 == ap_block_state4) & (1'b1 == ap_CS_fsm_state4))) begin
            layer4_out_4_preg <= grp_dense_latency_ap_fixed_33_13_5_3_0_ap_fixed_33_13_5_3_0_config4_2_s_fu_768_ap_return_0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        layer4_out_50_preg <= 33'd0;
    end else begin
        if (((1'b0 == ap_block_state15) & (1'b1 == ap_CS_fsm_state15))) begin
            layer4_out_50_preg <= grp_dense_latency_ap_fixed_33_13_5_3_0_ap_fixed_33_13_5_3_0_config4_2_s_fu_768_ap_return_2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        layer4_out_51_preg <= 33'd0;
    end else begin
        if (((1'b0 == ap_block_state15) & (1'b1 == ap_CS_fsm_state15))) begin
            layer4_out_51_preg <= grp_dense_latency_ap_fixed_33_13_5_3_0_ap_fixed_33_13_5_3_0_config4_2_s_fu_768_ap_return_3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        layer4_out_52_preg <= 33'd0;
    end else begin
        if (((1'b0 == ap_block_state16) & (1'b1 == ap_CS_fsm_state16))) begin
            layer4_out_52_preg <= grp_dense_latency_ap_fixed_33_13_5_3_0_ap_fixed_33_13_5_3_0_config4_2_s_fu_768_ap_return_0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        layer4_out_53_preg <= 33'd0;
    end else begin
        if (((1'b0 == ap_block_state16) & (1'b1 == ap_CS_fsm_state16))) begin
            layer4_out_53_preg <= grp_dense_latency_ap_fixed_33_13_5_3_0_ap_fixed_33_13_5_3_0_config4_2_s_fu_768_ap_return_1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        layer4_out_54_preg <= 33'd0;
    end else begin
        if (((1'b0 == ap_block_state16) & (1'b1 == ap_CS_fsm_state16))) begin
            layer4_out_54_preg <= grp_dense_latency_ap_fixed_33_13_5_3_0_ap_fixed_33_13_5_3_0_config4_2_s_fu_768_ap_return_2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        layer4_out_55_preg <= 33'd0;
    end else begin
        if (((1'b0 == ap_block_state16) & (1'b1 == ap_CS_fsm_state16))) begin
            layer4_out_55_preg <= grp_dense_latency_ap_fixed_33_13_5_3_0_ap_fixed_33_13_5_3_0_config4_2_s_fu_768_ap_return_3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        layer4_out_56_preg <= 33'd0;
    end else begin
        if (((1'b0 == ap_block_state17) & (1'b1 == ap_CS_fsm_state17))) begin
            layer4_out_56_preg <= grp_dense_latency_ap_fixed_33_13_5_3_0_ap_fixed_33_13_5_3_0_config4_2_s_fu_768_ap_return_0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        layer4_out_57_preg <= 33'd0;
    end else begin
        if (((1'b0 == ap_block_state17) & (1'b1 == ap_CS_fsm_state17))) begin
            layer4_out_57_preg <= grp_dense_latency_ap_fixed_33_13_5_3_0_ap_fixed_33_13_5_3_0_config4_2_s_fu_768_ap_return_1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        layer4_out_58_preg <= 33'd0;
    end else begin
        if (((1'b0 == ap_block_state17) & (1'b1 == ap_CS_fsm_state17))) begin
            layer4_out_58_preg <= grp_dense_latency_ap_fixed_33_13_5_3_0_ap_fixed_33_13_5_3_0_config4_2_s_fu_768_ap_return_2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        layer4_out_59_preg <= 33'd0;
    end else begin
        if (((1'b0 == ap_block_state17) & (1'b1 == ap_CS_fsm_state17))) begin
            layer4_out_59_preg <= grp_dense_latency_ap_fixed_33_13_5_3_0_ap_fixed_33_13_5_3_0_config4_2_s_fu_768_ap_return_3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        layer4_out_5_preg <= 33'd0;
    end else begin
        if (((1'b0 == ap_block_state4) & (1'b1 == ap_CS_fsm_state4))) begin
            layer4_out_5_preg <= grp_dense_latency_ap_fixed_33_13_5_3_0_ap_fixed_33_13_5_3_0_config4_2_s_fu_768_ap_return_1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        layer4_out_60_preg <= 33'd0;
    end else begin
        if (((1'b0 == ap_block_state18) & (1'b1 == ap_CS_fsm_state18))) begin
            layer4_out_60_preg <= grp_dense_latency_ap_fixed_33_13_5_3_0_ap_fixed_33_13_5_3_0_config4_2_s_fu_768_ap_return_0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        layer4_out_61_preg <= 33'd0;
    end else begin
        if (((1'b0 == ap_block_state18) & (1'b1 == ap_CS_fsm_state18))) begin
            layer4_out_61_preg <= grp_dense_latency_ap_fixed_33_13_5_3_0_ap_fixed_33_13_5_3_0_config4_2_s_fu_768_ap_return_1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        layer4_out_62_preg <= 33'd0;
    end else begin
        if (((1'b0 == ap_block_state18) & (1'b1 == ap_CS_fsm_state18))) begin
            layer4_out_62_preg <= grp_dense_latency_ap_fixed_33_13_5_3_0_ap_fixed_33_13_5_3_0_config4_2_s_fu_768_ap_return_2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        layer4_out_63_preg <= 33'd0;
    end else begin
        if (((1'b0 == ap_block_state18) & (1'b1 == ap_CS_fsm_state18))) begin
            layer4_out_63_preg <= grp_dense_latency_ap_fixed_33_13_5_3_0_ap_fixed_33_13_5_3_0_config4_2_s_fu_768_ap_return_3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        layer4_out_64_preg <= 33'd0;
    end else begin
        if (((1'b0 == ap_block_state19) & (1'b1 == ap_CS_fsm_state19))) begin
            layer4_out_64_preg <= grp_dense_latency_ap_fixed_33_13_5_3_0_ap_fixed_33_13_5_3_0_config4_2_s_fu_768_ap_return_0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        layer4_out_65_preg <= 33'd0;
    end else begin
        if (((1'b0 == ap_block_state19) & (1'b1 == ap_CS_fsm_state19))) begin
            layer4_out_65_preg <= grp_dense_latency_ap_fixed_33_13_5_3_0_ap_fixed_33_13_5_3_0_config4_2_s_fu_768_ap_return_1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        layer4_out_66_preg <= 33'd0;
    end else begin
        if (((1'b0 == ap_block_state19) & (1'b1 == ap_CS_fsm_state19))) begin
            layer4_out_66_preg <= grp_dense_latency_ap_fixed_33_13_5_3_0_ap_fixed_33_13_5_3_0_config4_2_s_fu_768_ap_return_2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        layer4_out_67_preg <= 33'd0;
    end else begin
        if (((1'b0 == ap_block_state19) & (1'b1 == ap_CS_fsm_state19))) begin
            layer4_out_67_preg <= grp_dense_latency_ap_fixed_33_13_5_3_0_ap_fixed_33_13_5_3_0_config4_2_s_fu_768_ap_return_3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        layer4_out_68_preg <= 33'd0;
    end else begin
        if (((1'b0 == ap_block_state20) & (1'b1 == ap_CS_fsm_state20))) begin
            layer4_out_68_preg <= grp_dense_latency_ap_fixed_33_13_5_3_0_ap_fixed_33_13_5_3_0_config4_2_s_fu_768_ap_return_0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        layer4_out_69_preg <= 33'd0;
    end else begin
        if (((1'b0 == ap_block_state20) & (1'b1 == ap_CS_fsm_state20))) begin
            layer4_out_69_preg <= grp_dense_latency_ap_fixed_33_13_5_3_0_ap_fixed_33_13_5_3_0_config4_2_s_fu_768_ap_return_1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        layer4_out_6_preg <= 33'd0;
    end else begin
        if (((1'b0 == ap_block_state4) & (1'b1 == ap_CS_fsm_state4))) begin
            layer4_out_6_preg <= grp_dense_latency_ap_fixed_33_13_5_3_0_ap_fixed_33_13_5_3_0_config4_2_s_fu_768_ap_return_2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        layer4_out_70_preg <= 33'd0;
    end else begin
        if (((1'b0 == ap_block_state20) & (1'b1 == ap_CS_fsm_state20))) begin
            layer4_out_70_preg <= grp_dense_latency_ap_fixed_33_13_5_3_0_ap_fixed_33_13_5_3_0_config4_2_s_fu_768_ap_return_2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        layer4_out_71_preg <= 33'd0;
    end else begin
        if (((1'b0 == ap_block_state20) & (1'b1 == ap_CS_fsm_state20))) begin
            layer4_out_71_preg <= grp_dense_latency_ap_fixed_33_13_5_3_0_ap_fixed_33_13_5_3_0_config4_2_s_fu_768_ap_return_3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        layer4_out_72_preg <= 33'd0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state21)) begin
            layer4_out_72_preg <= grp_dense_latency_ap_fixed_33_13_5_3_0_ap_fixed_33_13_5_3_0_config4_2_s_fu_768_ap_return_0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        layer4_out_73_preg <= 33'd0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state21)) begin
            layer4_out_73_preg <= grp_dense_latency_ap_fixed_33_13_5_3_0_ap_fixed_33_13_5_3_0_config4_2_s_fu_768_ap_return_1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        layer4_out_74_preg <= 33'd0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state21)) begin
            layer4_out_74_preg <= grp_dense_latency_ap_fixed_33_13_5_3_0_ap_fixed_33_13_5_3_0_config4_2_s_fu_768_ap_return_2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        layer4_out_75_preg <= 33'd0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state21)) begin
            layer4_out_75_preg <= grp_dense_latency_ap_fixed_33_13_5_3_0_ap_fixed_33_13_5_3_0_config4_2_s_fu_768_ap_return_3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        layer4_out_76_preg <= 33'd0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state22)) begin
            layer4_out_76_preg <= grp_dense_latency_ap_fixed_33_13_5_3_0_ap_fixed_33_13_5_3_0_config4_2_s_fu_768_ap_return_0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        layer4_out_77_preg <= 33'd0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state22)) begin
            layer4_out_77_preg <= grp_dense_latency_ap_fixed_33_13_5_3_0_ap_fixed_33_13_5_3_0_config4_2_s_fu_768_ap_return_1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        layer4_out_78_preg <= 33'd0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state22)) begin
            layer4_out_78_preg <= grp_dense_latency_ap_fixed_33_13_5_3_0_ap_fixed_33_13_5_3_0_config4_2_s_fu_768_ap_return_2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        layer4_out_79_preg <= 33'd0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state22)) begin
            layer4_out_79_preg <= grp_dense_latency_ap_fixed_33_13_5_3_0_ap_fixed_33_13_5_3_0_config4_2_s_fu_768_ap_return_3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        layer4_out_7_preg <= 33'd0;
    end else begin
        if (((1'b0 == ap_block_state4) & (1'b1 == ap_CS_fsm_state4))) begin
            layer4_out_7_preg <= grp_dense_latency_ap_fixed_33_13_5_3_0_ap_fixed_33_13_5_3_0_config4_2_s_fu_768_ap_return_3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        layer4_out_8_preg <= 33'd0;
    end else begin
        if (((1'b0 == ap_block_state5) & (1'b1 == ap_CS_fsm_state5))) begin
            layer4_out_8_preg <= grp_dense_latency_ap_fixed_33_13_5_3_0_ap_fixed_33_13_5_3_0_config4_2_s_fu_768_ap_return_0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        layer4_out_9_preg <= 33'd0;
    end else begin
        if (((1'b0 == ap_block_state5) & (1'b1 == ap_CS_fsm_state5))) begin
            layer4_out_9_preg <= grp_dense_latency_ap_fixed_33_13_5_3_0_ap_fixed_33_13_5_3_0_config4_2_s_fu_768_ap_return_1;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((((1'b0 == ap_block_state20) & (1'b1 == ap_CS_fsm_state20)) | ((1'b0 == ap_block_state19) & (1'b1 == ap_CS_fsm_state19)) | ((1'b0 == ap_block_state18) & (1'b1 == ap_CS_fsm_state18)) | ((1'b0 == ap_block_state17) & (1'b1 == ap_CS_fsm_state17)) | ((1'b0 == ap_block_state16) & (1'b1 == ap_CS_fsm_state16)) | ((1'b0 == ap_block_state15) & (1'b1 == ap_CS_fsm_state15)) | ((1'b0 == ap_block_state14) & (1'b1 == ap_CS_fsm_state14)) | ((1'b0 == ap_block_state13) & (1'b1 == ap_CS_fsm_state13)) | ((1'b0 == ap_block_state12) & (1'b1 == ap_CS_fsm_state12)) | ((1'b0 == ap_block_state11) & (1'b1 == ap_CS_fsm_state11)) | ((1'b0 == ap_block_state10) & (1'b1 == ap_CS_fsm_state10)) | ((1'b0 == ap_block_state9) & (1'b1 == ap_CS_fsm_state9)) | ((1'b0 == ap_block_state8) & (1'b1 == ap_CS_fsm_state8)) | ((1'b0 == ap_block_state7) & (1'b1 == ap_CS_fsm_state7)) | ((1'b0 == ap_block_state6) & (1'b1 == ap_CS_fsm_state6)) | ((1'b0 == ap_block_state5) & (1'b1 == ap_CS_fsm_state5)) | ((1'b0 == ap_block_state4) & (1'b1 == ap_CS_fsm_state4)) | 
    ((1'b0 == ap_block_state3) & (1'b1 == ap_CS_fsm_state3)) | ((1'b0 == ap_block_state2) & (1'b1 == ap_CS_fsm_state2)) | ((1'b0 == ap_block_state1) & (1'b1 == ap_CS_fsm_state1)))) begin
        reg_872 <= matr_out_0_0_dout;
        reg_877 <= matr_out_0_1_dout;
        reg_882 <= matr_out_1_0_dout;
        reg_887 <= matr_out_1_1_dout;
    end
end

always @ (*) begin
    if ((1'b1 == ap_block_state10)) begin
        ap_ST_fsm_state10_blk = 1'b1;
    end else begin
        ap_ST_fsm_state10_blk = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_block_state11)) begin
        ap_ST_fsm_state11_blk = 1'b1;
    end else begin
        ap_ST_fsm_state11_blk = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_block_state12)) begin
        ap_ST_fsm_state12_blk = 1'b1;
    end else begin
        ap_ST_fsm_state12_blk = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_block_state13)) begin
        ap_ST_fsm_state13_blk = 1'b1;
    end else begin
        ap_ST_fsm_state13_blk = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_block_state14)) begin
        ap_ST_fsm_state14_blk = 1'b1;
    end else begin
        ap_ST_fsm_state14_blk = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_block_state15)) begin
        ap_ST_fsm_state15_blk = 1'b1;
    end else begin
        ap_ST_fsm_state15_blk = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_block_state16)) begin
        ap_ST_fsm_state16_blk = 1'b1;
    end else begin
        ap_ST_fsm_state16_blk = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_block_state17)) begin
        ap_ST_fsm_state17_blk = 1'b1;
    end else begin
        ap_ST_fsm_state17_blk = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_block_state18)) begin
        ap_ST_fsm_state18_blk = 1'b1;
    end else begin
        ap_ST_fsm_state18_blk = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_block_state19)) begin
        ap_ST_fsm_state19_blk = 1'b1;
    end else begin
        ap_ST_fsm_state19_blk = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_block_state1)) begin
        ap_ST_fsm_state1_blk = 1'b1;
    end else begin
        ap_ST_fsm_state1_blk = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_block_state20)) begin
        ap_ST_fsm_state20_blk = 1'b1;
    end else begin
        ap_ST_fsm_state20_blk = 1'b0;
    end
end

assign ap_ST_fsm_state21_blk = 1'b0;

assign ap_ST_fsm_state22_blk = 1'b0;

always @ (*) begin
    if ((1'b1 == ap_block_state2)) begin
        ap_ST_fsm_state2_blk = 1'b1;
    end else begin
        ap_ST_fsm_state2_blk = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_block_state3)) begin
        ap_ST_fsm_state3_blk = 1'b1;
    end else begin
        ap_ST_fsm_state3_blk = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_block_state4)) begin
        ap_ST_fsm_state4_blk = 1'b1;
    end else begin
        ap_ST_fsm_state4_blk = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_block_state5)) begin
        ap_ST_fsm_state5_blk = 1'b1;
    end else begin
        ap_ST_fsm_state5_blk = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_block_state6)) begin
        ap_ST_fsm_state6_blk = 1'b1;
    end else begin
        ap_ST_fsm_state6_blk = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_block_state7)) begin
        ap_ST_fsm_state7_blk = 1'b1;
    end else begin
        ap_ST_fsm_state7_blk = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_block_state8)) begin
        ap_ST_fsm_state8_blk = 1'b1;
    end else begin
        ap_ST_fsm_state8_blk = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_block_state9)) begin
        ap_ST_fsm_state9_blk = 1'b1;
    end else begin
        ap_ST_fsm_state9_blk = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state22)) begin
        ap_done = 1'b1;
    end else begin
        ap_done = ap_done_reg;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state22)) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state1) | ((1'b1 == ap_block_state20_ignore_call169) & (1'b1 == ap_CS_fsm_state20)) | ((1'b1 == ap_block_state19_ignore_call164) & (1'b1 == ap_CS_fsm_state19)) | ((1'b1 == ap_block_state18_ignore_call159) & (1'b1 == ap_CS_fsm_state18)) | ((1'b1 == ap_block_state17_ignore_call154) & (1'b1 == ap_CS_fsm_state17)) | ((1'b1 == ap_block_state16_ignore_call149) & (1'b1 == ap_CS_fsm_state16)) | ((1'b1 == ap_block_state15_ignore_call144) & (1'b1 == ap_CS_fsm_state15)) | ((1'b1 == ap_block_state14_ignore_call139) & (1'b1 == ap_CS_fsm_state14)) | ((1'b1 == ap_block_state13_ignore_call134) & (1'b1 == ap_CS_fsm_state13)) | ((1'b1 == ap_block_state12_ignore_call129) & (1'b1 == ap_CS_fsm_state12)) | ((1'b1 == ap_block_state11_ignore_call124) & (1'b1 == ap_CS_fsm_state11)) | ((1'b1 == ap_block_state10_ignore_call119) & (1'b1 == ap_CS_fsm_state10)) | ((1'b1 == ap_block_state9_ignore_call114) & (1'b1 == ap_CS_fsm_state9)) | ((1'b1 == ap_block_state8_ignore_call109) & (1'b1 == ap_CS_fsm_state8)) | ((1'b1 == ap_block_state7_ignore_call104) 
    & (1'b1 == ap_CS_fsm_state7)) | ((1'b1 == ap_block_state6_ignore_call99) & (1'b1 == ap_CS_fsm_state6)) | ((1'b1 == ap_block_state5_ignore_call94) & (1'b1 == ap_CS_fsm_state5)) | ((1'b1 == ap_block_state4_ignore_call89) & (1'b1 == ap_CS_fsm_state4)) | ((1'b1 == ap_block_state3_ignore_call84) & (1'b1 == ap_CS_fsm_state3)) | ((1'b1 == ap_block_state2_ignore_call84) & (1'b1 == ap_CS_fsm_state2)))) begin
        grp_dense_latency_ap_fixed_33_13_5_3_0_ap_fixed_33_13_5_3_0_config4_2_s_fu_768_ap_ce = 1'b0;
    end else begin
        grp_dense_latency_ap_fixed_33_13_5_3_0_ap_fixed_33_13_5_3_0_config4_2_s_fu_768_ap_ce = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_state3) & (1'b1 == ap_CS_fsm_state3))) begin
        layer4_out_0 = grp_dense_latency_ap_fixed_33_13_5_3_0_ap_fixed_33_13_5_3_0_config4_2_s_fu_768_ap_return_0;
    end else begin
        layer4_out_0 = layer4_out_0_preg;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_state3) & (1'b1 == ap_CS_fsm_state3))) begin
        layer4_out_0_ap_vld = 1'b1;
    end else begin
        layer4_out_0_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_state3) & (1'b1 == ap_CS_fsm_state3))) begin
        layer4_out_1 = grp_dense_latency_ap_fixed_33_13_5_3_0_ap_fixed_33_13_5_3_0_config4_2_s_fu_768_ap_return_1;
    end else begin
        layer4_out_1 = layer4_out_1_preg;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_state5) & (1'b1 == ap_CS_fsm_state5))) begin
        layer4_out_10 = grp_dense_latency_ap_fixed_33_13_5_3_0_ap_fixed_33_13_5_3_0_config4_2_s_fu_768_ap_return_2;
    end else begin
        layer4_out_10 = layer4_out_10_preg;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_state5) & (1'b1 == ap_CS_fsm_state5))) begin
        layer4_out_10_ap_vld = 1'b1;
    end else begin
        layer4_out_10_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_state5) & (1'b1 == ap_CS_fsm_state5))) begin
        layer4_out_11 = grp_dense_latency_ap_fixed_33_13_5_3_0_ap_fixed_33_13_5_3_0_config4_2_s_fu_768_ap_return_3;
    end else begin
        layer4_out_11 = layer4_out_11_preg;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_state5) & (1'b1 == ap_CS_fsm_state5))) begin
        layer4_out_11_ap_vld = 1'b1;
    end else begin
        layer4_out_11_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_state6) & (1'b1 == ap_CS_fsm_state6))) begin
        layer4_out_12 = grp_dense_latency_ap_fixed_33_13_5_3_0_ap_fixed_33_13_5_3_0_config4_2_s_fu_768_ap_return_0;
    end else begin
        layer4_out_12 = layer4_out_12_preg;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_state6) & (1'b1 == ap_CS_fsm_state6))) begin
        layer4_out_12_ap_vld = 1'b1;
    end else begin
        layer4_out_12_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_state6) & (1'b1 == ap_CS_fsm_state6))) begin
        layer4_out_13 = grp_dense_latency_ap_fixed_33_13_5_3_0_ap_fixed_33_13_5_3_0_config4_2_s_fu_768_ap_return_1;
    end else begin
        layer4_out_13 = layer4_out_13_preg;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_state6) & (1'b1 == ap_CS_fsm_state6))) begin
        layer4_out_13_ap_vld = 1'b1;
    end else begin
        layer4_out_13_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_state6) & (1'b1 == ap_CS_fsm_state6))) begin
        layer4_out_14 = grp_dense_latency_ap_fixed_33_13_5_3_0_ap_fixed_33_13_5_3_0_config4_2_s_fu_768_ap_return_2;
    end else begin
        layer4_out_14 = layer4_out_14_preg;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_state6) & (1'b1 == ap_CS_fsm_state6))) begin
        layer4_out_14_ap_vld = 1'b1;
    end else begin
        layer4_out_14_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_state6) & (1'b1 == ap_CS_fsm_state6))) begin
        layer4_out_15 = grp_dense_latency_ap_fixed_33_13_5_3_0_ap_fixed_33_13_5_3_0_config4_2_s_fu_768_ap_return_3;
    end else begin
        layer4_out_15 = layer4_out_15_preg;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_state6) & (1'b1 == ap_CS_fsm_state6))) begin
        layer4_out_15_ap_vld = 1'b1;
    end else begin
        layer4_out_15_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_state7) & (1'b1 == ap_CS_fsm_state7))) begin
        layer4_out_16 = grp_dense_latency_ap_fixed_33_13_5_3_0_ap_fixed_33_13_5_3_0_config4_2_s_fu_768_ap_return_0;
    end else begin
        layer4_out_16 = layer4_out_16_preg;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_state7) & (1'b1 == ap_CS_fsm_state7))) begin
        layer4_out_16_ap_vld = 1'b1;
    end else begin
        layer4_out_16_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_state7) & (1'b1 == ap_CS_fsm_state7))) begin
        layer4_out_17 = grp_dense_latency_ap_fixed_33_13_5_3_0_ap_fixed_33_13_5_3_0_config4_2_s_fu_768_ap_return_1;
    end else begin
        layer4_out_17 = layer4_out_17_preg;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_state7) & (1'b1 == ap_CS_fsm_state7))) begin
        layer4_out_17_ap_vld = 1'b1;
    end else begin
        layer4_out_17_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_state7) & (1'b1 == ap_CS_fsm_state7))) begin
        layer4_out_18 = grp_dense_latency_ap_fixed_33_13_5_3_0_ap_fixed_33_13_5_3_0_config4_2_s_fu_768_ap_return_2;
    end else begin
        layer4_out_18 = layer4_out_18_preg;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_state7) & (1'b1 == ap_CS_fsm_state7))) begin
        layer4_out_18_ap_vld = 1'b1;
    end else begin
        layer4_out_18_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_state7) & (1'b1 == ap_CS_fsm_state7))) begin
        layer4_out_19 = grp_dense_latency_ap_fixed_33_13_5_3_0_ap_fixed_33_13_5_3_0_config4_2_s_fu_768_ap_return_3;
    end else begin
        layer4_out_19 = layer4_out_19_preg;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_state7) & (1'b1 == ap_CS_fsm_state7))) begin
        layer4_out_19_ap_vld = 1'b1;
    end else begin
        layer4_out_19_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_state3) & (1'b1 == ap_CS_fsm_state3))) begin
        layer4_out_1_ap_vld = 1'b1;
    end else begin
        layer4_out_1_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_state3) & (1'b1 == ap_CS_fsm_state3))) begin
        layer4_out_2 = grp_dense_latency_ap_fixed_33_13_5_3_0_ap_fixed_33_13_5_3_0_config4_2_s_fu_768_ap_return_2;
    end else begin
        layer4_out_2 = layer4_out_2_preg;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_state8) & (1'b1 == ap_CS_fsm_state8))) begin
        layer4_out_20 = grp_dense_latency_ap_fixed_33_13_5_3_0_ap_fixed_33_13_5_3_0_config4_2_s_fu_768_ap_return_0;
    end else begin
        layer4_out_20 = layer4_out_20_preg;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_state8) & (1'b1 == ap_CS_fsm_state8))) begin
        layer4_out_20_ap_vld = 1'b1;
    end else begin
        layer4_out_20_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_state8) & (1'b1 == ap_CS_fsm_state8))) begin
        layer4_out_21 = grp_dense_latency_ap_fixed_33_13_5_3_0_ap_fixed_33_13_5_3_0_config4_2_s_fu_768_ap_return_1;
    end else begin
        layer4_out_21 = layer4_out_21_preg;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_state8) & (1'b1 == ap_CS_fsm_state8))) begin
        layer4_out_21_ap_vld = 1'b1;
    end else begin
        layer4_out_21_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_state8) & (1'b1 == ap_CS_fsm_state8))) begin
        layer4_out_22 = grp_dense_latency_ap_fixed_33_13_5_3_0_ap_fixed_33_13_5_3_0_config4_2_s_fu_768_ap_return_2;
    end else begin
        layer4_out_22 = layer4_out_22_preg;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_state8) & (1'b1 == ap_CS_fsm_state8))) begin
        layer4_out_22_ap_vld = 1'b1;
    end else begin
        layer4_out_22_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_state8) & (1'b1 == ap_CS_fsm_state8))) begin
        layer4_out_23 = grp_dense_latency_ap_fixed_33_13_5_3_0_ap_fixed_33_13_5_3_0_config4_2_s_fu_768_ap_return_3;
    end else begin
        layer4_out_23 = layer4_out_23_preg;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_state8) & (1'b1 == ap_CS_fsm_state8))) begin
        layer4_out_23_ap_vld = 1'b1;
    end else begin
        layer4_out_23_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_state9) & (1'b1 == ap_CS_fsm_state9))) begin
        layer4_out_24 = grp_dense_latency_ap_fixed_33_13_5_3_0_ap_fixed_33_13_5_3_0_config4_2_s_fu_768_ap_return_0;
    end else begin
        layer4_out_24 = layer4_out_24_preg;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_state9) & (1'b1 == ap_CS_fsm_state9))) begin
        layer4_out_24_ap_vld = 1'b1;
    end else begin
        layer4_out_24_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_state9) & (1'b1 == ap_CS_fsm_state9))) begin
        layer4_out_25 = grp_dense_latency_ap_fixed_33_13_5_3_0_ap_fixed_33_13_5_3_0_config4_2_s_fu_768_ap_return_1;
    end else begin
        layer4_out_25 = layer4_out_25_preg;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_state9) & (1'b1 == ap_CS_fsm_state9))) begin
        layer4_out_25_ap_vld = 1'b1;
    end else begin
        layer4_out_25_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_state9) & (1'b1 == ap_CS_fsm_state9))) begin
        layer4_out_26 = grp_dense_latency_ap_fixed_33_13_5_3_0_ap_fixed_33_13_5_3_0_config4_2_s_fu_768_ap_return_2;
    end else begin
        layer4_out_26 = layer4_out_26_preg;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_state9) & (1'b1 == ap_CS_fsm_state9))) begin
        layer4_out_26_ap_vld = 1'b1;
    end else begin
        layer4_out_26_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_state9) & (1'b1 == ap_CS_fsm_state9))) begin
        layer4_out_27 = grp_dense_latency_ap_fixed_33_13_5_3_0_ap_fixed_33_13_5_3_0_config4_2_s_fu_768_ap_return_3;
    end else begin
        layer4_out_27 = layer4_out_27_preg;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_state9) & (1'b1 == ap_CS_fsm_state9))) begin
        layer4_out_27_ap_vld = 1'b1;
    end else begin
        layer4_out_27_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_state10) & (1'b1 == ap_CS_fsm_state10))) begin
        layer4_out_28 = grp_dense_latency_ap_fixed_33_13_5_3_0_ap_fixed_33_13_5_3_0_config4_2_s_fu_768_ap_return_0;
    end else begin
        layer4_out_28 = layer4_out_28_preg;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_state10) & (1'b1 == ap_CS_fsm_state10))) begin
        layer4_out_28_ap_vld = 1'b1;
    end else begin
        layer4_out_28_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_state10) & (1'b1 == ap_CS_fsm_state10))) begin
        layer4_out_29 = grp_dense_latency_ap_fixed_33_13_5_3_0_ap_fixed_33_13_5_3_0_config4_2_s_fu_768_ap_return_1;
    end else begin
        layer4_out_29 = layer4_out_29_preg;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_state10) & (1'b1 == ap_CS_fsm_state10))) begin
        layer4_out_29_ap_vld = 1'b1;
    end else begin
        layer4_out_29_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_state3) & (1'b1 == ap_CS_fsm_state3))) begin
        layer4_out_2_ap_vld = 1'b1;
    end else begin
        layer4_out_2_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_state3) & (1'b1 == ap_CS_fsm_state3))) begin
        layer4_out_3 = grp_dense_latency_ap_fixed_33_13_5_3_0_ap_fixed_33_13_5_3_0_config4_2_s_fu_768_ap_return_3;
    end else begin
        layer4_out_3 = layer4_out_3_preg;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_state10) & (1'b1 == ap_CS_fsm_state10))) begin
        layer4_out_30 = grp_dense_latency_ap_fixed_33_13_5_3_0_ap_fixed_33_13_5_3_0_config4_2_s_fu_768_ap_return_2;
    end else begin
        layer4_out_30 = layer4_out_30_preg;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_state10) & (1'b1 == ap_CS_fsm_state10))) begin
        layer4_out_30_ap_vld = 1'b1;
    end else begin
        layer4_out_30_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_state10) & (1'b1 == ap_CS_fsm_state10))) begin
        layer4_out_31 = grp_dense_latency_ap_fixed_33_13_5_3_0_ap_fixed_33_13_5_3_0_config4_2_s_fu_768_ap_return_3;
    end else begin
        layer4_out_31 = layer4_out_31_preg;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_state10) & (1'b1 == ap_CS_fsm_state10))) begin
        layer4_out_31_ap_vld = 1'b1;
    end else begin
        layer4_out_31_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_state11) & (1'b1 == ap_CS_fsm_state11))) begin
        layer4_out_32 = grp_dense_latency_ap_fixed_33_13_5_3_0_ap_fixed_33_13_5_3_0_config4_2_s_fu_768_ap_return_0;
    end else begin
        layer4_out_32 = layer4_out_32_preg;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_state11) & (1'b1 == ap_CS_fsm_state11))) begin
        layer4_out_32_ap_vld = 1'b1;
    end else begin
        layer4_out_32_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_state11) & (1'b1 == ap_CS_fsm_state11))) begin
        layer4_out_33 = grp_dense_latency_ap_fixed_33_13_5_3_0_ap_fixed_33_13_5_3_0_config4_2_s_fu_768_ap_return_1;
    end else begin
        layer4_out_33 = layer4_out_33_preg;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_state11) & (1'b1 == ap_CS_fsm_state11))) begin
        layer4_out_33_ap_vld = 1'b1;
    end else begin
        layer4_out_33_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_state11) & (1'b1 == ap_CS_fsm_state11))) begin
        layer4_out_34 = grp_dense_latency_ap_fixed_33_13_5_3_0_ap_fixed_33_13_5_3_0_config4_2_s_fu_768_ap_return_2;
    end else begin
        layer4_out_34 = layer4_out_34_preg;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_state11) & (1'b1 == ap_CS_fsm_state11))) begin
        layer4_out_34_ap_vld = 1'b1;
    end else begin
        layer4_out_34_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_state11) & (1'b1 == ap_CS_fsm_state11))) begin
        layer4_out_35 = grp_dense_latency_ap_fixed_33_13_5_3_0_ap_fixed_33_13_5_3_0_config4_2_s_fu_768_ap_return_3;
    end else begin
        layer4_out_35 = layer4_out_35_preg;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_state11) & (1'b1 == ap_CS_fsm_state11))) begin
        layer4_out_35_ap_vld = 1'b1;
    end else begin
        layer4_out_35_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_state12) & (1'b1 == ap_CS_fsm_state12))) begin
        layer4_out_36 = grp_dense_latency_ap_fixed_33_13_5_3_0_ap_fixed_33_13_5_3_0_config4_2_s_fu_768_ap_return_0;
    end else begin
        layer4_out_36 = layer4_out_36_preg;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_state12) & (1'b1 == ap_CS_fsm_state12))) begin
        layer4_out_36_ap_vld = 1'b1;
    end else begin
        layer4_out_36_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_state12) & (1'b1 == ap_CS_fsm_state12))) begin
        layer4_out_37 = grp_dense_latency_ap_fixed_33_13_5_3_0_ap_fixed_33_13_5_3_0_config4_2_s_fu_768_ap_return_1;
    end else begin
        layer4_out_37 = layer4_out_37_preg;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_state12) & (1'b1 == ap_CS_fsm_state12))) begin
        layer4_out_37_ap_vld = 1'b1;
    end else begin
        layer4_out_37_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_state12) & (1'b1 == ap_CS_fsm_state12))) begin
        layer4_out_38 = grp_dense_latency_ap_fixed_33_13_5_3_0_ap_fixed_33_13_5_3_0_config4_2_s_fu_768_ap_return_2;
    end else begin
        layer4_out_38 = layer4_out_38_preg;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_state12) & (1'b1 == ap_CS_fsm_state12))) begin
        layer4_out_38_ap_vld = 1'b1;
    end else begin
        layer4_out_38_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_state12) & (1'b1 == ap_CS_fsm_state12))) begin
        layer4_out_39 = grp_dense_latency_ap_fixed_33_13_5_3_0_ap_fixed_33_13_5_3_0_config4_2_s_fu_768_ap_return_3;
    end else begin
        layer4_out_39 = layer4_out_39_preg;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_state12) & (1'b1 == ap_CS_fsm_state12))) begin
        layer4_out_39_ap_vld = 1'b1;
    end else begin
        layer4_out_39_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_state3) & (1'b1 == ap_CS_fsm_state3))) begin
        layer4_out_3_ap_vld = 1'b1;
    end else begin
        layer4_out_3_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_state4) & (1'b1 == ap_CS_fsm_state4))) begin
        layer4_out_4 = grp_dense_latency_ap_fixed_33_13_5_3_0_ap_fixed_33_13_5_3_0_config4_2_s_fu_768_ap_return_0;
    end else begin
        layer4_out_4 = layer4_out_4_preg;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_state13) & (1'b1 == ap_CS_fsm_state13))) begin
        layer4_out_40 = grp_dense_latency_ap_fixed_33_13_5_3_0_ap_fixed_33_13_5_3_0_config4_2_s_fu_768_ap_return_0;
    end else begin
        layer4_out_40 = layer4_out_40_preg;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_state13) & (1'b1 == ap_CS_fsm_state13))) begin
        layer4_out_40_ap_vld = 1'b1;
    end else begin
        layer4_out_40_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_state13) & (1'b1 == ap_CS_fsm_state13))) begin
        layer4_out_41 = grp_dense_latency_ap_fixed_33_13_5_3_0_ap_fixed_33_13_5_3_0_config4_2_s_fu_768_ap_return_1;
    end else begin
        layer4_out_41 = layer4_out_41_preg;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_state13) & (1'b1 == ap_CS_fsm_state13))) begin
        layer4_out_41_ap_vld = 1'b1;
    end else begin
        layer4_out_41_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_state13) & (1'b1 == ap_CS_fsm_state13))) begin
        layer4_out_42 = grp_dense_latency_ap_fixed_33_13_5_3_0_ap_fixed_33_13_5_3_0_config4_2_s_fu_768_ap_return_2;
    end else begin
        layer4_out_42 = layer4_out_42_preg;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_state13) & (1'b1 == ap_CS_fsm_state13))) begin
        layer4_out_42_ap_vld = 1'b1;
    end else begin
        layer4_out_42_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_state13) & (1'b1 == ap_CS_fsm_state13))) begin
        layer4_out_43 = grp_dense_latency_ap_fixed_33_13_5_3_0_ap_fixed_33_13_5_3_0_config4_2_s_fu_768_ap_return_3;
    end else begin
        layer4_out_43 = layer4_out_43_preg;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_state13) & (1'b1 == ap_CS_fsm_state13))) begin
        layer4_out_43_ap_vld = 1'b1;
    end else begin
        layer4_out_43_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_state14) & (1'b1 == ap_CS_fsm_state14))) begin
        layer4_out_44 = grp_dense_latency_ap_fixed_33_13_5_3_0_ap_fixed_33_13_5_3_0_config4_2_s_fu_768_ap_return_0;
    end else begin
        layer4_out_44 = layer4_out_44_preg;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_state14) & (1'b1 == ap_CS_fsm_state14))) begin
        layer4_out_44_ap_vld = 1'b1;
    end else begin
        layer4_out_44_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_state14) & (1'b1 == ap_CS_fsm_state14))) begin
        layer4_out_45 = grp_dense_latency_ap_fixed_33_13_5_3_0_ap_fixed_33_13_5_3_0_config4_2_s_fu_768_ap_return_1;
    end else begin
        layer4_out_45 = layer4_out_45_preg;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_state14) & (1'b1 == ap_CS_fsm_state14))) begin
        layer4_out_45_ap_vld = 1'b1;
    end else begin
        layer4_out_45_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_state14) & (1'b1 == ap_CS_fsm_state14))) begin
        layer4_out_46 = grp_dense_latency_ap_fixed_33_13_5_3_0_ap_fixed_33_13_5_3_0_config4_2_s_fu_768_ap_return_2;
    end else begin
        layer4_out_46 = layer4_out_46_preg;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_state14) & (1'b1 == ap_CS_fsm_state14))) begin
        layer4_out_46_ap_vld = 1'b1;
    end else begin
        layer4_out_46_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_state14) & (1'b1 == ap_CS_fsm_state14))) begin
        layer4_out_47 = grp_dense_latency_ap_fixed_33_13_5_3_0_ap_fixed_33_13_5_3_0_config4_2_s_fu_768_ap_return_3;
    end else begin
        layer4_out_47 = layer4_out_47_preg;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_state14) & (1'b1 == ap_CS_fsm_state14))) begin
        layer4_out_47_ap_vld = 1'b1;
    end else begin
        layer4_out_47_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_state15) & (1'b1 == ap_CS_fsm_state15))) begin
        layer4_out_48 = grp_dense_latency_ap_fixed_33_13_5_3_0_ap_fixed_33_13_5_3_0_config4_2_s_fu_768_ap_return_0;
    end else begin
        layer4_out_48 = layer4_out_48_preg;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_state15) & (1'b1 == ap_CS_fsm_state15))) begin
        layer4_out_48_ap_vld = 1'b1;
    end else begin
        layer4_out_48_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_state15) & (1'b1 == ap_CS_fsm_state15))) begin
        layer4_out_49 = grp_dense_latency_ap_fixed_33_13_5_3_0_ap_fixed_33_13_5_3_0_config4_2_s_fu_768_ap_return_1;
    end else begin
        layer4_out_49 = layer4_out_49_preg;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_state15) & (1'b1 == ap_CS_fsm_state15))) begin
        layer4_out_49_ap_vld = 1'b1;
    end else begin
        layer4_out_49_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_state4) & (1'b1 == ap_CS_fsm_state4))) begin
        layer4_out_4_ap_vld = 1'b1;
    end else begin
        layer4_out_4_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_state4) & (1'b1 == ap_CS_fsm_state4))) begin
        layer4_out_5 = grp_dense_latency_ap_fixed_33_13_5_3_0_ap_fixed_33_13_5_3_0_config4_2_s_fu_768_ap_return_1;
    end else begin
        layer4_out_5 = layer4_out_5_preg;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_state15) & (1'b1 == ap_CS_fsm_state15))) begin
        layer4_out_50 = grp_dense_latency_ap_fixed_33_13_5_3_0_ap_fixed_33_13_5_3_0_config4_2_s_fu_768_ap_return_2;
    end else begin
        layer4_out_50 = layer4_out_50_preg;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_state15) & (1'b1 == ap_CS_fsm_state15))) begin
        layer4_out_50_ap_vld = 1'b1;
    end else begin
        layer4_out_50_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_state15) & (1'b1 == ap_CS_fsm_state15))) begin
        layer4_out_51 = grp_dense_latency_ap_fixed_33_13_5_3_0_ap_fixed_33_13_5_3_0_config4_2_s_fu_768_ap_return_3;
    end else begin
        layer4_out_51 = layer4_out_51_preg;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_state15) & (1'b1 == ap_CS_fsm_state15))) begin
        layer4_out_51_ap_vld = 1'b1;
    end else begin
        layer4_out_51_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_state16) & (1'b1 == ap_CS_fsm_state16))) begin
        layer4_out_52 = grp_dense_latency_ap_fixed_33_13_5_3_0_ap_fixed_33_13_5_3_0_config4_2_s_fu_768_ap_return_0;
    end else begin
        layer4_out_52 = layer4_out_52_preg;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_state16) & (1'b1 == ap_CS_fsm_state16))) begin
        layer4_out_52_ap_vld = 1'b1;
    end else begin
        layer4_out_52_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_state16) & (1'b1 == ap_CS_fsm_state16))) begin
        layer4_out_53 = grp_dense_latency_ap_fixed_33_13_5_3_0_ap_fixed_33_13_5_3_0_config4_2_s_fu_768_ap_return_1;
    end else begin
        layer4_out_53 = layer4_out_53_preg;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_state16) & (1'b1 == ap_CS_fsm_state16))) begin
        layer4_out_53_ap_vld = 1'b1;
    end else begin
        layer4_out_53_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_state16) & (1'b1 == ap_CS_fsm_state16))) begin
        layer4_out_54 = grp_dense_latency_ap_fixed_33_13_5_3_0_ap_fixed_33_13_5_3_0_config4_2_s_fu_768_ap_return_2;
    end else begin
        layer4_out_54 = layer4_out_54_preg;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_state16) & (1'b1 == ap_CS_fsm_state16))) begin
        layer4_out_54_ap_vld = 1'b1;
    end else begin
        layer4_out_54_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_state16) & (1'b1 == ap_CS_fsm_state16))) begin
        layer4_out_55 = grp_dense_latency_ap_fixed_33_13_5_3_0_ap_fixed_33_13_5_3_0_config4_2_s_fu_768_ap_return_3;
    end else begin
        layer4_out_55 = layer4_out_55_preg;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_state16) & (1'b1 == ap_CS_fsm_state16))) begin
        layer4_out_55_ap_vld = 1'b1;
    end else begin
        layer4_out_55_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_state17) & (1'b1 == ap_CS_fsm_state17))) begin
        layer4_out_56 = grp_dense_latency_ap_fixed_33_13_5_3_0_ap_fixed_33_13_5_3_0_config4_2_s_fu_768_ap_return_0;
    end else begin
        layer4_out_56 = layer4_out_56_preg;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_state17) & (1'b1 == ap_CS_fsm_state17))) begin
        layer4_out_56_ap_vld = 1'b1;
    end else begin
        layer4_out_56_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_state17) & (1'b1 == ap_CS_fsm_state17))) begin
        layer4_out_57 = grp_dense_latency_ap_fixed_33_13_5_3_0_ap_fixed_33_13_5_3_0_config4_2_s_fu_768_ap_return_1;
    end else begin
        layer4_out_57 = layer4_out_57_preg;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_state17) & (1'b1 == ap_CS_fsm_state17))) begin
        layer4_out_57_ap_vld = 1'b1;
    end else begin
        layer4_out_57_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_state17) & (1'b1 == ap_CS_fsm_state17))) begin
        layer4_out_58 = grp_dense_latency_ap_fixed_33_13_5_3_0_ap_fixed_33_13_5_3_0_config4_2_s_fu_768_ap_return_2;
    end else begin
        layer4_out_58 = layer4_out_58_preg;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_state17) & (1'b1 == ap_CS_fsm_state17))) begin
        layer4_out_58_ap_vld = 1'b1;
    end else begin
        layer4_out_58_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_state17) & (1'b1 == ap_CS_fsm_state17))) begin
        layer4_out_59 = grp_dense_latency_ap_fixed_33_13_5_3_0_ap_fixed_33_13_5_3_0_config4_2_s_fu_768_ap_return_3;
    end else begin
        layer4_out_59 = layer4_out_59_preg;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_state17) & (1'b1 == ap_CS_fsm_state17))) begin
        layer4_out_59_ap_vld = 1'b1;
    end else begin
        layer4_out_59_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_state4) & (1'b1 == ap_CS_fsm_state4))) begin
        layer4_out_5_ap_vld = 1'b1;
    end else begin
        layer4_out_5_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_state4) & (1'b1 == ap_CS_fsm_state4))) begin
        layer4_out_6 = grp_dense_latency_ap_fixed_33_13_5_3_0_ap_fixed_33_13_5_3_0_config4_2_s_fu_768_ap_return_2;
    end else begin
        layer4_out_6 = layer4_out_6_preg;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_state18) & (1'b1 == ap_CS_fsm_state18))) begin
        layer4_out_60 = grp_dense_latency_ap_fixed_33_13_5_3_0_ap_fixed_33_13_5_3_0_config4_2_s_fu_768_ap_return_0;
    end else begin
        layer4_out_60 = layer4_out_60_preg;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_state18) & (1'b1 == ap_CS_fsm_state18))) begin
        layer4_out_60_ap_vld = 1'b1;
    end else begin
        layer4_out_60_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_state18) & (1'b1 == ap_CS_fsm_state18))) begin
        layer4_out_61 = grp_dense_latency_ap_fixed_33_13_5_3_0_ap_fixed_33_13_5_3_0_config4_2_s_fu_768_ap_return_1;
    end else begin
        layer4_out_61 = layer4_out_61_preg;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_state18) & (1'b1 == ap_CS_fsm_state18))) begin
        layer4_out_61_ap_vld = 1'b1;
    end else begin
        layer4_out_61_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_state18) & (1'b1 == ap_CS_fsm_state18))) begin
        layer4_out_62 = grp_dense_latency_ap_fixed_33_13_5_3_0_ap_fixed_33_13_5_3_0_config4_2_s_fu_768_ap_return_2;
    end else begin
        layer4_out_62 = layer4_out_62_preg;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_state18) & (1'b1 == ap_CS_fsm_state18))) begin
        layer4_out_62_ap_vld = 1'b1;
    end else begin
        layer4_out_62_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_state18) & (1'b1 == ap_CS_fsm_state18))) begin
        layer4_out_63 = grp_dense_latency_ap_fixed_33_13_5_3_0_ap_fixed_33_13_5_3_0_config4_2_s_fu_768_ap_return_3;
    end else begin
        layer4_out_63 = layer4_out_63_preg;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_state18) & (1'b1 == ap_CS_fsm_state18))) begin
        layer4_out_63_ap_vld = 1'b1;
    end else begin
        layer4_out_63_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_state19) & (1'b1 == ap_CS_fsm_state19))) begin
        layer4_out_64 = grp_dense_latency_ap_fixed_33_13_5_3_0_ap_fixed_33_13_5_3_0_config4_2_s_fu_768_ap_return_0;
    end else begin
        layer4_out_64 = layer4_out_64_preg;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_state19) & (1'b1 == ap_CS_fsm_state19))) begin
        layer4_out_64_ap_vld = 1'b1;
    end else begin
        layer4_out_64_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_state19) & (1'b1 == ap_CS_fsm_state19))) begin
        layer4_out_65 = grp_dense_latency_ap_fixed_33_13_5_3_0_ap_fixed_33_13_5_3_0_config4_2_s_fu_768_ap_return_1;
    end else begin
        layer4_out_65 = layer4_out_65_preg;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_state19) & (1'b1 == ap_CS_fsm_state19))) begin
        layer4_out_65_ap_vld = 1'b1;
    end else begin
        layer4_out_65_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_state19) & (1'b1 == ap_CS_fsm_state19))) begin
        layer4_out_66 = grp_dense_latency_ap_fixed_33_13_5_3_0_ap_fixed_33_13_5_3_0_config4_2_s_fu_768_ap_return_2;
    end else begin
        layer4_out_66 = layer4_out_66_preg;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_state19) & (1'b1 == ap_CS_fsm_state19))) begin
        layer4_out_66_ap_vld = 1'b1;
    end else begin
        layer4_out_66_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_state19) & (1'b1 == ap_CS_fsm_state19))) begin
        layer4_out_67 = grp_dense_latency_ap_fixed_33_13_5_3_0_ap_fixed_33_13_5_3_0_config4_2_s_fu_768_ap_return_3;
    end else begin
        layer4_out_67 = layer4_out_67_preg;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_state19) & (1'b1 == ap_CS_fsm_state19))) begin
        layer4_out_67_ap_vld = 1'b1;
    end else begin
        layer4_out_67_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_state20) & (1'b1 == ap_CS_fsm_state20))) begin
        layer4_out_68 = grp_dense_latency_ap_fixed_33_13_5_3_0_ap_fixed_33_13_5_3_0_config4_2_s_fu_768_ap_return_0;
    end else begin
        layer4_out_68 = layer4_out_68_preg;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_state20) & (1'b1 == ap_CS_fsm_state20))) begin
        layer4_out_68_ap_vld = 1'b1;
    end else begin
        layer4_out_68_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_state20) & (1'b1 == ap_CS_fsm_state20))) begin
        layer4_out_69 = grp_dense_latency_ap_fixed_33_13_5_3_0_ap_fixed_33_13_5_3_0_config4_2_s_fu_768_ap_return_1;
    end else begin
        layer4_out_69 = layer4_out_69_preg;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_state20) & (1'b1 == ap_CS_fsm_state20))) begin
        layer4_out_69_ap_vld = 1'b1;
    end else begin
        layer4_out_69_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_state4) & (1'b1 == ap_CS_fsm_state4))) begin
        layer4_out_6_ap_vld = 1'b1;
    end else begin
        layer4_out_6_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_state4) & (1'b1 == ap_CS_fsm_state4))) begin
        layer4_out_7 = grp_dense_latency_ap_fixed_33_13_5_3_0_ap_fixed_33_13_5_3_0_config4_2_s_fu_768_ap_return_3;
    end else begin
        layer4_out_7 = layer4_out_7_preg;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_state20) & (1'b1 == ap_CS_fsm_state20))) begin
        layer4_out_70 = grp_dense_latency_ap_fixed_33_13_5_3_0_ap_fixed_33_13_5_3_0_config4_2_s_fu_768_ap_return_2;
    end else begin
        layer4_out_70 = layer4_out_70_preg;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_state20) & (1'b1 == ap_CS_fsm_state20))) begin
        layer4_out_70_ap_vld = 1'b1;
    end else begin
        layer4_out_70_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_state20) & (1'b1 == ap_CS_fsm_state20))) begin
        layer4_out_71 = grp_dense_latency_ap_fixed_33_13_5_3_0_ap_fixed_33_13_5_3_0_config4_2_s_fu_768_ap_return_3;
    end else begin
        layer4_out_71 = layer4_out_71_preg;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_state20) & (1'b1 == ap_CS_fsm_state20))) begin
        layer4_out_71_ap_vld = 1'b1;
    end else begin
        layer4_out_71_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state21)) begin
        layer4_out_72 = grp_dense_latency_ap_fixed_33_13_5_3_0_ap_fixed_33_13_5_3_0_config4_2_s_fu_768_ap_return_0;
    end else begin
        layer4_out_72 = layer4_out_72_preg;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state21)) begin
        layer4_out_72_ap_vld = 1'b1;
    end else begin
        layer4_out_72_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state21)) begin
        layer4_out_73 = grp_dense_latency_ap_fixed_33_13_5_3_0_ap_fixed_33_13_5_3_0_config4_2_s_fu_768_ap_return_1;
    end else begin
        layer4_out_73 = layer4_out_73_preg;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state21)) begin
        layer4_out_73_ap_vld = 1'b1;
    end else begin
        layer4_out_73_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state21)) begin
        layer4_out_74 = grp_dense_latency_ap_fixed_33_13_5_3_0_ap_fixed_33_13_5_3_0_config4_2_s_fu_768_ap_return_2;
    end else begin
        layer4_out_74 = layer4_out_74_preg;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state21)) begin
        layer4_out_74_ap_vld = 1'b1;
    end else begin
        layer4_out_74_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state21)) begin
        layer4_out_75 = grp_dense_latency_ap_fixed_33_13_5_3_0_ap_fixed_33_13_5_3_0_config4_2_s_fu_768_ap_return_3;
    end else begin
        layer4_out_75 = layer4_out_75_preg;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state21)) begin
        layer4_out_75_ap_vld = 1'b1;
    end else begin
        layer4_out_75_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state22)) begin
        layer4_out_76 = grp_dense_latency_ap_fixed_33_13_5_3_0_ap_fixed_33_13_5_3_0_config4_2_s_fu_768_ap_return_0;
    end else begin
        layer4_out_76 = layer4_out_76_preg;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state22)) begin
        layer4_out_76_ap_vld = 1'b1;
    end else begin
        layer4_out_76_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state22)) begin
        layer4_out_77 = grp_dense_latency_ap_fixed_33_13_5_3_0_ap_fixed_33_13_5_3_0_config4_2_s_fu_768_ap_return_1;
    end else begin
        layer4_out_77 = layer4_out_77_preg;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state22)) begin
        layer4_out_77_ap_vld = 1'b1;
    end else begin
        layer4_out_77_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state22)) begin
        layer4_out_78 = grp_dense_latency_ap_fixed_33_13_5_3_0_ap_fixed_33_13_5_3_0_config4_2_s_fu_768_ap_return_2;
    end else begin
        layer4_out_78 = layer4_out_78_preg;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state22)) begin
        layer4_out_78_ap_vld = 1'b1;
    end else begin
        layer4_out_78_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state22)) begin
        layer4_out_79 = grp_dense_latency_ap_fixed_33_13_5_3_0_ap_fixed_33_13_5_3_0_config4_2_s_fu_768_ap_return_3;
    end else begin
        layer4_out_79 = layer4_out_79_preg;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state22)) begin
        layer4_out_79_ap_vld = 1'b1;
    end else begin
        layer4_out_79_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_state4) & (1'b1 == ap_CS_fsm_state4))) begin
        layer4_out_7_ap_vld = 1'b1;
    end else begin
        layer4_out_7_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_state5) & (1'b1 == ap_CS_fsm_state5))) begin
        layer4_out_8 = grp_dense_latency_ap_fixed_33_13_5_3_0_ap_fixed_33_13_5_3_0_config4_2_s_fu_768_ap_return_0;
    end else begin
        layer4_out_8 = layer4_out_8_preg;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_state5) & (1'b1 == ap_CS_fsm_state5))) begin
        layer4_out_8_ap_vld = 1'b1;
    end else begin
        layer4_out_8_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_state5) & (1'b1 == ap_CS_fsm_state5))) begin
        layer4_out_9 = grp_dense_latency_ap_fixed_33_13_5_3_0_ap_fixed_33_13_5_3_0_config4_2_s_fu_768_ap_return_1;
    end else begin
        layer4_out_9 = layer4_out_9_preg;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_state5) & (1'b1 == ap_CS_fsm_state5))) begin
        layer4_out_9_ap_vld = 1'b1;
    end else begin
        layer4_out_9_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state20) | (1'b1 == ap_CS_fsm_state19) | (1'b1 == ap_CS_fsm_state18) | (1'b1 == ap_CS_fsm_state17) | (1'b1 == ap_CS_fsm_state16) | (1'b1 == ap_CS_fsm_state15) | (1'b1 == ap_CS_fsm_state14) | (1'b1 == ap_CS_fsm_state13) | (1'b1 == ap_CS_fsm_state12) | (1'b1 == ap_CS_fsm_state11) | (1'b1 == ap_CS_fsm_state10) | (1'b1 == ap_CS_fsm_state9) | (1'b1 == ap_CS_fsm_state8) | (1'b1 == ap_CS_fsm_state7) | (1'b1 == ap_CS_fsm_state6) | (1'b1 == ap_CS_fsm_state5) | (1'b1 == ap_CS_fsm_state4) | (1'b1 == ap_CS_fsm_state3) | (1'b1 == ap_CS_fsm_state2) | (~((ap_done_reg == 1'b1) | (ap_start == 1'b0)) & (1'b1 == ap_CS_fsm_state1)))) begin
        matr_out_0_0_blk_n = matr_out_0_0_empty_n;
    end else begin
        matr_out_0_0_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_state20) & (1'b1 == ap_CS_fsm_state20)) | ((1'b0 == ap_block_state19) & (1'b1 == ap_CS_fsm_state19)) | ((1'b0 == ap_block_state18) & (1'b1 == ap_CS_fsm_state18)) | ((1'b0 == ap_block_state17) & (1'b1 == ap_CS_fsm_state17)) | ((1'b0 == ap_block_state16) & (1'b1 == ap_CS_fsm_state16)) | ((1'b0 == ap_block_state15) & (1'b1 == ap_CS_fsm_state15)) | ((1'b0 == ap_block_state14) & (1'b1 == ap_CS_fsm_state14)) | ((1'b0 == ap_block_state13) & (1'b1 == ap_CS_fsm_state13)) | ((1'b0 == ap_block_state12) & (1'b1 == ap_CS_fsm_state12)) | ((1'b0 == ap_block_state11) & (1'b1 == ap_CS_fsm_state11)) | ((1'b0 == ap_block_state10) & (1'b1 == ap_CS_fsm_state10)) | ((1'b0 == ap_block_state9) & (1'b1 == ap_CS_fsm_state9)) | ((1'b0 == ap_block_state8) & (1'b1 == ap_CS_fsm_state8)) | ((1'b0 == ap_block_state7) & (1'b1 == ap_CS_fsm_state7)) | ((1'b0 == ap_block_state6) & (1'b1 == ap_CS_fsm_state6)) | ((1'b0 == ap_block_state5) & (1'b1 == ap_CS_fsm_state5)) | ((1'b0 == ap_block_state4) & (1'b1 == ap_CS_fsm_state4)) | 
    ((1'b0 == ap_block_state3) & (1'b1 == ap_CS_fsm_state3)) | ((1'b0 == ap_block_state2) & (1'b1 == ap_CS_fsm_state2)) | ((1'b0 == ap_block_state1) & (1'b1 == ap_CS_fsm_state1)))) begin
        matr_out_0_0_read = 1'b1;
    end else begin
        matr_out_0_0_read = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state20) | (1'b1 == ap_CS_fsm_state19) | (1'b1 == ap_CS_fsm_state18) | (1'b1 == ap_CS_fsm_state17) | (1'b1 == ap_CS_fsm_state16) | (1'b1 == ap_CS_fsm_state15) | (1'b1 == ap_CS_fsm_state14) | (1'b1 == ap_CS_fsm_state13) | (1'b1 == ap_CS_fsm_state12) | (1'b1 == ap_CS_fsm_state11) | (1'b1 == ap_CS_fsm_state10) | (1'b1 == ap_CS_fsm_state9) | (1'b1 == ap_CS_fsm_state8) | (1'b1 == ap_CS_fsm_state7) | (1'b1 == ap_CS_fsm_state6) | (1'b1 == ap_CS_fsm_state5) | (1'b1 == ap_CS_fsm_state4) | (1'b1 == ap_CS_fsm_state3) | (1'b1 == ap_CS_fsm_state2) | (~((ap_done_reg == 1'b1) | (ap_start == 1'b0)) & (1'b1 == ap_CS_fsm_state1)))) begin
        matr_out_0_1_blk_n = matr_out_0_1_empty_n;
    end else begin
        matr_out_0_1_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_state20) & (1'b1 == ap_CS_fsm_state20)) | ((1'b0 == ap_block_state19) & (1'b1 == ap_CS_fsm_state19)) | ((1'b0 == ap_block_state18) & (1'b1 == ap_CS_fsm_state18)) | ((1'b0 == ap_block_state17) & (1'b1 == ap_CS_fsm_state17)) | ((1'b0 == ap_block_state16) & (1'b1 == ap_CS_fsm_state16)) | ((1'b0 == ap_block_state15) & (1'b1 == ap_CS_fsm_state15)) | ((1'b0 == ap_block_state14) & (1'b1 == ap_CS_fsm_state14)) | ((1'b0 == ap_block_state13) & (1'b1 == ap_CS_fsm_state13)) | ((1'b0 == ap_block_state12) & (1'b1 == ap_CS_fsm_state12)) | ((1'b0 == ap_block_state11) & (1'b1 == ap_CS_fsm_state11)) | ((1'b0 == ap_block_state10) & (1'b1 == ap_CS_fsm_state10)) | ((1'b0 == ap_block_state9) & (1'b1 == ap_CS_fsm_state9)) | ((1'b0 == ap_block_state8) & (1'b1 == ap_CS_fsm_state8)) | ((1'b0 == ap_block_state7) & (1'b1 == ap_CS_fsm_state7)) | ((1'b0 == ap_block_state6) & (1'b1 == ap_CS_fsm_state6)) | ((1'b0 == ap_block_state5) & (1'b1 == ap_CS_fsm_state5)) | ((1'b0 == ap_block_state4) & (1'b1 == ap_CS_fsm_state4)) | 
    ((1'b0 == ap_block_state3) & (1'b1 == ap_CS_fsm_state3)) | ((1'b0 == ap_block_state2) & (1'b1 == ap_CS_fsm_state2)) | ((1'b0 == ap_block_state1) & (1'b1 == ap_CS_fsm_state1)))) begin
        matr_out_0_1_read = 1'b1;
    end else begin
        matr_out_0_1_read = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state20) | (1'b1 == ap_CS_fsm_state19) | (1'b1 == ap_CS_fsm_state18) | (1'b1 == ap_CS_fsm_state17) | (1'b1 == ap_CS_fsm_state16) | (1'b1 == ap_CS_fsm_state15) | (1'b1 == ap_CS_fsm_state14) | (1'b1 == ap_CS_fsm_state13) | (1'b1 == ap_CS_fsm_state12) | (1'b1 == ap_CS_fsm_state11) | (1'b1 == ap_CS_fsm_state10) | (1'b1 == ap_CS_fsm_state9) | (1'b1 == ap_CS_fsm_state8) | (1'b1 == ap_CS_fsm_state7) | (1'b1 == ap_CS_fsm_state6) | (1'b1 == ap_CS_fsm_state5) | (1'b1 == ap_CS_fsm_state4) | (1'b1 == ap_CS_fsm_state3) | (1'b1 == ap_CS_fsm_state2) | (~((ap_done_reg == 1'b1) | (ap_start == 1'b0)) & (1'b1 == ap_CS_fsm_state1)))) begin
        matr_out_1_0_blk_n = matr_out_1_0_empty_n;
    end else begin
        matr_out_1_0_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_state20) & (1'b1 == ap_CS_fsm_state20)) | ((1'b0 == ap_block_state19) & (1'b1 == ap_CS_fsm_state19)) | ((1'b0 == ap_block_state18) & (1'b1 == ap_CS_fsm_state18)) | ((1'b0 == ap_block_state17) & (1'b1 == ap_CS_fsm_state17)) | ((1'b0 == ap_block_state16) & (1'b1 == ap_CS_fsm_state16)) | ((1'b0 == ap_block_state15) & (1'b1 == ap_CS_fsm_state15)) | ((1'b0 == ap_block_state14) & (1'b1 == ap_CS_fsm_state14)) | ((1'b0 == ap_block_state13) & (1'b1 == ap_CS_fsm_state13)) | ((1'b0 == ap_block_state12) & (1'b1 == ap_CS_fsm_state12)) | ((1'b0 == ap_block_state11) & (1'b1 == ap_CS_fsm_state11)) | ((1'b0 == ap_block_state10) & (1'b1 == ap_CS_fsm_state10)) | ((1'b0 == ap_block_state9) & (1'b1 == ap_CS_fsm_state9)) | ((1'b0 == ap_block_state8) & (1'b1 == ap_CS_fsm_state8)) | ((1'b0 == ap_block_state7) & (1'b1 == ap_CS_fsm_state7)) | ((1'b0 == ap_block_state6) & (1'b1 == ap_CS_fsm_state6)) | ((1'b0 == ap_block_state5) & (1'b1 == ap_CS_fsm_state5)) | ((1'b0 == ap_block_state4) & (1'b1 == ap_CS_fsm_state4)) | 
    ((1'b0 == ap_block_state3) & (1'b1 == ap_CS_fsm_state3)) | ((1'b0 == ap_block_state2) & (1'b1 == ap_CS_fsm_state2)) | ((1'b0 == ap_block_state1) & (1'b1 == ap_CS_fsm_state1)))) begin
        matr_out_1_0_read = 1'b1;
    end else begin
        matr_out_1_0_read = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state20) | (1'b1 == ap_CS_fsm_state19) | (1'b1 == ap_CS_fsm_state18) | (1'b1 == ap_CS_fsm_state17) | (1'b1 == ap_CS_fsm_state16) | (1'b1 == ap_CS_fsm_state15) | (1'b1 == ap_CS_fsm_state14) | (1'b1 == ap_CS_fsm_state13) | (1'b1 == ap_CS_fsm_state12) | (1'b1 == ap_CS_fsm_state11) | (1'b1 == ap_CS_fsm_state10) | (1'b1 == ap_CS_fsm_state9) | (1'b1 == ap_CS_fsm_state8) | (1'b1 == ap_CS_fsm_state7) | (1'b1 == ap_CS_fsm_state6) | (1'b1 == ap_CS_fsm_state5) | (1'b1 == ap_CS_fsm_state4) | (1'b1 == ap_CS_fsm_state3) | (1'b1 == ap_CS_fsm_state2) | (~((ap_done_reg == 1'b1) | (ap_start == 1'b0)) & (1'b1 == ap_CS_fsm_state1)))) begin
        matr_out_1_1_blk_n = matr_out_1_1_empty_n;
    end else begin
        matr_out_1_1_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_state20) & (1'b1 == ap_CS_fsm_state20)) | ((1'b0 == ap_block_state19) & (1'b1 == ap_CS_fsm_state19)) | ((1'b0 == ap_block_state18) & (1'b1 == ap_CS_fsm_state18)) | ((1'b0 == ap_block_state17) & (1'b1 == ap_CS_fsm_state17)) | ((1'b0 == ap_block_state16) & (1'b1 == ap_CS_fsm_state16)) | ((1'b0 == ap_block_state15) & (1'b1 == ap_CS_fsm_state15)) | ((1'b0 == ap_block_state14) & (1'b1 == ap_CS_fsm_state14)) | ((1'b0 == ap_block_state13) & (1'b1 == ap_CS_fsm_state13)) | ((1'b0 == ap_block_state12) & (1'b1 == ap_CS_fsm_state12)) | ((1'b0 == ap_block_state11) & (1'b1 == ap_CS_fsm_state11)) | ((1'b0 == ap_block_state10) & (1'b1 == ap_CS_fsm_state10)) | ((1'b0 == ap_block_state9) & (1'b1 == ap_CS_fsm_state9)) | ((1'b0 == ap_block_state8) & (1'b1 == ap_CS_fsm_state8)) | ((1'b0 == ap_block_state7) & (1'b1 == ap_CS_fsm_state7)) | ((1'b0 == ap_block_state6) & (1'b1 == ap_CS_fsm_state6)) | ((1'b0 == ap_block_state5) & (1'b1 == ap_CS_fsm_state5)) | ((1'b0 == ap_block_state4) & (1'b1 == ap_CS_fsm_state4)) | 
    ((1'b0 == ap_block_state3) & (1'b1 == ap_CS_fsm_state3)) | ((1'b0 == ap_block_state2) & (1'b1 == ap_CS_fsm_state2)) | ((1'b0 == ap_block_state1) & (1'b1 == ap_CS_fsm_state1)))) begin
        matr_out_1_1_read = 1'b1;
    end else begin
        matr_out_1_1_read = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (((1'b0 == ap_block_state1) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            if (((1'b0 == ap_block_state2) & (1'b1 == ap_CS_fsm_state2))) begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end
        end
        ap_ST_fsm_state3 : begin
            if (((1'b0 == ap_block_state3) & (1'b1 == ap_CS_fsm_state3))) begin
                ap_NS_fsm = ap_ST_fsm_state4;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end
        end
        ap_ST_fsm_state4 : begin
            if (((1'b0 == ap_block_state4) & (1'b1 == ap_CS_fsm_state4))) begin
                ap_NS_fsm = ap_ST_fsm_state5;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state4;
            end
        end
        ap_ST_fsm_state5 : begin
            if (((1'b0 == ap_block_state5) & (1'b1 == ap_CS_fsm_state5))) begin
                ap_NS_fsm = ap_ST_fsm_state6;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state5;
            end
        end
        ap_ST_fsm_state6 : begin
            if (((1'b0 == ap_block_state6) & (1'b1 == ap_CS_fsm_state6))) begin
                ap_NS_fsm = ap_ST_fsm_state7;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state6;
            end
        end
        ap_ST_fsm_state7 : begin
            if (((1'b0 == ap_block_state7) & (1'b1 == ap_CS_fsm_state7))) begin
                ap_NS_fsm = ap_ST_fsm_state8;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state7;
            end
        end
        ap_ST_fsm_state8 : begin
            if (((1'b0 == ap_block_state8) & (1'b1 == ap_CS_fsm_state8))) begin
                ap_NS_fsm = ap_ST_fsm_state9;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state8;
            end
        end
        ap_ST_fsm_state9 : begin
            if (((1'b0 == ap_block_state9) & (1'b1 == ap_CS_fsm_state9))) begin
                ap_NS_fsm = ap_ST_fsm_state10;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state9;
            end
        end
        ap_ST_fsm_state10 : begin
            if (((1'b0 == ap_block_state10) & (1'b1 == ap_CS_fsm_state10))) begin
                ap_NS_fsm = ap_ST_fsm_state11;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state10;
            end
        end
        ap_ST_fsm_state11 : begin
            if (((1'b0 == ap_block_state11) & (1'b1 == ap_CS_fsm_state11))) begin
                ap_NS_fsm = ap_ST_fsm_state12;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state11;
            end
        end
        ap_ST_fsm_state12 : begin
            if (((1'b0 == ap_block_state12) & (1'b1 == ap_CS_fsm_state12))) begin
                ap_NS_fsm = ap_ST_fsm_state13;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state12;
            end
        end
        ap_ST_fsm_state13 : begin
            if (((1'b0 == ap_block_state13) & (1'b1 == ap_CS_fsm_state13))) begin
                ap_NS_fsm = ap_ST_fsm_state14;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state13;
            end
        end
        ap_ST_fsm_state14 : begin
            if (((1'b0 == ap_block_state14) & (1'b1 == ap_CS_fsm_state14))) begin
                ap_NS_fsm = ap_ST_fsm_state15;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state14;
            end
        end
        ap_ST_fsm_state15 : begin
            if (((1'b0 == ap_block_state15) & (1'b1 == ap_CS_fsm_state15))) begin
                ap_NS_fsm = ap_ST_fsm_state16;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state15;
            end
        end
        ap_ST_fsm_state16 : begin
            if (((1'b0 == ap_block_state16) & (1'b1 == ap_CS_fsm_state16))) begin
                ap_NS_fsm = ap_ST_fsm_state17;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state16;
            end
        end
        ap_ST_fsm_state17 : begin
            if (((1'b0 == ap_block_state17) & (1'b1 == ap_CS_fsm_state17))) begin
                ap_NS_fsm = ap_ST_fsm_state18;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state17;
            end
        end
        ap_ST_fsm_state18 : begin
            if (((1'b0 == ap_block_state18) & (1'b1 == ap_CS_fsm_state18))) begin
                ap_NS_fsm = ap_ST_fsm_state19;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state18;
            end
        end
        ap_ST_fsm_state19 : begin
            if (((1'b0 == ap_block_state19) & (1'b1 == ap_CS_fsm_state19))) begin
                ap_NS_fsm = ap_ST_fsm_state20;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state19;
            end
        end
        ap_ST_fsm_state20 : begin
            if (((1'b0 == ap_block_state20) & (1'b1 == ap_CS_fsm_state20))) begin
                ap_NS_fsm = ap_ST_fsm_state21;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state20;
            end
        end
        ap_ST_fsm_state21 : begin
            ap_NS_fsm = ap_ST_fsm_state22;
        end
        ap_ST_fsm_state22 : begin
            ap_NS_fsm = ap_ST_fsm_state1;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state10 = ap_CS_fsm[32'd9];

assign ap_CS_fsm_state11 = ap_CS_fsm[32'd10];

assign ap_CS_fsm_state12 = ap_CS_fsm[32'd11];

assign ap_CS_fsm_state13 = ap_CS_fsm[32'd12];

assign ap_CS_fsm_state14 = ap_CS_fsm[32'd13];

assign ap_CS_fsm_state15 = ap_CS_fsm[32'd14];

assign ap_CS_fsm_state16 = ap_CS_fsm[32'd15];

assign ap_CS_fsm_state17 = ap_CS_fsm[32'd16];

assign ap_CS_fsm_state18 = ap_CS_fsm[32'd17];

assign ap_CS_fsm_state19 = ap_CS_fsm[32'd18];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state20 = ap_CS_fsm[32'd19];

assign ap_CS_fsm_state21 = ap_CS_fsm[32'd20];

assign ap_CS_fsm_state22 = ap_CS_fsm[32'd21];

assign ap_CS_fsm_state3 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_state4 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_state5 = ap_CS_fsm[32'd4];

assign ap_CS_fsm_state6 = ap_CS_fsm[32'd5];

assign ap_CS_fsm_state7 = ap_CS_fsm[32'd6];

assign ap_CS_fsm_state8 = ap_CS_fsm[32'd7];

assign ap_CS_fsm_state9 = ap_CS_fsm[32'd8];

always @ (*) begin
    ap_block_state1 = ((matr_out_1_1_empty_n == 1'b0) | (matr_out_1_0_empty_n == 1'b0) | (matr_out_0_1_empty_n == 1'b0) | (matr_out_0_0_empty_n == 1'b0) | (ap_done_reg == 1'b1) | (ap_start == 1'b0));
end

always @ (*) begin
    ap_block_state10 = ((matr_out_1_1_empty_n == 1'b0) | (matr_out_1_0_empty_n == 1'b0) | (matr_out_0_1_empty_n == 1'b0) | (matr_out_0_0_empty_n == 1'b0));
end

always @ (*) begin
    ap_block_state10_ignore_call119 = ((matr_out_1_1_empty_n == 1'b0) | (matr_out_1_0_empty_n == 1'b0) | (matr_out_0_1_empty_n == 1'b0) | (matr_out_0_0_empty_n == 1'b0));
end

always @ (*) begin
    ap_block_state11 = ((matr_out_1_1_empty_n == 1'b0) | (matr_out_1_0_empty_n == 1'b0) | (matr_out_0_1_empty_n == 1'b0) | (matr_out_0_0_empty_n == 1'b0));
end

always @ (*) begin
    ap_block_state11_ignore_call124 = ((matr_out_1_1_empty_n == 1'b0) | (matr_out_1_0_empty_n == 1'b0) | (matr_out_0_1_empty_n == 1'b0) | (matr_out_0_0_empty_n == 1'b0));
end

always @ (*) begin
    ap_block_state12 = ((matr_out_1_1_empty_n == 1'b0) | (matr_out_1_0_empty_n == 1'b0) | (matr_out_0_1_empty_n == 1'b0) | (matr_out_0_0_empty_n == 1'b0));
end

always @ (*) begin
    ap_block_state12_ignore_call129 = ((matr_out_1_1_empty_n == 1'b0) | (matr_out_1_0_empty_n == 1'b0) | (matr_out_0_1_empty_n == 1'b0) | (matr_out_0_0_empty_n == 1'b0));
end

always @ (*) begin
    ap_block_state13 = ((matr_out_1_1_empty_n == 1'b0) | (matr_out_1_0_empty_n == 1'b0) | (matr_out_0_1_empty_n == 1'b0) | (matr_out_0_0_empty_n == 1'b0));
end

always @ (*) begin
    ap_block_state13_ignore_call134 = ((matr_out_1_1_empty_n == 1'b0) | (matr_out_1_0_empty_n == 1'b0) | (matr_out_0_1_empty_n == 1'b0) | (matr_out_0_0_empty_n == 1'b0));
end

always @ (*) begin
    ap_block_state14 = ((matr_out_1_1_empty_n == 1'b0) | (matr_out_1_0_empty_n == 1'b0) | (matr_out_0_1_empty_n == 1'b0) | (matr_out_0_0_empty_n == 1'b0));
end

always @ (*) begin
    ap_block_state14_ignore_call139 = ((matr_out_1_1_empty_n == 1'b0) | (matr_out_1_0_empty_n == 1'b0) | (matr_out_0_1_empty_n == 1'b0) | (matr_out_0_0_empty_n == 1'b0));
end

always @ (*) begin
    ap_block_state15 = ((matr_out_1_1_empty_n == 1'b0) | (matr_out_1_0_empty_n == 1'b0) | (matr_out_0_1_empty_n == 1'b0) | (matr_out_0_0_empty_n == 1'b0));
end

always @ (*) begin
    ap_block_state15_ignore_call144 = ((matr_out_1_1_empty_n == 1'b0) | (matr_out_1_0_empty_n == 1'b0) | (matr_out_0_1_empty_n == 1'b0) | (matr_out_0_0_empty_n == 1'b0));
end

always @ (*) begin
    ap_block_state16 = ((matr_out_1_1_empty_n == 1'b0) | (matr_out_1_0_empty_n == 1'b0) | (matr_out_0_1_empty_n == 1'b0) | (matr_out_0_0_empty_n == 1'b0));
end

always @ (*) begin
    ap_block_state16_ignore_call149 = ((matr_out_1_1_empty_n == 1'b0) | (matr_out_1_0_empty_n == 1'b0) | (matr_out_0_1_empty_n == 1'b0) | (matr_out_0_0_empty_n == 1'b0));
end

always @ (*) begin
    ap_block_state17 = ((matr_out_1_1_empty_n == 1'b0) | (matr_out_1_0_empty_n == 1'b0) | (matr_out_0_1_empty_n == 1'b0) | (matr_out_0_0_empty_n == 1'b0));
end

always @ (*) begin
    ap_block_state17_ignore_call154 = ((matr_out_1_1_empty_n == 1'b0) | (matr_out_1_0_empty_n == 1'b0) | (matr_out_0_1_empty_n == 1'b0) | (matr_out_0_0_empty_n == 1'b0));
end

always @ (*) begin
    ap_block_state18 = ((matr_out_1_1_empty_n == 1'b0) | (matr_out_1_0_empty_n == 1'b0) | (matr_out_0_1_empty_n == 1'b0) | (matr_out_0_0_empty_n == 1'b0));
end

always @ (*) begin
    ap_block_state18_ignore_call159 = ((matr_out_1_1_empty_n == 1'b0) | (matr_out_1_0_empty_n == 1'b0) | (matr_out_0_1_empty_n == 1'b0) | (matr_out_0_0_empty_n == 1'b0));
end

always @ (*) begin
    ap_block_state19 = ((matr_out_1_1_empty_n == 1'b0) | (matr_out_1_0_empty_n == 1'b0) | (matr_out_0_1_empty_n == 1'b0) | (matr_out_0_0_empty_n == 1'b0));
end

always @ (*) begin
    ap_block_state19_ignore_call164 = ((matr_out_1_1_empty_n == 1'b0) | (matr_out_1_0_empty_n == 1'b0) | (matr_out_0_1_empty_n == 1'b0) | (matr_out_0_0_empty_n == 1'b0));
end

always @ (*) begin
    ap_block_state2 = ((matr_out_1_1_empty_n == 1'b0) | (matr_out_1_0_empty_n == 1'b0) | (matr_out_0_1_empty_n == 1'b0) | (matr_out_0_0_empty_n == 1'b0));
end

always @ (*) begin
    ap_block_state20 = ((matr_out_1_1_empty_n == 1'b0) | (matr_out_1_0_empty_n == 1'b0) | (matr_out_0_1_empty_n == 1'b0) | (matr_out_0_0_empty_n == 1'b0));
end

always @ (*) begin
    ap_block_state20_ignore_call169 = ((matr_out_1_1_empty_n == 1'b0) | (matr_out_1_0_empty_n == 1'b0) | (matr_out_0_1_empty_n == 1'b0) | (matr_out_0_0_empty_n == 1'b0));
end

always @ (*) begin
    ap_block_state2_ignore_call84 = ((matr_out_1_1_empty_n == 1'b0) | (matr_out_1_0_empty_n == 1'b0) | (matr_out_0_1_empty_n == 1'b0) | (matr_out_0_0_empty_n == 1'b0));
end

always @ (*) begin
    ap_block_state3 = ((matr_out_1_1_empty_n == 1'b0) | (matr_out_1_0_empty_n == 1'b0) | (matr_out_0_1_empty_n == 1'b0) | (matr_out_0_0_empty_n == 1'b0));
end

always @ (*) begin
    ap_block_state3_ignore_call84 = ((matr_out_1_1_empty_n == 1'b0) | (matr_out_1_0_empty_n == 1'b0) | (matr_out_0_1_empty_n == 1'b0) | (matr_out_0_0_empty_n == 1'b0));
end

always @ (*) begin
    ap_block_state4 = ((matr_out_1_1_empty_n == 1'b0) | (matr_out_1_0_empty_n == 1'b0) | (matr_out_0_1_empty_n == 1'b0) | (matr_out_0_0_empty_n == 1'b0));
end

always @ (*) begin
    ap_block_state4_ignore_call89 = ((matr_out_1_1_empty_n == 1'b0) | (matr_out_1_0_empty_n == 1'b0) | (matr_out_0_1_empty_n == 1'b0) | (matr_out_0_0_empty_n == 1'b0));
end

always @ (*) begin
    ap_block_state5 = ((matr_out_1_1_empty_n == 1'b0) | (matr_out_1_0_empty_n == 1'b0) | (matr_out_0_1_empty_n == 1'b0) | (matr_out_0_0_empty_n == 1'b0));
end

always @ (*) begin
    ap_block_state5_ignore_call94 = ((matr_out_1_1_empty_n == 1'b0) | (matr_out_1_0_empty_n == 1'b0) | (matr_out_0_1_empty_n == 1'b0) | (matr_out_0_0_empty_n == 1'b0));
end

always @ (*) begin
    ap_block_state6 = ((matr_out_1_1_empty_n == 1'b0) | (matr_out_1_0_empty_n == 1'b0) | (matr_out_0_1_empty_n == 1'b0) | (matr_out_0_0_empty_n == 1'b0));
end

always @ (*) begin
    ap_block_state6_ignore_call99 = ((matr_out_1_1_empty_n == 1'b0) | (matr_out_1_0_empty_n == 1'b0) | (matr_out_0_1_empty_n == 1'b0) | (matr_out_0_0_empty_n == 1'b0));
end

always @ (*) begin
    ap_block_state7 = ((matr_out_1_1_empty_n == 1'b0) | (matr_out_1_0_empty_n == 1'b0) | (matr_out_0_1_empty_n == 1'b0) | (matr_out_0_0_empty_n == 1'b0));
end

always @ (*) begin
    ap_block_state7_ignore_call104 = ((matr_out_1_1_empty_n == 1'b0) | (matr_out_1_0_empty_n == 1'b0) | (matr_out_0_1_empty_n == 1'b0) | (matr_out_0_0_empty_n == 1'b0));
end

always @ (*) begin
    ap_block_state8 = ((matr_out_1_1_empty_n == 1'b0) | (matr_out_1_0_empty_n == 1'b0) | (matr_out_0_1_empty_n == 1'b0) | (matr_out_0_0_empty_n == 1'b0));
end

always @ (*) begin
    ap_block_state8_ignore_call109 = ((matr_out_1_1_empty_n == 1'b0) | (matr_out_1_0_empty_n == 1'b0) | (matr_out_0_1_empty_n == 1'b0) | (matr_out_0_0_empty_n == 1'b0));
end

always @ (*) begin
    ap_block_state9 = ((matr_out_1_1_empty_n == 1'b0) | (matr_out_1_0_empty_n == 1'b0) | (matr_out_0_1_empty_n == 1'b0) | (matr_out_0_0_empty_n == 1'b0));
end

always @ (*) begin
    ap_block_state9_ignore_call114 = ((matr_out_1_1_empty_n == 1'b0) | (matr_out_1_0_empty_n == 1'b0) | (matr_out_0_1_empty_n == 1'b0) | (matr_out_0_0_empty_n == 1'b0));
end

endmodule //myproject_dense_out_ap_fixed_33_13_5_3_0_ap_fixed_33_13_5_3_0_config4_s
