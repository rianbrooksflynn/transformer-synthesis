// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
// Version: 2020.1
// Copyright (C) 1986-2020 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module dense_latency_ap_fixed_ap_fixed_33_13_5_3_0_config3_2_0_0_0_0_0 (
        ap_clk,
        ap_rst,
        data_0_V_read,
        data_1_V_read,
        data_2_V_read,
        data_3_V_read,
        ap_return_0,
        ap_return_1,
        ap_return_2,
        ap_return_3,
        ap_ce
);


input   ap_clk;
input   ap_rst;
input  [32:0] data_0_V_read;
input  [32:0] data_1_V_read;
input  [32:0] data_2_V_read;
input  [32:0] data_3_V_read;
output  [32:0] ap_return_0;
output  [32:0] ap_return_1;
output  [32:0] ap_return_2;
output  [32:0] ap_return_3;
input   ap_ce;

reg[32:0] ap_return_0;
reg[32:0] ap_return_1;
reg[32:0] ap_return_2;
reg[32:0] ap_return_3;

reg   [32:0] data_1_V_read_3_reg_1306;
wire    ap_block_state1_pp0_stage0_iter0;
wire    ap_block_state2_pp0_stage0_iter1;
wire    ap_block_pp0_stage0_11001;
reg  signed [32:0] data_0_V_read_3_reg_1311;
reg   [15:0] trunc_ln708_3202_reg_1316;
wire   [15:0] add_ln703_1519_fu_1084_p2;
reg   [15:0] add_ln703_1519_reg_1321;
wire   [15:0] add_ln703_1522_fu_1090_p2;
reg   [15:0] add_ln703_1522_reg_1326;
wire   [15:0] add_ln703_1525_fu_1096_p2;
reg   [15:0] add_ln703_1525_reg_1331;
wire   [15:0] add_ln703_1528_fu_1102_p2;
reg   [15:0] add_ln703_1528_reg_1336;
wire  signed [32:0] mul_ln1118_4016_fu_104_p1;
wire  signed [35:0] sext_ln1116_cast_fu_1108_p1;
wire    ap_block_pp0_stage0;
wire  signed [32:0] mul_ln1118_4022_fu_105_p1;
wire  signed [35:0] sext_ln1116_1718_cast_fu_959_p1;
wire  signed [32:0] mul_ln1118_4023_fu_106_p1;
wire  signed [32:0] mul_ln1118_4018_fu_107_p1;
wire  signed [35:0] sext_ln1116_1717_cast_fu_1144_p1;
wire  signed [32:0] mul_ln1118_4019_fu_108_p1;
wire  signed [32:0] mul_ln1118_4024_fu_109_p1;
wire  signed [32:0] mul_ln1118_4017_fu_111_p1;
wire  signed [32:0] mul_ln1118_fu_112_p1;
wire  signed [32:0] mul_ln1118_4027_fu_113_p1;
wire  signed [35:0] sext_ln1116_1719_cast_fu_1036_p1;
wire  signed [32:0] mul_ln1118_4020_fu_115_p1;
wire  signed [32:0] mul_ln1118_4025_fu_116_p1;
wire  signed [32:0] mul_ln1118_4021_fu_117_p1;
wire  signed [32:0] mul_ln1118_4028_fu_118_p1;
wire  signed [32:0] mul_ln1118_4026_fu_119_p1;
wire  signed [32:0] trunc_ln1118_fu_919_p0;
wire   [26:0] trunc_ln1118_fu_919_p1;
wire  signed [32:0] trunc_ln1118_1_fu_931_p0;
wire   [30:0] trunc_ln1118_1_fu_931_p1;
wire   [35:0] shl_ln1118_1_fu_935_p3;
wire   [35:0] shl_ln_fu_923_p3;
wire   [35:0] sub_ln1118_fu_943_p2;
wire  signed [32:0] sext_ln1116_1718_cast_fu_959_p0;
wire   [35:0] mul_ln1118_4022_fu_105_p2;
wire  signed [32:0] trunc_ln1118_2_fu_976_p0;
wire   [27:0] trunc_ln1118_2_fu_976_p1;
wire  signed [32:0] trunc_ln1118_3_fu_988_p0;
wire   [31:0] trunc_ln1118_3_fu_988_p1;
wire   [35:0] shl_ln1118_2_fu_980_p3;
wire   [35:0] shl_ln1118_3_fu_992_p3;
wire   [35:0] sub_ln1118_1_fu_1000_p2;
wire   [35:0] mul_ln1118_4023_fu_106_p2;
wire   [35:0] mul_ln1118_4024_fu_109_p2;
wire   [35:0] mul_ln1118_4025_fu_116_p2;
wire   [35:0] mul_ln1118_4026_fu_119_p2;
wire   [35:0] mul_ln1118_4027_fu_113_p2;
wire   [35:0] mul_ln1118_4028_fu_118_p2;
wire   [15:0] trunc_ln708_3207_fu_966_p4;
wire   [15:0] trunc_ln708_3211_fu_1044_p4;
wire   [15:0] trunc_ln708_3208_fu_1006_p4;
wire   [15:0] trunc_ln708_3212_fu_1054_p4;
wire   [15:0] trunc_ln708_3209_fu_1016_p4;
wire   [15:0] trunc_ln708_3213_fu_1064_p4;
wire   [15:0] trunc_ln708_3210_fu_1026_p4;
wire   [15:0] trunc_ln708_3214_fu_1074_p4;
wire   [35:0] mul_ln1118_fu_112_p2;
wire   [35:0] mul_ln1118_4016_fu_104_p2;
wire   [35:0] mul_ln1118_4017_fu_111_p2;
wire   [35:0] mul_ln1118_4018_fu_107_p2;
wire   [35:0] mul_ln1118_4019_fu_108_p2;
wire   [35:0] mul_ln1118_4020_fu_115_p2;
wire   [35:0] mul_ln1118_4021_fu_117_p2;
wire   [15:0] trunc_ln708_3203_fu_1151_p4;
wire   [15:0] trunc_ln_fu_1114_p4;
wire   [15:0] add_ln703_fu_1191_p2;
wire   [15:0] trunc_ln708_3204_fu_1161_p4;
wire   [15:0] trunc_ln708_s_fu_1124_p4;
wire   [15:0] add_ln703_1521_fu_1202_p2;
wire   [15:0] trunc_ln708_3205_fu_1171_p4;
wire   [15:0] trunc_ln708_3201_fu_1134_p4;
wire   [15:0] add_ln703_1524_fu_1213_p2;
wire   [15:0] trunc_ln708_3206_fu_1181_p4;
wire   [15:0] add_ln703_1527_fu_1224_p2;
wire   [15:0] p_Val2_s_fu_1197_p2;
wire   [25:0] res_0_V_write_assign_fu_1234_p3;
wire   [15:0] acc_1_V_fu_1208_p2;
wire   [25:0] res_1_V_write_assign_fu_1246_p3;
wire   [15:0] acc_2_V_fu_1219_p2;
wire   [25:0] res_2_V_write_assign_fu_1258_p3;
wire   [15:0] acc_3_V_fu_1229_p2;
wire   [25:0] res_3_V_write_assign_fu_1270_p3;
wire  signed [32:0] sext_ln728_fu_1242_p1;
wire  signed [32:0] sext_ln728_1_fu_1254_p1;
wire  signed [32:0] sext_ln728_2_fu_1266_p1;
wire  signed [32:0] sext_ln728_3_fu_1278_p1;
reg    ap_ce_reg;
reg   [32:0] ap_return_0_int_reg;
reg   [32:0] ap_return_1_int_reg;
reg   [32:0] ap_return_2_int_reg;
reg   [32:0] ap_return_3_int_reg;

always @ (posedge ap_clk) begin
    ap_ce_reg <= ap_ce;
end

always @ (posedge ap_clk) begin
    if (((1'b1 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        add_ln703_1519_reg_1321 <= add_ln703_1519_fu_1084_p2;
        add_ln703_1522_reg_1326 <= add_ln703_1522_fu_1090_p2;
        add_ln703_1525_reg_1331 <= add_ln703_1525_fu_1096_p2;
        add_ln703_1528_reg_1336 <= add_ln703_1528_fu_1102_p2;
        data_0_V_read_3_reg_1311 <= data_0_V_read;
        data_1_V_read_3_reg_1306 <= data_1_V_read;
        trunc_ln708_3202_reg_1316 <= {{sub_ln1118_fu_943_p2[35:20]}};
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_ce_reg)) begin
        ap_return_0_int_reg[32 : 10] <= sext_ln728_fu_1242_p1[32 : 10];
        ap_return_1_int_reg[32 : 10] <= sext_ln728_1_fu_1254_p1[32 : 10];
        ap_return_2_int_reg[32 : 10] <= sext_ln728_2_fu_1266_p1[32 : 10];
        ap_return_3_int_reg[32 : 10] <= sext_ln728_3_fu_1278_p1[32 : 10];
    end
end

always @ (*) begin
    if ((1'b0 == ap_ce_reg)) begin
        ap_return_0 = ap_return_0_int_reg;
    end else if ((1'b1 == ap_ce_reg)) begin
        ap_return_0 = sext_ln728_fu_1242_p1;
    end
end

always @ (*) begin
    if ((1'b0 == ap_ce_reg)) begin
        ap_return_1 = ap_return_1_int_reg;
    end else if ((1'b1 == ap_ce_reg)) begin
        ap_return_1 = sext_ln728_1_fu_1254_p1;
    end
end

always @ (*) begin
    if ((1'b0 == ap_ce_reg)) begin
        ap_return_2 = ap_return_2_int_reg;
    end else if ((1'b1 == ap_ce_reg)) begin
        ap_return_2 = sext_ln728_2_fu_1266_p1;
    end
end

always @ (*) begin
    if ((1'b0 == ap_ce_reg)) begin
        ap_return_3 = ap_return_3_int_reg;
    end else if ((1'b1 == ap_ce_reg)) begin
        ap_return_3 = sext_ln728_3_fu_1278_p1;
    end
end

assign acc_1_V_fu_1208_p2 = (add_ln703_1522_reg_1326 + add_ln703_1521_fu_1202_p2);

assign acc_2_V_fu_1219_p2 = (add_ln703_1525_reg_1331 + add_ln703_1524_fu_1213_p2);

assign acc_3_V_fu_1229_p2 = (add_ln703_1528_reg_1336 + add_ln703_1527_fu_1224_p2);

assign add_ln703_1519_fu_1084_p2 = (trunc_ln708_3207_fu_966_p4 + trunc_ln708_3211_fu_1044_p4);

assign add_ln703_1521_fu_1202_p2 = (trunc_ln708_3204_fu_1161_p4 + trunc_ln708_s_fu_1124_p4);

assign add_ln703_1522_fu_1090_p2 = (trunc_ln708_3208_fu_1006_p4 + trunc_ln708_3212_fu_1054_p4);

assign add_ln703_1524_fu_1213_p2 = (trunc_ln708_3205_fu_1171_p4 + trunc_ln708_3201_fu_1134_p4);

assign add_ln703_1525_fu_1096_p2 = (trunc_ln708_3209_fu_1016_p4 + trunc_ln708_3213_fu_1064_p4);

assign add_ln703_1527_fu_1224_p2 = (trunc_ln708_3206_fu_1181_p4 + trunc_ln708_3202_reg_1316);

assign add_ln703_1528_fu_1102_p2 = (trunc_ln708_3210_fu_1026_p4 + trunc_ln708_3214_fu_1074_p4);

assign add_ln703_fu_1191_p2 = (trunc_ln708_3203_fu_1151_p4 + trunc_ln_fu_1114_p4);

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_state1_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state2_pp0_stage0_iter1 = ~(1'b1 == 1'b1);

assign mul_ln1118_4016_fu_104_p1 = sext_ln1116_cast_fu_1108_p1;

assign mul_ln1118_4016_fu_104_p2 = ($signed({{1'b0}, {36'd695}}) * $signed(mul_ln1118_4016_fu_104_p1));

assign mul_ln1118_4017_fu_111_p1 = sext_ln1116_cast_fu_1108_p1;

assign mul_ln1118_4017_fu_111_p2 = ($signed(36'd68719476340) * $signed(mul_ln1118_4017_fu_111_p1));

assign mul_ln1118_4018_fu_107_p1 = sext_ln1116_1717_cast_fu_1144_p1;

assign mul_ln1118_4018_fu_107_p2 = ($signed({{1'b0}, {36'd550}}) * $signed(mul_ln1118_4018_fu_107_p1));

assign mul_ln1118_4019_fu_108_p1 = sext_ln1116_1717_cast_fu_1144_p1;

assign mul_ln1118_4019_fu_108_p2 = ($signed(36'd68719476053) * $signed(mul_ln1118_4019_fu_108_p1));

assign mul_ln1118_4020_fu_115_p1 = sext_ln1116_1717_cast_fu_1144_p1;

assign mul_ln1118_4020_fu_115_p2 = ($signed({{1'b0}, {36'd109}}) * $signed(mul_ln1118_4020_fu_115_p1));

assign mul_ln1118_4021_fu_117_p1 = sext_ln1116_1717_cast_fu_1144_p1;

assign mul_ln1118_4021_fu_117_p2 = ($signed({{1'b0}, {36'd683}}) * $signed(mul_ln1118_4021_fu_117_p1));

assign mul_ln1118_4022_fu_105_p1 = sext_ln1116_1718_cast_fu_959_p1;

assign mul_ln1118_4022_fu_105_p2 = ($signed(36'd68719476185) * $signed(mul_ln1118_4022_fu_105_p1));

assign mul_ln1118_4023_fu_106_p1 = sext_ln1116_1718_cast_fu_959_p1;

assign mul_ln1118_4023_fu_106_p2 = ($signed({{1'b0}, {36'd312}}) * $signed(mul_ln1118_4023_fu_106_p1));

assign mul_ln1118_4024_fu_109_p1 = sext_ln1116_1718_cast_fu_959_p1;

assign mul_ln1118_4024_fu_109_p2 = ($signed(36'd68719476134) * $signed(mul_ln1118_4024_fu_109_p1));

assign mul_ln1118_4025_fu_116_p1 = sext_ln1116_1719_cast_fu_1036_p1;

assign mul_ln1118_4025_fu_116_p2 = ($signed(36'd68719476196) * $signed(mul_ln1118_4025_fu_116_p1));

assign mul_ln1118_4026_fu_119_p1 = sext_ln1116_1719_cast_fu_1036_p1;

assign mul_ln1118_4026_fu_119_p2 = ($signed({{1'b0}, {36'd601}}) * $signed(mul_ln1118_4026_fu_119_p1));

assign mul_ln1118_4027_fu_113_p1 = sext_ln1116_1719_cast_fu_1036_p1;

assign mul_ln1118_4027_fu_113_p2 = ($signed({{1'b0}, {36'd498}}) * $signed(mul_ln1118_4027_fu_113_p1));

assign mul_ln1118_4028_fu_118_p1 = sext_ln1116_1719_cast_fu_1036_p1;

assign mul_ln1118_4028_fu_118_p2 = ($signed(36'd68719476204) * $signed(mul_ln1118_4028_fu_118_p1));

assign mul_ln1118_fu_112_p1 = sext_ln1116_cast_fu_1108_p1;

assign mul_ln1118_fu_112_p2 = ($signed({{1'b0}, {36'd487}}) * $signed(mul_ln1118_fu_112_p1));

assign p_Val2_s_fu_1197_p2 = (add_ln703_1519_reg_1321 + add_ln703_fu_1191_p2);

assign res_0_V_write_assign_fu_1234_p3 = {{p_Val2_s_fu_1197_p2}, {10'd0}};

assign res_1_V_write_assign_fu_1246_p3 = {{acc_1_V_fu_1208_p2}, {10'd0}};

assign res_2_V_write_assign_fu_1258_p3 = {{acc_2_V_fu_1219_p2}, {10'd0}};

assign res_3_V_write_assign_fu_1270_p3 = {{acc_3_V_fu_1229_p2}, {10'd0}};

assign sext_ln1116_1717_cast_fu_1144_p1 = $signed(data_1_V_read_3_reg_1306);

assign sext_ln1116_1718_cast_fu_959_p0 = data_2_V_read;

assign sext_ln1116_1718_cast_fu_959_p1 = sext_ln1116_1718_cast_fu_959_p0;

assign sext_ln1116_1719_cast_fu_1036_p1 = $signed(data_3_V_read);

assign sext_ln1116_cast_fu_1108_p1 = data_0_V_read_3_reg_1311;

assign sext_ln728_1_fu_1254_p1 = $signed(res_1_V_write_assign_fu_1246_p3);

assign sext_ln728_2_fu_1266_p1 = $signed(res_2_V_write_assign_fu_1258_p3);

assign sext_ln728_3_fu_1278_p1 = $signed(res_3_V_write_assign_fu_1270_p3);

assign sext_ln728_fu_1242_p1 = $signed(res_0_V_write_assign_fu_1234_p3);

assign shl_ln1118_1_fu_935_p3 = {{trunc_ln1118_1_fu_931_p1}, {5'd0}};

assign shl_ln1118_2_fu_980_p3 = {{trunc_ln1118_2_fu_976_p1}, {8'd0}};

assign shl_ln1118_3_fu_992_p3 = {{trunc_ln1118_3_fu_988_p1}, {4'd0}};

assign shl_ln_fu_923_p3 = {{trunc_ln1118_fu_919_p1}, {9'd0}};

assign sub_ln1118_1_fu_1000_p2 = (shl_ln1118_2_fu_980_p3 - shl_ln1118_3_fu_992_p3);

assign sub_ln1118_fu_943_p2 = (shl_ln1118_1_fu_935_p3 - shl_ln_fu_923_p3);

assign trunc_ln1118_1_fu_931_p0 = data_0_V_read;

assign trunc_ln1118_1_fu_931_p1 = trunc_ln1118_1_fu_931_p0[30:0];

assign trunc_ln1118_2_fu_976_p0 = data_2_V_read;

assign trunc_ln1118_2_fu_976_p1 = trunc_ln1118_2_fu_976_p0[27:0];

assign trunc_ln1118_3_fu_988_p0 = data_2_V_read;

assign trunc_ln1118_3_fu_988_p1 = trunc_ln1118_3_fu_988_p0[31:0];

assign trunc_ln1118_fu_919_p0 = data_0_V_read;

assign trunc_ln1118_fu_919_p1 = trunc_ln1118_fu_919_p0[26:0];

assign trunc_ln708_3201_fu_1134_p4 = {{mul_ln1118_4017_fu_111_p2[35:20]}};

assign trunc_ln708_3203_fu_1151_p4 = {{mul_ln1118_4018_fu_107_p2[35:20]}};

assign trunc_ln708_3204_fu_1161_p4 = {{mul_ln1118_4019_fu_108_p2[35:20]}};

assign trunc_ln708_3205_fu_1171_p4 = {{mul_ln1118_4020_fu_115_p2[35:20]}};

assign trunc_ln708_3206_fu_1181_p4 = {{mul_ln1118_4021_fu_117_p2[35:20]}};

assign trunc_ln708_3207_fu_966_p4 = {{mul_ln1118_4022_fu_105_p2[35:20]}};

assign trunc_ln708_3208_fu_1006_p4 = {{sub_ln1118_1_fu_1000_p2[35:20]}};

assign trunc_ln708_3209_fu_1016_p4 = {{mul_ln1118_4023_fu_106_p2[35:20]}};

assign trunc_ln708_3210_fu_1026_p4 = {{mul_ln1118_4024_fu_109_p2[35:20]}};

assign trunc_ln708_3211_fu_1044_p4 = {{mul_ln1118_4025_fu_116_p2[35:20]}};

assign trunc_ln708_3212_fu_1054_p4 = {{mul_ln1118_4026_fu_119_p2[35:20]}};

assign trunc_ln708_3213_fu_1064_p4 = {{mul_ln1118_4027_fu_113_p2[35:20]}};

assign trunc_ln708_3214_fu_1074_p4 = {{mul_ln1118_4028_fu_118_p2[35:20]}};

assign trunc_ln708_s_fu_1124_p4 = {{mul_ln1118_4016_fu_104_p2[35:20]}};

assign trunc_ln_fu_1114_p4 = {{mul_ln1118_fu_112_p2[35:20]}};

always @ (posedge ap_clk) begin
    ap_return_0_int_reg[9:0] <= 10'b0000000000;
    ap_return_1_int_reg[9:0] <= 10'b0000000000;
    ap_return_2_int_reg[9:0] <= 10'b0000000000;
    ap_return_3_int_reg[9:0] <= 10'b0000000000;
end

endmodule //dense_latency_ap_fixed_ap_fixed_33_13_5_3_0_config3_2_0_0_0_0_0
