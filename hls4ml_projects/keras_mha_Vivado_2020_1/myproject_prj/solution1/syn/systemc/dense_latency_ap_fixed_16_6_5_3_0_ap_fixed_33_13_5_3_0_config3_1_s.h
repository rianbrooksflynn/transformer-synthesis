// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
// Version: 2020.1
// Copyright (C) 1986-2020 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#ifndef _dense_latency_ap_fixed_16_6_5_3_0_ap_fixed_33_13_5_3_0_config3_1_s_HH_
#define _dense_latency_ap_fixed_16_6_5_3_0_ap_fixed_33_13_5_3_0_config3_1_s_HH_

#include "systemc.h"
#include "AESL_pkg.h"

#include "myproject_mux_42_16_1_1.h"

namespace ap_rtl {

struct dense_latency_ap_fixed_16_6_5_3_0_ap_fixed_33_13_5_3_0_config3_1_s : public sc_module {
    // Port declarations 20
    sc_in_clk ap_clk;
    sc_in< sc_logic > ap_rst;
    sc_in< sc_logic > ap_start;
    sc_out< sc_logic > ap_done;
    sc_out< sc_logic > ap_idle;
    sc_out< sc_logic > ap_ready;
    sc_in< sc_logic > ap_ce;
    sc_in< sc_lv<16> > data_0_V_read;
    sc_in< sc_lv<16> > data_1_V_read;
    sc_in< sc_lv<16> > data_2_V_read;
    sc_in< sc_lv<16> > data_3_V_read;
    sc_out< sc_lv<4> > weights_V_address0;
    sc_out< sc_logic > weights_V_ce0;
    sc_in< sc_lv<16> > weights_V_q0;
    sc_out< sc_lv<4> > weights_V_address1;
    sc_out< sc_logic > weights_V_ce1;
    sc_in< sc_lv<16> > weights_V_q1;
    sc_in< sc_lv<5> > weights_V_offset;
    sc_in< sc_lv<3> > biases_V_offset;
    sc_out< sc_lv<59> > ap_return;
    sc_signal< sc_lv<16> > ap_var_for_const0;


    // Module declarations
    dense_latency_ap_fixed_16_6_5_3_0_ap_fixed_33_13_5_3_0_config3_1_s(sc_module_name name);
    SC_HAS_PROCESS(dense_latency_ap_fixed_16_6_5_3_0_ap_fixed_33_13_5_3_0_config3_1_s);

    ~dense_latency_ap_fixed_16_6_5_3_0_ap_fixed_33_13_5_3_0_config3_1_s();

    sc_trace_file* mVcdFile;

    myproject_mux_42_16_1_1<1,1,16,16,16,16,2,16>* myproject_mux_42_16_1_1_U31;
    myproject_mux_42_16_1_1<1,1,16,16,16,16,2,16>* myproject_mux_42_16_1_1_U32;
    sc_signal< sc_lv<4> > ap_CS_fsm;
    sc_signal< sc_logic > ap_CS_fsm_pp0_stage0;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter0;
    sc_signal< bool > ap_block_pp0_stage0;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter1;
    sc_signal< sc_logic > ap_idle_pp0;
    sc_signal< sc_logic > ap_CS_fsm_pp0_stage3;
    sc_signal< bool > ap_block_state4_pp0_stage3_iter0;
    sc_signal< bool > ap_block_pp0_stage3_11001;
    sc_signal< bool > ap_block_state1_pp0_stage0_iter0;
    sc_signal< bool > ap_block_state5_pp0_stage0_iter1;
    sc_signal< bool > ap_block_pp0_stage0_11001;
    sc_signal< sc_lv<4> > trunc_ln42_fu_359_p1;
    sc_signal< sc_lv<4> > trunc_ln42_reg_682;
    sc_signal< sc_lv<16> > trunc_ln4_reg_697;
    sc_signal< sc_logic > ap_CS_fsm_pp0_stage1;
    sc_signal< bool > ap_block_state2_pp0_stage1_iter0;
    sc_signal< bool > ap_block_pp0_stage1_11001;
    sc_signal< sc_lv<16> > trunc_ln708_s_reg_702;
    sc_signal< sc_lv<16> > trunc_ln708_3195_reg_717;
    sc_signal< sc_logic > ap_CS_fsm_pp0_stage2;
    sc_signal< bool > ap_block_state3_pp0_stage2_iter0;
    sc_signal< bool > ap_block_pp0_stage2_11001;
    sc_signal< sc_lv<16> > trunc_ln708_3196_reg_722;
    sc_signal< sc_lv<16> > data_3_V_read_2_reg_737;
    sc_signal< sc_lv<2> > trunc_ln15_fu_486_p1;
    sc_signal< sc_lv<2> > trunc_ln15_reg_742;
    sc_signal< sc_lv<16> > trunc_ln708_3197_reg_748;
    sc_signal< sc_lv<16> > trunc_ln708_3198_reg_753;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter0_reg;
    sc_signal< bool > ap_block_pp0_stage0_subdone;
    sc_signal< bool > ap_block_pp0_stage3_subdone;
    sc_signal< sc_lv<16> > ap_port_reg_data_0_V_read;
    sc_signal< sc_lv<16> > ap_port_reg_data_1_V_read;
    sc_signal< sc_lv<16> > ap_port_reg_data_2_V_read;
    sc_signal< sc_lv<16> > ap_port_reg_data_3_V_read;
    sc_signal< sc_lv<3> > ap_port_reg_biases_V_offset;
    sc_signal< sc_lv<64> > zext_ln15_fu_354_p1;
    sc_signal< sc_lv<64> > zext_ln42_fu_369_p1;
    sc_signal< sc_lv<64> > zext_ln42_1_fu_415_p1;
    sc_signal< bool > ap_block_pp0_stage1;
    sc_signal< sc_lv<64> > zext_ln42_2_fu_425_p1;
    sc_signal< sc_lv<64> > zext_ln42_3_fu_471_p1;
    sc_signal< bool > ap_block_pp0_stage2;
    sc_signal< sc_lv<64> > zext_ln42_4_fu_481_p1;
    sc_signal< sc_lv<64> > zext_ln42_5_fu_531_p1;
    sc_signal< bool > ap_block_pp0_stage3;
    sc_signal< sc_lv<64> > zext_ln42_6_fu_541_p1;
    sc_signal< sc_lv<16> > mul_ln1118_4017_fu_177_p0;
    sc_signal< sc_lv<26> > sext_ln1116_1720_cast_fu_430_p1;
    sc_signal< sc_lv<16> > mul_ln1118_4017_fu_177_p1;
    sc_signal< sc_lv<16> > mul_ln1118_4019_fu_178_p0;
    sc_signal< sc_lv<26> > sext_ln1116_1721_cast_fu_490_p1;
    sc_signal< sc_lv<16> > mul_ln1118_4019_fu_178_p1;
    sc_signal< sc_lv<16> > mul_ln1118_4020_fu_179_p0;
    sc_signal< sc_lv<16> > mul_ln1118_4020_fu_179_p1;
    sc_signal< sc_lv<16> > mul_ln1118_4016_fu_180_p0;
    sc_signal< sc_lv<26> > sext_ln1116_cast_fu_374_p1;
    sc_signal< sc_lv<16> > mul_ln1118_4016_fu_180_p1;
    sc_signal< sc_lv<16> > mul_ln1118_fu_181_p0;
    sc_signal< sc_lv<16> > mul_ln1118_fu_181_p1;
    sc_signal< sc_lv<16> > mul_ln1118_4018_fu_182_p0;
    sc_signal< sc_lv<16> > mul_ln1118_4018_fu_182_p1;
    sc_signal< sc_lv<16> > mul_ln1118_4021_fu_183_p0;
    sc_signal< sc_lv<26> > sext_ln1116_1722_cast_fu_546_p1;
    sc_signal< sc_lv<16> > mul_ln1118_4021_fu_183_p1;
    sc_signal< sc_lv<16> > mul_ln1118_4022_fu_184_p0;
    sc_signal< sc_lv<16> > mul_ln1118_4022_fu_184_p1;
    sc_signal< sc_lv<4> > add_ln42_fu_363_p2;
    sc_signal< sc_lv<26> > mul_ln1118_fu_181_p2;
    sc_signal< sc_lv<26> > mul_ln1118_4016_fu_180_p2;
    sc_signal< sc_lv<4> > add_ln42_1_fu_410_p2;
    sc_signal< sc_lv<4> > add_ln42_2_fu_420_p2;
    sc_signal< sc_lv<26> > mul_ln1118_4017_fu_177_p2;
    sc_signal< sc_lv<26> > mul_ln1118_4018_fu_182_p2;
    sc_signal< sc_lv<4> > add_ln42_3_fu_466_p2;
    sc_signal< sc_lv<4> > add_ln42_4_fu_476_p2;
    sc_signal< sc_lv<26> > mul_ln1118_4019_fu_178_p2;
    sc_signal< sc_lv<26> > mul_ln1118_4020_fu_179_p2;
    sc_signal< sc_lv<4> > add_ln42_5_fu_526_p2;
    sc_signal< sc_lv<4> > add_ln42_6_fu_536_p2;
    sc_signal< sc_lv<26> > mul_ln1118_4021_fu_183_p2;
    sc_signal< sc_lv<26> > mul_ln1118_4022_fu_184_p2;
    sc_signal< sc_lv<2> > tmp_43_fu_599_p5;
    sc_signal< sc_lv<16> > tmp_42_fu_581_p6;
    sc_signal< sc_lv<16> > trunc_ln708_3199_fu_556_p4;
    sc_signal< sc_lv<16> > add_ln703_1519_fu_618_p2;
    sc_signal< sc_lv<16> > add_ln703_1520_fu_623_p2;
    sc_signal< sc_lv<16> > add_ln703_fu_613_p2;
    sc_signal< sc_lv<16> > tmp_43_fu_599_p6;
    sc_signal< sc_lv<16> > trunc_ln708_3200_fu_571_p4;
    sc_signal< sc_lv<16> > add_ln703_1523_fu_639_p2;
    sc_signal< sc_lv<16> > add_ln703_1524_fu_644_p2;
    sc_signal< sc_lv<16> > add_ln703_1522_fu_634_p2;
    sc_signal< sc_lv<16> > p_Val2_s_fu_628_p2;
    sc_signal< sc_lv<26> > shl_ln_fu_655_p3;
    sc_signal< sc_lv<16> > acc_1_V_fu_649_p2;
    sc_signal< sc_lv<33> > sext_ln728_fu_663_p1;
    sc_signal< sc_lv<4> > ap_NS_fsm;
    sc_signal< sc_logic > ap_idle_pp0_0to0;
    sc_signal< sc_logic > ap_reset_idle_pp0;
    sc_signal< sc_logic > ap_idle_pp0_1to1;
    sc_signal< bool > ap_block_pp0_stage1_subdone;
    sc_signal< bool > ap_block_pp0_stage2_subdone;
    sc_signal< sc_logic > ap_enable_pp0;
    static const sc_logic ap_const_logic_1;
    static const sc_logic ap_const_logic_0;
    static const sc_lv<4> ap_ST_fsm_pp0_stage0;
    static const sc_lv<4> ap_ST_fsm_pp0_stage1;
    static const sc_lv<4> ap_ST_fsm_pp0_stage2;
    static const sc_lv<4> ap_ST_fsm_pp0_stage3;
    static const bool ap_const_boolean_1;
    static const sc_lv<32> ap_const_lv32_0;
    static const bool ap_const_boolean_0;
    static const sc_lv<32> ap_const_lv32_3;
    static const sc_lv<32> ap_const_lv32_1;
    static const sc_lv<32> ap_const_lv32_2;
    static const sc_lv<4> ap_const_lv4_1;
    static const sc_lv<32> ap_const_lv32_A;
    static const sc_lv<32> ap_const_lv32_19;
    static const sc_lv<4> ap_const_lv4_2;
    static const sc_lv<4> ap_const_lv4_3;
    static const sc_lv<4> ap_const_lv4_4;
    static const sc_lv<4> ap_const_lv4_5;
    static const sc_lv<4> ap_const_lv4_6;
    static const sc_lv<4> ap_const_lv4_7;
    static const sc_lv<16> ap_const_lv16_0;
    static const sc_lv<2> ap_const_lv2_1;
    static const sc_lv<10> ap_const_lv10_0;
    // Thread declarations
    void thread_ap_var_for_const0();
    void thread_ap_clk_no_reset_();
    void thread_acc_1_V_fu_649_p2();
    void thread_add_ln42_1_fu_410_p2();
    void thread_add_ln42_2_fu_420_p2();
    void thread_add_ln42_3_fu_466_p2();
    void thread_add_ln42_4_fu_476_p2();
    void thread_add_ln42_5_fu_526_p2();
    void thread_add_ln42_6_fu_536_p2();
    void thread_add_ln42_fu_363_p2();
    void thread_add_ln703_1519_fu_618_p2();
    void thread_add_ln703_1520_fu_623_p2();
    void thread_add_ln703_1522_fu_634_p2();
    void thread_add_ln703_1523_fu_639_p2();
    void thread_add_ln703_1524_fu_644_p2();
    void thread_add_ln703_fu_613_p2();
    void thread_ap_CS_fsm_pp0_stage0();
    void thread_ap_CS_fsm_pp0_stage1();
    void thread_ap_CS_fsm_pp0_stage2();
    void thread_ap_CS_fsm_pp0_stage3();
    void thread_ap_block_pp0_stage0();
    void thread_ap_block_pp0_stage0_11001();
    void thread_ap_block_pp0_stage0_subdone();
    void thread_ap_block_pp0_stage1();
    void thread_ap_block_pp0_stage1_11001();
    void thread_ap_block_pp0_stage1_subdone();
    void thread_ap_block_pp0_stage2();
    void thread_ap_block_pp0_stage2_11001();
    void thread_ap_block_pp0_stage2_subdone();
    void thread_ap_block_pp0_stage3();
    void thread_ap_block_pp0_stage3_11001();
    void thread_ap_block_pp0_stage3_subdone();
    void thread_ap_block_state1_pp0_stage0_iter0();
    void thread_ap_block_state2_pp0_stage1_iter0();
    void thread_ap_block_state3_pp0_stage2_iter0();
    void thread_ap_block_state4_pp0_stage3_iter0();
    void thread_ap_block_state5_pp0_stage0_iter1();
    void thread_ap_done();
    void thread_ap_enable_pp0();
    void thread_ap_enable_reg_pp0_iter0();
    void thread_ap_idle();
    void thread_ap_idle_pp0();
    void thread_ap_idle_pp0_0to0();
    void thread_ap_idle_pp0_1to1();
    void thread_ap_ready();
    void thread_ap_reset_idle_pp0();
    void thread_ap_return();
    void thread_mul_ln1118_4016_fu_180_p0();
    void thread_mul_ln1118_4016_fu_180_p1();
    void thread_mul_ln1118_4016_fu_180_p2();
    void thread_mul_ln1118_4017_fu_177_p0();
    void thread_mul_ln1118_4017_fu_177_p1();
    void thread_mul_ln1118_4017_fu_177_p2();
    void thread_mul_ln1118_4018_fu_182_p0();
    void thread_mul_ln1118_4018_fu_182_p1();
    void thread_mul_ln1118_4018_fu_182_p2();
    void thread_mul_ln1118_4019_fu_178_p0();
    void thread_mul_ln1118_4019_fu_178_p1();
    void thread_mul_ln1118_4019_fu_178_p2();
    void thread_mul_ln1118_4020_fu_179_p0();
    void thread_mul_ln1118_4020_fu_179_p1();
    void thread_mul_ln1118_4020_fu_179_p2();
    void thread_mul_ln1118_4021_fu_183_p0();
    void thread_mul_ln1118_4021_fu_183_p1();
    void thread_mul_ln1118_4021_fu_183_p2();
    void thread_mul_ln1118_4022_fu_184_p0();
    void thread_mul_ln1118_4022_fu_184_p1();
    void thread_mul_ln1118_4022_fu_184_p2();
    void thread_mul_ln1118_fu_181_p0();
    void thread_mul_ln1118_fu_181_p1();
    void thread_mul_ln1118_fu_181_p2();
    void thread_p_Val2_s_fu_628_p2();
    void thread_sext_ln1116_1720_cast_fu_430_p1();
    void thread_sext_ln1116_1721_cast_fu_490_p1();
    void thread_sext_ln1116_1722_cast_fu_546_p1();
    void thread_sext_ln1116_cast_fu_374_p1();
    void thread_sext_ln728_fu_663_p1();
    void thread_shl_ln_fu_655_p3();
    void thread_tmp_43_fu_599_p5();
    void thread_trunc_ln15_fu_486_p1();
    void thread_trunc_ln42_fu_359_p1();
    void thread_trunc_ln708_3199_fu_556_p4();
    void thread_trunc_ln708_3200_fu_571_p4();
    void thread_weights_V_address0();
    void thread_weights_V_address1();
    void thread_weights_V_ce0();
    void thread_weights_V_ce1();
    void thread_zext_ln15_fu_354_p1();
    void thread_zext_ln42_1_fu_415_p1();
    void thread_zext_ln42_2_fu_425_p1();
    void thread_zext_ln42_3_fu_471_p1();
    void thread_zext_ln42_4_fu_481_p1();
    void thread_zext_ln42_5_fu_531_p1();
    void thread_zext_ln42_6_fu_541_p1();
    void thread_zext_ln42_fu_369_p1();
    void thread_ap_NS_fsm();
};

}

using namespace ap_rtl;

#endif
