-- ==============================================================
-- Generated by Vitis HLS v2023.2
-- Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
-- Copyright 2022-2023 Advanced Micro Devices, Inc. All Rights Reserved.
-- ==============================================================
library ieee; 
use ieee.std_logic_1164.all; 
use ieee.std_logic_unsigned.all;

entity myproject_layernorm_1d_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config2_s_invert_sqr_tabbkb is 
    generic(
             DataWidth     : integer := 21; 
             AddressWidth     : integer := 8; 
             AddressRange    : integer := 256
    ); 
    port (
 
          address0        : in std_logic_vector(AddressWidth-1 downto 0); 
          ce0             : in std_logic; 
          q0              : out std_logic_vector(DataWidth-1 downto 0);

          reset               : in std_logic;
          clk                 : in std_logic
    ); 
end entity; 


architecture rtl of myproject_layernorm_1d_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config2_s_invert_sqr_tabbkb is 
 
signal address0_tmp : std_logic_vector(AddressWidth-1 downto 0); 

type mem_array is array (0 to AddressRange-1) of std_logic_vector (DataWidth-1 downto 0); 

signal mem0 : mem_array := (
    0 => "011110000111010010011", 1 => "011010100101011010001", 2 => "010111001000100100101", 3 => "010011110000101010101", 
    4 => "010000011101100101000", 5 => "001101001111001101000", 6 => "001010000101011011110", 7 => "000111000000001010110", 
    8 => "000011111111010011101", 9 => "000001000010110000000", 10 => "111110001010011001110", 11 => "111011010110001010111", 
    12 => "111000100101111101011", 13 => "110101111001101011110", 14 => "110011010001010000000", 15 => "110000101100100101001", 
    16 => "101110001011100101011", 17 => "101011101110001011101", 18 => "101001010100010010110", 19 => "100110111101110101110", 
    20 => "100100101010101111101", 21 => "100010011010111011101", 22 => "100000001110010101001", 23 => "011110000100110111100", 
    24 => "011011111110011110010", 25 => "011001111011000100111", 26 => "010111111010100111011", 27 => "010101111101000001010", 
    28 => "010100000010001110101", 29 => "010010001010001011011", 30 => "010000010100110011110", 31 => "001110100010000011101", 
    32 => "001100110001110111100", 33 => "001011000100001011110", 34 => "001001011000111100101", 35 => "000111110000000110101", 
    36 => "000110001001100110011", 37 => "000100100101011000101", 38 => "000011000011011010001", 39 => "000001100011100111100", 
    40 => "000000000101111101110", 41 => "111110101010011001110", 42 => "111101010000111000101", 43 => "111011111001010111010", 
    44 => "111010100011110011000", 45 => "111001010000001001000", 46 => "110111111110010110100", 47 => "110110101110011000111", 
    48 => "110101100000001101011", 49 => "110100010011110001101", 50 => "110011001001000011001", 51 => "110001111111111111010", 
    52 => "110000111000100011111", 53 => "101111110010101110100", 54 => "101110101110011100110", 55 => "101101101011101100110", 
    56 => "101100101010011100000", 57 => "101011101010101000100", 58 => "101010101100010000001", 59 => "101001101111010000111", 
    60 => "101000110011101000110", 61 => "100111111001010101111", 62 => "100111000000010110010", 63 => "100110001000101000000", 
    64 => "100101010010001001011", 65 => "100100011100111000101", 66 => "100011101000110011111", 67 => "100010110101111001100", 
    68 => "100010000100001000000", 69 => "100001010011011101100", 70 => "100000100011111000100", 71 => "011111110101010111100", 
    72 => "011111000111111001000", 73 => "011110011011011011011", 74 => "011101101111111101011", 75 => "011101000101011101011", 
    76 => "011100011011111010001", 77 => "011011110011010010010", 78 => "011011001011100100011", 79 => "011010100100101111011", 
    80 => "011001111110110001101", 81 => "011001011001101010010", 82 => "011000110101010111111", 83 => "011000010001111001011", 
    84 => "010111101111001101100", 85 => "010111001101010011001", 86 => "010110101100001001010", 87 => "010110001011101110110", 
    88 => "010101101100000010101", 89 => "010101001101000011101", 90 => "010100101110110001000", 91 => "010100010001001001101", 
    92 => "010011110100001100100", 93 => "010011010111111000111", 94 => "010010111100001101100", 95 => "010010100001001001110", 
    96 => "010010000110101100110", 97 => "010001101100110101011", 98 => "010001010011100011001", 99 => "010000111010110100111", 
    100 => "010000100010101010000", 101 => "010000001011000001101", 102 => "001111110011111011000", 103 => "001111011101010101011", 
    104 => "001111000111010000000", 105 => "001110110001101010010", 106 => "001110011100100011010", 107 => "001110000111111010100", 
    108 => "001101110011101111001", 109 => "001101100000000000101", 110 => "001101001100101110011", 111 => "001100111001110111101", 
    112 => "001100100111011011110", 113 => "001100010101011010010", 114 => "001100000011110010101", 115 => "001011110010100100000", 
    116 => "001011100001101110000", 117 => "001011010001010000001", 118 => "001011000001001001110", 119 => "001010110001011010011", 
    120 => "001010100010000001100", 121 => "001010010010111110101", 122 => "001010000100010001010", 123 => "001001110101111000111", 
    124 => "001001100111110101000", 125 => "001001011010000101010", 126 => "001001001100101001001", 127 => "001000111111100000010", 
    128 => "001000110010101010000", 129 => "001000100110000110010", 130 => "001000011001110100011", 131 => "001000001101110100001", 
    132 => "001000000010000100111", 133 => "000111110110100110100", 134 => "000111101011011000100", 135 => "000111100000011010100", 
    136 => "000111010101101100010", 137 => "000111001011001101010", 138 => "000111000000111101010", 139 => "000110110110111011111", 
    140 => "000110101101001000110", 141 => "000110100011100011110", 142 => "000110011010001100011", 143 => "000110010001000010011", 
    144 => "000110001000000101100", 145 => "000101111111010101011", 146 => "000101110110110001110", 147 => "000101101110011010010", 
    148 => "000101100110001110111", 149 => "000101011110001111001", 150 => "000101010110011010110", 151 => "000101001110110001101", 
    152 => "000101000111010011011", 153 => "000100111111111111110", 154 => "000100111000110110101", 155 => "000100110001110111101", 
    156 => "000100101011000010110", 157 => "000100100100010111100", 158 => "000100011101110101111", 159 => "000100010111011101100", 
    160 => "000100010001001110010", 161 => "000100001011000111111", 162 => "000100000101001010011", 163 => "000011111111010101010", 
    164 => "000011111001101000100", 165 => "000011110100000011111", 166 => "000011101110100111001", 167 => "000011101001010010010", 
    168 => "000011100100000101000", 169 => "000011011110111111010", 170 => "000011011010000000101", 171 => "000011010101001001010", 
    172 => "000011010000011000110", 173 => "000011001011101111000", 174 => "000011000111001100000", 175 => "000011000010101111011", 
    176 => "000010111110011001010", 177 => "000010111010001001010", 178 => "000010110101111111010", 179 => "000010110001111011011", 
    180 => "000010101101111101001", 181 => "000010101010000100101", 182 => "000010100110010001101", 183 => "000010100010100100001", 
    184 => "000010011110111011111", 185 => "000010011011011000111", 186 => "000010010111111010111", 187 => "000010010100100001111", 
    188 => "000010010001001101101", 189 => "000010001101111110010", 190 => "000010001010110011011", 191 => "000010000111101101001", 
    192 => "000010000100101011010", 193 => "000010000001101101101", 194 => "000001111110110100011", 195 => "000001111011111111010", 
    196 => "000001111001001110001", 197 => "000001110110100000111", 198 => "000001110011110111101", 199 => "000001110001010010001", 
    200 => "000001101110110000010", 201 => "000001101100010010000", 202 => "000001101001110111011", 203 => "000001100111100000001", 
    204 => "000001100101001100010", 205 => "000001100010111011101", 206 => "000001100000101110011", 207 => "000001011110100100001", 
    208 => "000001011100011101001", 209 => "000001011010011001000", 210 => "000001011000010111111", 211 => "000001010110011001101", 
    212 => "000001010100011110001", 213 => "000001010010100101100", 214 => "000001010000101111100", 215 => "000001001110111100001", 
    216 => "000001001101001011011", 217 => "000001001011011101001", 218 => "000001001001110001011", 219 => "000001001000001000000", 
    220 => "000001000110100000111", 221 => "000001000100111100001", 222 => "000001000011011001110", 223 => "000001000001111001011", 
    224 => "000001000000011011010", 225 => "000000111110111111010", 226 => "000000111101100101010", 227 => "000000111100001101010", 
    228 => "000000111010110111010", 229 => "000000111001100011001", 230 => "000000111000010001000", 231 => "000000110111000000101", 
    232 => "000000110101110010000", 233 => "000000110100100101001", 234 => "000000110011011010000", 235 => "000000110010010000101", 
    236 => "000000110001001000110", 237 => "000000110000000010101", 238 => "000000101110111110000", 239 => "000000101101111010111", 
    240 => "000000101100111001010", 241 => "000000101011111001001", 242 => "000000101010111010011", 243 => "000000101001111101001", 
    244 => "000000101001000001001", 245 => "000000101000000110101", 246 => "000000100111001101010", 247 => "000000100110010101010", 
    248 => "000000100101011110100", 249 => "000000100100101001000", 250 => "000000100011110100101", 251 => "000000100011000001100", 
    252 => "000000100010001111011", 253 => "000000100001011110100", 254 => "000000100000101110101", 255 => "000000011111111111111");



begin 

 
memory_access_guard_0: process (address0) 
begin
      address0_tmp <= address0;
--synthesis translate_off
      if (CONV_INTEGER(address0) > AddressRange-1) then
           address0_tmp <= (others => '0');
      else 
           address0_tmp <= address0;
      end if;
--synthesis translate_on
end process;

p_rom_access: process (clk)  
begin 
    if (clk'event and clk = '1') then
 
        if (ce0 = '1') then  
            q0 <= mem0(CONV_INTEGER(address0_tmp)); 
        end if;

end if;
end process;

end rtl;

