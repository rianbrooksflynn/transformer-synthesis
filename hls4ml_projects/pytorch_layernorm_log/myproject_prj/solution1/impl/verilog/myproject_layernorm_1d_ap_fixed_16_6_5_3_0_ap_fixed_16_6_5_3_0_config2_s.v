// ==============================================================
// RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL
// Version: 2020.1
// Copyright (C) 1986-2020 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module myproject_layernorm_1d_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config2_s (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        ap_ce,
        p_read,
        p_read1,
        p_read2,
        p_read3,
        p_read4,
        ap_return_0,
        ap_return_1,
        ap_return_2,
        ap_return_3,
        ap_return_4
);

parameter    ap_ST_fsm_pp0_stage0 = 1'd1;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
input   ap_ce;
input  [15:0] p_read;
input  [15:0] p_read1;
input  [15:0] p_read2;
input  [15:0] p_read3;
input  [15:0] p_read4;
output  [15:0] ap_return_0;
output  [15:0] ap_return_1;
output  [15:0] ap_return_2;
output  [15:0] ap_return_3;
output  [15:0] ap_return_4;

reg ap_done;
reg ap_idle;
reg ap_ready;

(* fsm_encoding = "none" *) reg   [0:0] ap_CS_fsm;
wire    ap_CS_fsm_pp0_stage0;
wire    ap_enable_reg_pp0_iter0;
wire    ap_block_pp0_stage0;
reg    ap_enable_reg_pp0_iter1;
reg    ap_enable_reg_pp0_iter2;
reg    ap_enable_reg_pp0_iter3;
reg    ap_enable_reg_pp0_iter4;
reg    ap_idle_pp0;
reg    ap_block_state1_pp0_stage0_iter0;
wire    ap_block_state2_pp0_stage0_iter1;
wire    ap_block_state3_pp0_stage0_iter2;
wire    ap_block_state4_pp0_stage0_iter3;
wire    ap_block_state5_pp0_stage0_iter4;
reg    ap_block_pp0_stage0_11001;
wire   [21:0] shl_ln_fu_85_p3;
reg   [21:0] shl_ln_reg_467;
wire   [21:0] shl_ln728_1_fu_93_p3;
reg   [21:0] shl_ln728_1_reg_472;
wire   [21:0] shl_ln728_2_fu_101_p3;
reg   [21:0] shl_ln728_2_reg_477;
wire   [21:0] shl_ln728_3_fu_109_p3;
reg   [21:0] shl_ln728_3_reg_482;
wire   [21:0] shl_ln728_4_fu_117_p3;
reg   [21:0] shl_ln728_4_reg_487;
reg   [20:0] mean_V_reg_492;
wire  signed [21:0] data_diff_V_0_fu_165_p2;
reg  signed [21:0] data_diff_V_0_reg_497;
reg  signed [21:0] data_diff_V_0_reg_497_pp0_iter2_reg;
reg  signed [21:0] data_diff_V_0_reg_497_pp0_iter3_reg;
wire  signed [21:0] data_diff_V_1_fu_190_p2;
reg  signed [21:0] data_diff_V_1_reg_502;
reg  signed [21:0] data_diff_V_1_reg_502_pp0_iter2_reg;
reg  signed [21:0] data_diff_V_1_reg_502_pp0_iter3_reg;
wire  signed [21:0] data_diff_V_2_fu_215_p2;
reg  signed [21:0] data_diff_V_2_reg_507;
reg  signed [21:0] data_diff_V_2_reg_507_pp0_iter2_reg;
reg  signed [21:0] data_diff_V_2_reg_507_pp0_iter3_reg;
reg   [21:0] trunc_ln708_2_reg_512;
wire  signed [21:0] data_diff_V_3_fu_240_p2;
reg  signed [21:0] data_diff_V_3_reg_517;
reg  signed [21:0] data_diff_V_3_reg_517_pp0_iter2_reg;
reg  signed [21:0] data_diff_V_3_reg_517_pp0_iter3_reg;
wire  signed [21:0] data_diff_V_4_fu_265_p2;
reg  signed [21:0] data_diff_V_4_reg_522;
reg  signed [21:0] data_diff_V_4_reg_522_pp0_iter2_reg;
reg  signed [21:0] data_diff_V_4_reg_522_pp0_iter3_reg;
wire   [21:0] add_ln703_4_fu_290_p2;
reg   [21:0] add_ln703_4_reg_527;
wire   [21:0] add_ln703_5_fu_296_p2;
reg   [21:0] add_ln703_5_reg_532;
reg   [20:0] var_V_reg_537;
reg    ap_block_pp0_stage0_subdone;
wire    grp_lookup_invert_sqr_config2_s_fu_78_ap_start;
wire    grp_lookup_invert_sqr_config2_s_fu_78_ap_done;
wire    grp_lookup_invert_sqr_config2_s_fu_78_ap_idle;
wire    grp_lookup_invert_sqr_config2_s_fu_78_ap_ready;
reg    grp_lookup_invert_sqr_config2_s_fu_78_ap_ce;
wire   [20:0] grp_lookup_invert_sqr_config2_s_fu_78_ap_return;
reg    ap_block_state1_pp0_stage0_iter0_ignore_call46;
wire    ap_block_state2_pp0_stage0_iter1_ignore_call46;
wire    ap_block_state3_pp0_stage0_iter2_ignore_call46;
wire    ap_block_state4_pp0_stage0_iter3_ignore_call46;
wire    ap_block_state5_pp0_stage0_iter4_ignore_call46;
reg    ap_block_pp0_stage0_11001_ignoreCallOp51;
reg    grp_lookup_invert_sqr_config2_s_fu_78_ap_start_reg;
wire   [21:0] add_ln703_1_fu_131_p2;
wire   [21:0] add_ln703_fu_125_p2;
wire   [21:0] add_ln703_2_fu_137_p2;
wire  signed [21:0] add_ln703_3_fu_143_p2;
wire  signed [36:0] r_V_fu_453_p2;
wire  signed [21:0] sext_ln708_fu_162_p1;
wire  signed [21:0] mul_ln708_fu_174_p0;
wire  signed [37:0] sext_ln1118_1_fu_170_p1;
wire  signed [21:0] mul_ln708_fu_174_p1;
wire   [37:0] mul_ln708_fu_174_p2;
wire  signed [21:0] mul_ln708_1_fu_199_p0;
wire  signed [37:0] sext_ln1118_2_fu_195_p1;
wire  signed [21:0] mul_ln708_1_fu_199_p1;
wire   [37:0] mul_ln708_1_fu_199_p2;
wire  signed [21:0] mul_ln708_2_fu_224_p0;
wire  signed [37:0] sext_ln1118_3_fu_220_p1;
wire  signed [21:0] mul_ln708_2_fu_224_p1;
wire   [37:0] mul_ln708_2_fu_224_p2;
wire  signed [21:0] mul_ln708_3_fu_249_p0;
wire  signed [37:0] sext_ln1118_4_fu_245_p1;
wire  signed [21:0] mul_ln708_3_fu_249_p1;
wire   [37:0] mul_ln708_3_fu_249_p2;
wire  signed [21:0] mul_ln708_4_fu_274_p0;
wire  signed [37:0] sext_ln1118_5_fu_270_p1;
wire  signed [21:0] mul_ln708_4_fu_274_p1;
wire   [37:0] mul_ln708_4_fu_274_p2;
wire   [21:0] trunc_ln_fu_180_p4;
wire   [21:0] trunc_ln708_1_fu_205_p4;
wire   [21:0] trunc_ln708_4_fu_280_p4;
wire   [21:0] trunc_ln708_3_fu_255_p4;
wire   [21:0] add_ln703_6_fu_302_p2;
wire  signed [21:0] add_ln703_7_fu_306_p2;
wire  signed [36:0] r_V_1_fu_460_p2;
wire  signed [20:0] mul_ln708_5_fu_331_p0;
wire  signed [35:0] sext_ln1118_8_fu_327_p1;
wire   [35:0] mul_ln708_5_fu_331_p2;
wire  signed [20:0] mul_ln708_6_fu_350_p0;
wire   [35:0] mul_ln708_6_fu_350_p2;
wire  signed [20:0] mul_ln708_7_fu_369_p0;
wire   [35:0] mul_ln708_7_fu_369_p2;
wire  signed [20:0] mul_ln708_8_fu_388_p0;
wire   [35:0] mul_ln708_8_fu_388_p2;
wire  signed [20:0] mul_ln708_9_fu_407_p0;
wire   [35:0] mul_ln708_9_fu_407_p2;
wire   [14:0] r_V_fu_453_p1;
wire   [14:0] r_V_1_fu_460_p1;
reg   [0:0] ap_NS_fsm;
reg    ap_idle_pp0_0to3;
reg    ap_reset_idle_pp0;
wire    ap_enable_pp0;

// power-on initialization
initial begin
#0 ap_CS_fsm = 1'd1;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter2 = 1'b0;
#0 ap_enable_reg_pp0_iter3 = 1'b0;
#0 ap_enable_reg_pp0_iter4 = 1'b0;
#0 grp_lookup_invert_sqr_config2_s_fu_78_ap_start_reg = 1'b0;
end

myproject_lookup_invert_sqr_config2_s grp_lookup_invert_sqr_config2_s_fu_78(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_lookup_invert_sqr_config2_s_fu_78_ap_start),
    .ap_done(grp_lookup_invert_sqr_config2_s_fu_78_ap_done),
    .ap_idle(grp_lookup_invert_sqr_config2_s_fu_78_ap_idle),
    .ap_ready(grp_lookup_invert_sqr_config2_s_fu_78_ap_ready),
    .ap_ce(grp_lookup_invert_sqr_config2_s_fu_78_ap_ce),
    .x(var_V_reg_537),
    .ap_return(grp_lookup_invert_sqr_config2_s_fu_78_ap_return)
);

myproject_mul_22s_22s_38_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 22 ),
    .din1_WIDTH( 22 ),
    .dout_WIDTH( 38 ))
mul_22s_22s_38_1_1_U24(
    .din0(mul_ln708_fu_174_p0),
    .din1(mul_ln708_fu_174_p1),
    .dout(mul_ln708_fu_174_p2)
);

myproject_mul_22s_22s_38_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 22 ),
    .din1_WIDTH( 22 ),
    .dout_WIDTH( 38 ))
mul_22s_22s_38_1_1_U25(
    .din0(mul_ln708_1_fu_199_p0),
    .din1(mul_ln708_1_fu_199_p1),
    .dout(mul_ln708_1_fu_199_p2)
);

myproject_mul_22s_22s_38_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 22 ),
    .din1_WIDTH( 22 ),
    .dout_WIDTH( 38 ))
mul_22s_22s_38_1_1_U26(
    .din0(mul_ln708_2_fu_224_p0),
    .din1(mul_ln708_2_fu_224_p1),
    .dout(mul_ln708_2_fu_224_p2)
);

myproject_mul_22s_22s_38_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 22 ),
    .din1_WIDTH( 22 ),
    .dout_WIDTH( 38 ))
mul_22s_22s_38_1_1_U27(
    .din0(mul_ln708_3_fu_249_p0),
    .din1(mul_ln708_3_fu_249_p1),
    .dout(mul_ln708_3_fu_249_p2)
);

myproject_mul_22s_22s_38_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 22 ),
    .din1_WIDTH( 22 ),
    .dout_WIDTH( 38 ))
mul_22s_22s_38_1_1_U28(
    .din0(mul_ln708_4_fu_274_p0),
    .din1(mul_ln708_4_fu_274_p1),
    .dout(mul_ln708_4_fu_274_p2)
);

myproject_mul_21s_22s_36_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 21 ),
    .din1_WIDTH( 22 ),
    .dout_WIDTH( 36 ))
mul_21s_22s_36_1_1_U29(
    .din0(mul_ln708_5_fu_331_p0),
    .din1(data_diff_V_0_reg_497_pp0_iter3_reg),
    .dout(mul_ln708_5_fu_331_p2)
);

myproject_mul_21s_22s_36_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 21 ),
    .din1_WIDTH( 22 ),
    .dout_WIDTH( 36 ))
mul_21s_22s_36_1_1_U30(
    .din0(mul_ln708_6_fu_350_p0),
    .din1(data_diff_V_1_reg_502_pp0_iter3_reg),
    .dout(mul_ln708_6_fu_350_p2)
);

myproject_mul_21s_22s_36_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 21 ),
    .din1_WIDTH( 22 ),
    .dout_WIDTH( 36 ))
mul_21s_22s_36_1_1_U31(
    .din0(mul_ln708_7_fu_369_p0),
    .din1(data_diff_V_2_reg_507_pp0_iter3_reg),
    .dout(mul_ln708_7_fu_369_p2)
);

myproject_mul_21s_22s_36_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 21 ),
    .din1_WIDTH( 22 ),
    .dout_WIDTH( 36 ))
mul_21s_22s_36_1_1_U32(
    .din0(mul_ln708_8_fu_388_p0),
    .din1(data_diff_V_3_reg_517_pp0_iter3_reg),
    .dout(mul_ln708_8_fu_388_p2)
);

myproject_mul_21s_22s_36_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 21 ),
    .din1_WIDTH( 22 ),
    .dout_WIDTH( 36 ))
mul_21s_22s_36_1_1_U33(
    .din0(mul_ln708_9_fu_407_p0),
    .din1(data_diff_V_4_reg_522_pp0_iter3_reg),
    .dout(mul_ln708_9_fu_407_p2)
);

myproject_mul_mul_22s_15ns_37_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 22 ),
    .din1_WIDTH( 15 ),
    .dout_WIDTH( 37 ))
mul_mul_22s_15ns_37_1_1_U34(
    .din0(add_ln703_3_fu_143_p2),
    .din1(r_V_fu_453_p1),
    .dout(r_V_fu_453_p2)
);

myproject_mul_mul_22s_15ns_37_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 22 ),
    .din1_WIDTH( 15 ),
    .dout_WIDTH( 37 ))
mul_mul_22s_15ns_37_1_1_U35(
    .din0(add_ln703_7_fu_306_p2),
    .din1(r_V_1_fu_460_p1),
    .dout(r_V_1_fu_460_p2)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            ap_enable_reg_pp0_iter1 <= ap_start;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter2 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter3 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter4 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter4 <= ap_enable_reg_pp0_iter3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_lookup_invert_sqr_config2_s_fu_78_ap_start_reg <= 1'b0;
    end else begin
        if (((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_ce))) begin
            grp_lookup_invert_sqr_config2_s_fu_78_ap_start_reg <= 1'b1;
        end else if ((grp_lookup_invert_sqr_config2_s_fu_78_ap_ready == 1'b1)) begin
            grp_lookup_invert_sqr_config2_s_fu_78_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_ce) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        add_ln703_4_reg_527 <= add_ln703_4_fu_290_p2;
        add_ln703_5_reg_532 <= add_ln703_5_fu_296_p2;
        data_diff_V_0_reg_497 <= data_diff_V_0_fu_165_p2;
        data_diff_V_1_reg_502 <= data_diff_V_1_fu_190_p2;
        data_diff_V_2_reg_507 <= data_diff_V_2_fu_215_p2;
        data_diff_V_3_reg_517 <= data_diff_V_3_fu_240_p2;
        data_diff_V_4_reg_522 <= data_diff_V_4_fu_265_p2;
        mean_V_reg_492 <= {{r_V_fu_453_p2[36:16]}};
        shl_ln728_1_reg_472[21 : 6] <= shl_ln728_1_fu_93_p3[21 : 6];
        shl_ln728_2_reg_477[21 : 6] <= shl_ln728_2_fu_101_p3[21 : 6];
        shl_ln728_3_reg_482[21 : 6] <= shl_ln728_3_fu_109_p3[21 : 6];
        shl_ln728_4_reg_487[21 : 6] <= shl_ln728_4_fu_117_p3[21 : 6];
        shl_ln_reg_467[21 : 6] <= shl_ln_fu_85_p3[21 : 6];
        trunc_ln708_2_reg_512 <= {{mul_ln708_2_fu_224_p2[37:16]}};
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_ce))) begin
        data_diff_V_0_reg_497_pp0_iter2_reg <= data_diff_V_0_reg_497;
        data_diff_V_0_reg_497_pp0_iter3_reg <= data_diff_V_0_reg_497_pp0_iter2_reg;
        data_diff_V_1_reg_502_pp0_iter2_reg <= data_diff_V_1_reg_502;
        data_diff_V_1_reg_502_pp0_iter3_reg <= data_diff_V_1_reg_502_pp0_iter2_reg;
        data_diff_V_2_reg_507_pp0_iter2_reg <= data_diff_V_2_reg_507;
        data_diff_V_2_reg_507_pp0_iter3_reg <= data_diff_V_2_reg_507_pp0_iter2_reg;
        data_diff_V_3_reg_517_pp0_iter2_reg <= data_diff_V_3_reg_517;
        data_diff_V_3_reg_517_pp0_iter3_reg <= data_diff_V_3_reg_517_pp0_iter2_reg;
        data_diff_V_4_reg_522_pp0_iter2_reg <= data_diff_V_4_reg_522;
        data_diff_V_4_reg_522_pp0_iter3_reg <= data_diff_V_4_reg_522_pp0_iter2_reg;
        var_V_reg_537 <= {{r_V_1_fu_460_p2[36:16]}};
    end
end

always @ (*) begin
    if ((((ap_start == 1'b0) & (1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_start == 1'b1)) | ((ap_enable_reg_pp0_iter4 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_ce)))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (ap_idle_pp0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter4 == 1'b0) & (ap_enable_reg_pp0_iter3 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter3 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0_0to3 = 1'b1;
    end else begin
        ap_idle_pp0_0to3 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_ce) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_start == 1'b1))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (ap_idle_pp0_0to3 == 1'b1))) begin
        ap_reset_idle_pp0 = 1'b1;
    end else begin
        ap_reset_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001_ignoreCallOp51) & (1'b1 == ap_ce) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_lookup_invert_sqr_config2_s_fu_78_ap_ce = 1'b1;
    end else begin
        grp_lookup_invert_sqr_config2_s_fu_78_ap_ce = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_pp0_stage0 : begin
            ap_NS_fsm = ap_ST_fsm_pp0_stage0;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign add_ln703_1_fu_131_p2 = (shl_ln728_4_fu_117_p3 + shl_ln728_3_fu_109_p3);

assign add_ln703_2_fu_137_p2 = (shl_ln728_2_fu_101_p3 + add_ln703_1_fu_131_p2);

assign add_ln703_3_fu_143_p2 = (add_ln703_fu_125_p2 + add_ln703_2_fu_137_p2);

assign add_ln703_4_fu_290_p2 = (trunc_ln_fu_180_p4 + trunc_ln708_1_fu_205_p4);

assign add_ln703_5_fu_296_p2 = (trunc_ln708_4_fu_280_p4 + trunc_ln708_3_fu_255_p4);

assign add_ln703_6_fu_302_p2 = (trunc_ln708_2_reg_512 + add_ln703_5_reg_532);

assign add_ln703_7_fu_306_p2 = (add_ln703_4_reg_527 + add_ln703_6_fu_302_p2);

assign add_ln703_fu_125_p2 = (shl_ln_fu_85_p3 + shl_ln728_1_fu_93_p3);

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd0];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage0_11001 = ((ap_start == 1'b0) & (ap_start == 1'b1));
end

always @ (*) begin
    ap_block_pp0_stage0_11001_ignoreCallOp51 = ((ap_start == 1'b0) & (ap_start == 1'b1));
end

always @ (*) begin
    ap_block_pp0_stage0_subdone = ((1'b0 == ap_ce) | ((ap_start == 1'b0) & (ap_start == 1'b1)));
end

always @ (*) begin
    ap_block_state1_pp0_stage0_iter0 = (ap_start == 1'b0);
end

always @ (*) begin
    ap_block_state1_pp0_stage0_iter0_ignore_call46 = (ap_start == 1'b0);
end

assign ap_block_state2_pp0_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state2_pp0_stage0_iter1_ignore_call46 = ~(1'b1 == 1'b1);

assign ap_block_state3_pp0_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state3_pp0_stage0_iter2_ignore_call46 = ~(1'b1 == 1'b1);

assign ap_block_state4_pp0_stage0_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state4_pp0_stage0_iter3_ignore_call46 = ~(1'b1 == 1'b1);

assign ap_block_state5_pp0_stage0_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state5_pp0_stage0_iter4_ignore_call46 = ~(1'b1 == 1'b1);

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_enable_reg_pp0_iter0 = ap_start;

assign ap_return_0 = {{mul_ln708_5_fu_331_p2[35:20]}};

assign ap_return_1 = {{mul_ln708_6_fu_350_p2[35:20]}};

assign ap_return_2 = {{mul_ln708_7_fu_369_p2[35:20]}};

assign ap_return_3 = {{mul_ln708_8_fu_388_p2[35:20]}};

assign ap_return_4 = {{mul_ln708_9_fu_407_p2[35:20]}};

assign data_diff_V_0_fu_165_p2 = ($signed(shl_ln_reg_467) - $signed(sext_ln708_fu_162_p1));

assign data_diff_V_1_fu_190_p2 = ($signed(shl_ln728_1_reg_472) - $signed(sext_ln708_fu_162_p1));

assign data_diff_V_2_fu_215_p2 = ($signed(shl_ln728_2_reg_477) - $signed(sext_ln708_fu_162_p1));

assign data_diff_V_3_fu_240_p2 = ($signed(shl_ln728_3_reg_482) - $signed(sext_ln708_fu_162_p1));

assign data_diff_V_4_fu_265_p2 = ($signed(shl_ln728_4_reg_487) - $signed(sext_ln708_fu_162_p1));

assign grp_lookup_invert_sqr_config2_s_fu_78_ap_start = grp_lookup_invert_sqr_config2_s_fu_78_ap_start_reg;

assign mul_ln708_1_fu_199_p0 = sext_ln1118_2_fu_195_p1;

assign mul_ln708_1_fu_199_p1 = sext_ln1118_2_fu_195_p1;

assign mul_ln708_2_fu_224_p0 = sext_ln1118_3_fu_220_p1;

assign mul_ln708_2_fu_224_p1 = sext_ln1118_3_fu_220_p1;

assign mul_ln708_3_fu_249_p0 = sext_ln1118_4_fu_245_p1;

assign mul_ln708_3_fu_249_p1 = sext_ln1118_4_fu_245_p1;

assign mul_ln708_4_fu_274_p0 = sext_ln1118_5_fu_270_p1;

assign mul_ln708_4_fu_274_p1 = sext_ln1118_5_fu_270_p1;

assign mul_ln708_5_fu_331_p0 = sext_ln1118_8_fu_327_p1;

assign mul_ln708_6_fu_350_p0 = sext_ln1118_8_fu_327_p1;

assign mul_ln708_7_fu_369_p0 = sext_ln1118_8_fu_327_p1;

assign mul_ln708_8_fu_388_p0 = sext_ln1118_8_fu_327_p1;

assign mul_ln708_9_fu_407_p0 = sext_ln1118_8_fu_327_p1;

assign mul_ln708_fu_174_p0 = sext_ln1118_1_fu_170_p1;

assign mul_ln708_fu_174_p1 = sext_ln1118_1_fu_170_p1;

assign r_V_1_fu_460_p1 = 37'd13107;

assign r_V_fu_453_p1 = 37'd13107;

assign sext_ln1118_1_fu_170_p1 = data_diff_V_0_fu_165_p2;

assign sext_ln1118_2_fu_195_p1 = data_diff_V_1_fu_190_p2;

assign sext_ln1118_3_fu_220_p1 = data_diff_V_2_fu_215_p2;

assign sext_ln1118_4_fu_245_p1 = data_diff_V_3_fu_240_p2;

assign sext_ln1118_5_fu_270_p1 = data_diff_V_4_fu_265_p2;

assign sext_ln1118_8_fu_327_p1 = $signed(grp_lookup_invert_sqr_config2_s_fu_78_ap_return);

assign sext_ln708_fu_162_p1 = $signed(mean_V_reg_492);

assign shl_ln728_1_fu_93_p3 = {{p_read1}, {6'd0}};

assign shl_ln728_2_fu_101_p3 = {{p_read2}, {6'd0}};

assign shl_ln728_3_fu_109_p3 = {{p_read3}, {6'd0}};

assign shl_ln728_4_fu_117_p3 = {{p_read4}, {6'd0}};

assign shl_ln_fu_85_p3 = {{p_read}, {6'd0}};

assign trunc_ln708_1_fu_205_p4 = {{mul_ln708_1_fu_199_p2[37:16]}};

assign trunc_ln708_3_fu_255_p4 = {{mul_ln708_3_fu_249_p2[37:16]}};

assign trunc_ln708_4_fu_280_p4 = {{mul_ln708_4_fu_274_p2[37:16]}};

assign trunc_ln_fu_180_p4 = {{mul_ln708_fu_174_p2[37:16]}};

always @ (posedge ap_clk) begin
    shl_ln_reg_467[5:0] <= 6'b000000;
    shl_ln728_1_reg_472[5:0] <= 6'b000000;
    shl_ln728_2_reg_477[5:0] <= 6'b000000;
    shl_ln728_3_reg_482[5:0] <= 6'b000000;
    shl_ln728_4_reg_487[5:0] <= 6'b000000;
end

endmodule //myproject_layernorm_1d_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config2_s
